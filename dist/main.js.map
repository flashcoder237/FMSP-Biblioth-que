{"version":3,"file":"main.js","mappings":"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","sources":["webpack://bibliotheque-app/./src/main.ts","webpack://bibliotheque-app/./src/preload.ts","webpack://bibliotheque-app/./src/services/AuthService.ts","webpack://bibliotheque-app/./src/services/BackupService.ts","webpack://bibliotheque-app/./src/services/DatabaseService.ts","webpack://bibliotheque-app/./src/services/SettingsService.ts","webpack://bibliotheque-app/external commonjs \"archiver\"","webpack://bibliotheque-app/external node-commonjs \"crypto\"","webpack://bibliotheque-app/external node-commonjs \"electron\"","webpack://bibliotheque-app/external commonjs \"extract-zip\"","webpack://bibliotheque-app/external node-commonjs \"fs\"","webpack://bibliotheque-app/external node-commonjs \"path\"","webpack://bibliotheque-app/external commonjs \"sqlite3\"","webpack://bibliotheque-app/webpack/bootstrap","webpack://bibliotheque-app/webpack/before-startup","webpack://bibliotheque-app/webpack/startup","webpack://bibliotheque-app/webpack/after-startup"],"sourcesContent":["// src/main.ts - Configuration corrigée pour SQLite3\nimport { app, BrowserWindow, ipcMain, dialog, Notification } from 'electron';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { DatabaseService } from './services/DatabaseService';\nimport { BackupService } from './services/BackupService';\nimport { AuthService } from './services/AuthService';\nimport { ApplicationSettings, SettingsService } from './services/SettingsService';\nimport { AuthCredentials } from './preload';\nimport { RunResult } from 'sqlite3';\n\nlet mainWindow: BrowserWindow;\nlet dbService: DatabaseService;\nlet backupService: BackupService;\nlet authService: AuthService;\nlet settingsService: SettingsService;\n\nfunction createWindow(): void {\n  mainWindow = new BrowserWindow({\n    width: 1200,\n    height: 800,\n    minWidth: 800,\n    minHeight: 600,\n    webPreferences: {\n      nodeIntegration: false,\n      contextIsolation: true,\n      // IMPORTANT: Désactiver sandbox pour SQLite3\n      sandbox: false,\n      preload: path.join(__dirname, 'preload.js'),\n      // Sécurité adaptée pour les modules natifs\n      allowRunningInsecureContent: false,\n      experimentalFeatures: false,\n      webSecurity: true\n    },\n    titleBarStyle: 'hiddenInset',\n    frame: false,\n    show: false,\n    icon: path.join(__dirname, '../assets/icon.png'),\n  });\n\n  // Vérifier que le fichier preload existe\n  const preloadPath = path.join(__dirname, 'preload.js');\n  console.log('Preload path:', preloadPath);\n  console.log('Preload exists:', fs.existsSync(preloadPath));\n\n  if (process.env.NODE_ENV === 'development') {\n    mainWindow.loadURL('http://localhost:8080');\n    mainWindow.webContents.openDevTools();\n  } else {\n    mainWindow.loadFile(path.join(__dirname, 'index.html'));\n  }\n\n  mainWindow.once('ready-to-show', () => {\n    mainWindow.show();\n  });\n\n  // Gestion de la fermeture de l'application\n  mainWindow.on('close', async (event) => {\n    if (backupService && settingsService) {\n      const settings = await settingsService.getSettings();\n      if (settings?.backup.autoBackup) {\n        try {\n          await backupService.createBackup();\n        } catch (error) {\n          console.error('Erreur lors de la sauvegarde automatique:', error);\n        }\n      }\n    }\n  });\n}\n\napp.whenReady().then(async () => {\n  // Initialiser les services\n  try {\n    dbService = new DatabaseService();\n    await dbService.initialize();\n    \n    backupService = new BackupService(dbService);\n    authService = new AuthService();\n    settingsService = new SettingsService();\n    \n    console.log('Services initialisés avec succès');\n    \n    createWindow();\n  } catch (error) {\n    console.error('Erreur lors de l\\'initialisation des services:', error);\n    // Créer la fenêtre même en cas d'erreur pour afficher l'erreur\n    createWindow();\n  }\n\n  app.on('activate', () => {\n    if (BrowserWindow.getAllWindows().length === 0) {\n      createWindow();\n    }\n  });\n});\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\n// Window Controls\nipcMain.handle('window-controls:minimize', () => {\n  mainWindow.minimize();\n});\n\nipcMain.handle('window-controls:maximize', () => {\n  if (mainWindow.isMaximized()) {\n    mainWindow.unmaximize();\n  } else {\n    mainWindow.maximize();\n  }\n});\n\nipcMain.handle('window-controls:close', () => {\n  mainWindow.close();\n});\n\n// Database Operations - Books\nipcMain.handle('db:getBooks', async () => {\n  try {\n    return await dbService.getBooks();\n  } catch (error) {\n    console.error('Erreur getBooks:', error);\n    return [];\n  }\n});\n\nipcMain.handle('db:addBook', async (_, book) => {\n  try {\n    return await dbService.addDocument(book);\n  } catch (error) {\n    console.error('Erreur addBook:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:updateBook', async (_, book) => {\n  try {\n    return await dbService.updateDocument(book);\n  } catch (error) {\n    console.error('Erreur updateBook:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:deleteBook', async (_, id) => {\n  try {\n    return await dbService.deleteDocument(id);\n  } catch (error) {\n    console.error('Erreur deleteBook:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:searchBooks', async (_, query) => {\n  try {\n    return await dbService.searchBooks(query);\n  } catch (error) {\n    console.error('Erreur searchBooks:', error);\n    return [];\n  }\n});\n\n// Database Operations - Authors\nipcMain.handle('db:getAuthors', async () => {\n  try {\n    return await dbService.getAuthors();\n  } catch (error) {\n    console.error('Erreur getAuthors:', error);\n    return [];\n  }\n});\n\nipcMain.handle('db:addAuthor', async (_, author) => {\n  try {\n    return await dbService.addAuthor(author);\n  } catch (error) {\n    console.error('Erreur addAuthor:', error);\n    throw error;\n  }\n});\n\n// Database Operations - Categories\nipcMain.handle('db:getCategories', async () => {\n  try {\n    return await dbService.getCategories();\n  } catch (error) {\n    console.error('Erreur getCategories:', error);\n    return [];\n  }\n});\n\nipcMain.handle('db:addCategory', async (_, category) => {\n  try {\n    return await dbService.addCategory(category);\n  } catch (error) {\n    console.error('Erreur addCategory:', error);\n    throw error;\n  }\n});\n\n// Database Operations - Borrowers\nipcMain.handle('db:getBorrowers', async () => {\n  try {\n    return await dbService.getBorrowers();\n  } catch (error) {\n    console.error('Erreur getBorrowers:', error);\n    return [];\n  }\n});\n\nipcMain.handle('db:addBorrower', async (_, borrower) => {\n  try {\n    return await dbService.addBorrower(borrower);\n  } catch (error) {\n    console.error('Erreur addBorrower:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:updateBorrower', async (_, borrower) => {\n  try {\n    return await dbService.updateBorrower(borrower);\n  } catch (error) {\n    console.error('Erreur updateBorrower:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:deleteBorrower', async (_, id) => {\n  try {\n    return await dbService.deleteBorrower(id);\n  } catch (error) {\n    console.error('Erreur deleteBorrower:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:searchBorrowers', async (_, query) => {\n  try {\n    return await dbService.searchBorrowers(query);\n  } catch (error) {\n    console.error('Erreur searchBorrowers:', error);\n    return [];\n  }\n});\n\n// Database Operations - Borrow Management\nipcMain.handle('db:getBorrowedBooks', async () => {\n  try {\n    return await dbService.getBorrowedBooks();\n  } catch (error) {\n    console.error('Erreur getBorrowedBooks:', error);\n    return [];\n  }\n});\n\nipcMain.handle('db:borrowBook', async (_, bookId, borrowerId, expectedReturnDate) => {\n  try {\n    return await dbService.borrowBook(bookId, borrowerId, expectedReturnDate);\n  } catch (error) {\n    console.error('Erreur borrowBook:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:returnBook', async (_, borrowHistoryId, notes) => {\n  try {\n    return await dbService.returnBook(borrowHistoryId, notes);\n  } catch (error) {\n    console.error('Erreur returnBook:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:getBorrowHistory', async (_, filter) => {\n  try {\n    return await dbService.getBorrowHistory(filter);\n  } catch (error) {\n    console.error('Erreur getBorrowHistory:', error);\n    return [];\n  }\n});\n\nipcMain.handle('db:getStats', async () => {\n  try {\n    return await dbService.getStats();\n  } catch (error) {\n    console.error('Erreur getStats:', error);\n    return {\n      totalBooks: 0,\n      borrowedBooks: 0,\n      availableBooks: 0,\n      totalAuthors: 0,\n      totalCategories: 0,\n      totalBorrowers: 0,\n      totalStudents: 0,\n      totalStaff: 0,\n      overdueBooks: 0\n    };\n  }\n});\n\n// Nouvelles opérations de base de données\nipcMain.handle('db:clearAll', async () => {\n  try {\n    return await dbService.clearDatabase();\n  } catch (error) {\n    console.error('Erreur clearAll:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:export', async () => {\n  const result = await dialog.showSaveDialog(mainWindow, {\n    title: 'Exporter la base de données',\n    defaultPath: `bibliotheque_backup_${new Date().toISOString().split('T')[0]}.db`,\n    filters: [\n      { name: 'Base de données', extensions: ['db'] },\n      { name: 'Tous les fichiers', extensions: ['*'] }\n    ]\n  });\n\n  if (!result.filePath) return null;\n\n  try {\n    await backupService.exportDatabase(result.filePath);\n    return result.filePath;\n  } catch (error) {\n    console.error('Erreur lors de l\\'export:', error);\n    return null;\n  }\n});\n\nipcMain.handle('db:import', async (_, filePath) => {\n  try {\n    await backupService.importDatabase(filePath);\n    return true;\n  } catch (error) {\n    console.error('Erreur lors de l\\'import:', error);\n    return false;\n  }\n});\n\n// Settings Operations\nipcMain.handle('settings:get', async () => {\n  try {\n    return await settingsService.getSettings();\n  } catch (error) {\n    console.error('Erreur settings:get:', error);\n    return null;\n  }\n});\n\nipcMain.handle('settings:save', async (_, settings: ApplicationSettings) => {\n  try {\n    return settingsService.saveUserSettings(settings);\n  } catch (error) {\n    console.error('Erreur settings:save:', error);\n    return false;\n  }\n});\n\n// Backup Operations\nipcMain.handle('backup:create', async () => {\n  try {\n    return await backupService.createBackup();\n  } catch (error) {\n    console.error('Erreur backup:create:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('backup:restore', async () => {\n  const result = await dialog.showOpenDialog(mainWindow, {\n    title: 'Sélectionner une sauvegarde',\n    filters: [\n      { name: 'Sauvegardes', extensions: ['bak', 'backup'] },\n      { name: 'Tous les fichiers', extensions: ['*'] }\n    ],\n    properties: ['openFile']\n  });\n\n  if (result.canceled || !result.filePaths[0]) return false;\n\n  try {\n    await backupService.restoreBackup(result.filePaths[0]);\n    return true;\n  } catch (error) {\n    console.error('Erreur lors de la restauration:', error);\n    return false;\n  }\n});\n\n// Authentication Operations\nipcMain.handle('auth:status', async () => {\n  try {\n    return authService.isAuthenticated();\n  } catch (error) {\n    console.error('Erreur auth:status:', error);\n    return false;\n  }\n});\n\nipcMain.handle('auth:login', async (_, credentials: AuthCredentials) => {\n  try {\n    return await authService.login(credentials);\n  } catch (error) {\n    console.error('Erreur auth:login:', error);\n    return { success: false, error: 'Erreur de connexion' };\n  }\n});\n\nipcMain.handle('auth:logout', async () => {\n  try {\n    return authService.logout();\n  } catch (error) {\n    console.error('Erreur auth:logout:', error);\n    return false;\n  }\n});\n\n// File Operations\nipcMain.handle('file:select', async (_, options = {}) => {\n  const result = await dialog.showOpenDialog(mainWindow, {\n    properties: ['openFile'],\n    filters: [\n      { name: 'Images', extensions: ['jpg', 'jpeg', 'png', 'gif', 'bmp'] },\n      { name: 'Documents', extensions: ['pdf', 'doc', 'docx', 'txt'] },\n      { name: 'Tous les fichiers', extensions: ['*'] }\n    ],\n    ...options\n  });\n\n  return result.canceled ? null : result.filePaths[0];\n});\n\nipcMain.handle('file:selectDirectory', async () => {\n  const result = await dialog.showOpenDialog(mainWindow, {\n    properties: ['openDirectory']\n  });\n\n  return result.canceled ? null : result.filePaths[0];\n});\n\n// Notification Operations\nipcMain.handle('notification:show', async (_, title: string, body: string) => {\n  if (Notification.isSupported()) {\n    new Notification({\n      title,\n      body,\n      icon: path.join(__dirname, '../assets/icon.png')\n    }).show();\n  }\n});\n\n// System Operations\nipcMain.handle('system:info', async () => {\n  return {\n    platform: process.platform,\n    arch: process.arch,\n    version: process.version,\n    appVersion: app.getVersion(),\n    electronVersion: process.versions.electron,\n    chromeVersion: process.versions.chrome,\n    nodeVersion: process.versions.node\n  };\n});\n\nipcMain.handle('system:checkUpdates', async () => {\n  // Placeholder pour la vérification des mises à jour\n  return {\n    hasUpdate: false,\n    currentVersion: app.getVersion(),\n    latestVersion: app.getVersion()\n  };\n});\n\n// Theme Operations\nipcMain.handle('theme:set', async (_, theme: 'light' | 'dark' | 'auto') => {\n  try {\n    await settingsService.setTheme(theme);\n  } catch (error) {\n    console.error('Erreur theme:set:', error);\n  }\n});\n\nipcMain.handle('theme:get', async () => {\n  try {\n    return await settingsService.getTheme();\n  } catch (error) {\n    console.error('Erreur theme:get:', error);\n    return 'light';\n  }\n});\n\n// Statistics Operations\nipcMain.handle('stats:advanced', async () => {\n  const basicStats = await dbService.getStats();\n  const borrowHistory = await dbService.getBorrowHistory();\n  \n  // Calculer des statistiques avancées\n  const now = new Date();\n  const monthlyBorrows = borrowHistory.filter(h => {\n    const borrowDate = new Date(h.borrowDate);\n    return borrowDate.getMonth() === now.getMonth() && borrowDate.getFullYear() === now.getFullYear();\n  }).length;\n\n  const averageBorrowDuration = borrowHistory\n    .filter(h => h.actualReturnDate)\n    .reduce((acc, h) => {\n      const borrowed = new Date(h.borrowDate);\n      const returned = new Date(h.actualReturnDate!);\n      const duration = (returned.getTime() - borrowed.getTime()) / (1000 * 60 * 60 * 24);\n      return acc + duration;\n    }, 0) / borrowHistory.filter(h => h.actualReturnDate).length || 0;\n\n  const topCategories = await getTopCategories();\n  const topBorrowers = await getTopBorrowers();\n\n  return {\n    ...basicStats,\n    monthlyBorrows,\n    averageBorrowDuration: Math.round(averageBorrowDuration),\n    topCategories,\n    topBorrowers\n  };\n});\n\nasync function getTopCategories() {\n  const books = await dbService.getBooks();\n  const categoryCounts = books.reduce((acc: { [key: string]: number }, book) => {\n    acc[book.category] = (acc[book.category] || 0) + 1;\n    return acc;\n  }, {});\n\n  return Object.entries(categoryCounts)\n    .sort(([,a], [,b]) => (b as number) - (a as number))\n    .slice(0, 5)\n    .map(([category, count]) => ({ category, count }));\n}\n\nasync function getTopBorrowers() {\n  const history = await dbService.getBorrowHistory();\n  const borrowerCounts = history.reduce((acc: { [key: string]: number }, h) => {\n    const key = `${h.borrower?.firstName} ${h.borrower?.lastName}`;\n    acc[key] = (acc[key] || 0) + 1;\n    return acc;\n  }, {});\n\n  return Object.entries(borrowerCounts)\n    .sort(([,a], [,b]) => (b as number) - (a as number))\n    .slice(0, 5)\n    .map(([borrower, count]) => ({ borrower, count }));\n}\n\nasync function createPrintWindow(data: any, type: string): Promise<boolean> {\n  return new Promise((resolve) => {\n    const printWindow = new BrowserWindow({\n      width: 800,\n      height: 600,\n      show: false,\n      webPreferences: {\n        nodeIntegration: false,\n        contextIsolation: true,\n        // IMPORTANT: Garder sandbox: false pour SQLite3\n        sandbox: false\n      }\n    });\n\n    const htmlContent = generatePrintHTML(data, type);\n    \n    printWindow.loadURL(`data:text/html;charset=utf-8,${encodeURIComponent(htmlContent)}`);\n    \n    printWindow.webContents.once('did-finish-load', () => {\n      printWindow.webContents.print({\n        silent: false,\n        printBackground: true,\n      }, (success, failureReason) => {\n        printWindow.close();\n        if (!success && failureReason) {\n          console.error('Print failed:', failureReason);\n        }\n        resolve(success);\n      });\n    });\n  });\n}\n\nfunction generatePrintHTML(data: any, type: string): string {\n  const now = new Date().toLocaleDateString('fr-FR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n\n  let title = '';\n  let content = '';\n\n  switch (type) {\n    case 'inventory':\n      title = 'Inventaire Complet de la Bibliothèque';\n      content = generateInventoryContent(data);\n      break;\n    case 'available':\n      title = 'Liste des Livres Disponibles';\n      content = generateAvailableBooksContent(data);\n      break;\n    case 'borrowed':\n      title = 'Liste des Livres Empruntés';\n      content = generateBorrowedBooksContent(data);\n      break;\n    case 'history':\n      title = 'Historique des Emprunts';\n      content = generateHistoryContent(data);\n      break;\n  }\n\n  return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"UTF-8\">\n      <title>${title}</title>\n      <style>\n        @page { \n          margin: 20mm; \n          size: A4; \n        }\n        body {\n          font-family: 'Segoe UI', Arial, sans-serif;\n          margin: 0; \n          padding: 0; \n          color: #2E2E2E; \n          line-height: 1.4;\n          font-size: 12px;\n        }\n        .header {\n          border-bottom: 3px solid #3E5C49;\n          padding-bottom: 20px; \n          margin-bottom: 30px;\n        }\n        .header h1 {\n          color: #3E5C49; \n          margin: 0 0 10px 0;\n          font-size: 24px; \n          font-weight: 700;\n        }\n        .header .subtitle { \n          color: #6E6E6E; \n          font-size: 14px; \n          margin: 5px 0; \n        }\n        .header .date { \n          color: #6E6E6E; \n          font-size: 11px; \n          margin-top: 10px; \n        }\n        .stats-summary {\n          background: #F3EED9; \n          border: 1px solid #E5DCC2;\n          border-radius: 8px; \n          padding: 15px; \n          margin-bottom: 25px;\n          display: grid; \n          grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); \n          gap: 15px;\n        }\n        .stat-item { \n          text-align: center; \n        }\n        .stat-value {\n          font-size: 20px; \n          font-weight: 700;\n          color: #3E5C49; \n          margin-bottom: 5px;\n        }\n        .stat-label {\n          font-size: 10px; \n          color: #6E6E6E;\n          text-transform: uppercase; \n          letter-spacing: 0.5px;\n        }\n        .content-table {\n          width: 100%; \n          border-collapse: collapse;\n          margin-bottom: 20px; \n          font-size: 10px;\n        }\n        .content-table th, .content-table td {\n          padding: 8px 6px; \n          text-align: left; \n          border-bottom: 1px solid #E5DCC2;\n          word-wrap: break-word;\n        }\n        .content-table th {\n          background: #F3EED9; \n          font-weight: 600;\n          color: #2E2E2E; \n          border-bottom: 2px solid #E5DCC2;\n          font-size: 9px;\n        }\n        .content-table tr:nth-child(even) { \n          background: #FAF9F6; \n        }\n        .category-tag {\n          background: #3E5C49; \n          color: white;\n          padding: 1px 6px; \n          border-radius: 10px;\n          font-size: 8px; \n          font-weight: 500;\n        }\n        .status-available { \n          color: #3E5C49; \n          font-weight: 600; \n        }\n        .status-borrowed { \n          color: #C2571B; \n          font-weight: 600; \n        }\n        .status-returned { \n          color: #3E5C49; \n          font-weight: 600; \n        }\n        .status-overdue { \n          color: #DC2626; \n          font-weight: 600; \n        }\n        .borrower-type {\n          font-size: 8px;\n          text-transform: uppercase;\n          font-weight: 600;\n          color: #6E6E6E;\n        }\n        .page-break {\n          page-break-before: always;\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"header\">\n        <h1>${title}</h1>\n        <div class=\"subtitle\">Système de Gestion de Bibliothèque</div>\n        <div class=\"date\">Généré le ${now}</div>\n      </div>\n      ${content}\n    </body>\n    </html>\n    `;\n}\n\nfunction generateInventoryContent(data: any): string {\n  const { books, stats } = data;\n  \n  return `\n    <div class=\"stats-summary\">\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.totalBooks}</div>\n        <div class=\"stat-label\">Total Livres</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.availableBooks}</div>\n        <div class=\"stat-label\">Disponibles</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.borrowedBooks}</div>\n        <div class=\"stat-label\">Empruntés</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.totalAuthors}</div>\n        <div class=\"stat-label\">Auteurs</div>\n      </div>\n    </div>\n    \n    <table class=\"content-table\">\n      <thead>\n        <tr>\n          <th style=\"width: 25%;\">Titre</th>\n          <th style=\"width: 20%;\">Auteur</th>\n          <th style=\"width: 15%;\">Catégorie</th>\n          <th style=\"width: 10%;\">ISBN</th>\n          <th style=\"width: 8%;\">Année</th>\n          <th style=\"width: 10%;\">Statut</th>\n          <th style=\"width: 12%;\">Emprunteur/Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${books.map((book: any) => `\n          <tr>\n            <td><strong>${book.title}</strong></td>\n            <td>${book.author}</td>\n            <td><span class=\"category-tag\">${book.category}</span></td>\n            <td>${book.isbn || '-'}</td>\n            <td>${book.publishedDate || '-'}</td>\n            <td>\n              <span class=\"${book.isBorrowed ? 'status-borrowed' : 'status-available'}\">\n                ${book.isBorrowed ? 'Emprunté' : 'Disponible'}\n              </span>\n            </td>\n            <td>\n              ${book.borrowerId ? `${book.borrower?.firstName || ''} ${book.borrower?.lastName || ''}<br/>` : '-'}\n              ${book.borrowDate ? new Date(book.borrowDate).toLocaleDateString('fr-FR') : ''}\n            </td>\n          </tr>\n        `).join('')}\n      </tbody>\n    </table>\n  `;\n}\n\nfunction generateAvailableBooksContent(data: any): string {\n  const { books, stats } = data;\n  const availableBooks = books.filter((book: any) => !book.isBorrowed);\n  \n  return `\n    <div class=\"stats-summary\">\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${availableBooks.length}</div>\n        <div class=\"stat-label\">Livres Disponibles</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.totalBooks}</div>\n        <div class=\"stat-label\">Total Livres</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${((availableBooks.length / (stats.totalBooks || 1)) * 100).toFixed(1)}%</div>\n        <div class=\"stat-label\">Taux Disponibilité</div>\n      </div>\n    </div>\n    \n    <table class=\"content-table\">\n      <thead>\n        <tr>\n          <th style=\"width: 30%;\">Titre</th>\n          <th style=\"width: 25%;\">Auteur</th>\n          <th style=\"width: 15%;\">Catégorie</th>\n          <th style=\"width: 15%;\">ISBN</th>\n          <th style=\"width: 15%;\">Année Publication</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${availableBooks.map((book: any) => `\n          <tr>\n            <td><strong>${book.title}</strong></td>\n            <td>${book.author}</td>\n            <td><span class=\"category-tag\">${book.category}</span></td>\n            <td>${book.isbn || '-'}</td>\n            <td>${book.publishedDate || '-'}</td>\n          </tr>\n        `).join('')}\n      </tbody>\n    </table>\n  `;\n}\n\nfunction generateBorrowedBooksContent(data: any): string {\n  const { history } = data;\n  \n  return `\n    <div class=\"stats-summary\">\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${history.length}</div>\n        <div class=\"stat-label\">Livres Empruntés</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${history.filter((h: any) => h.status === 'overdue').length}</div>\n        <div class=\"stat-label\">En Retard</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${history.filter((h: any) => h.borrower?.type === 'student').length}</div>\n        <div class=\"stat-label\">Étudiants</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${history.filter((h: any) => h.borrower?.type === 'staff').length}</div>\n        <div class=\"stat-label\">Personnel</div>\n      </div>\n    </div>\n    \n    <table class=\"content-table\">\n      <thead>\n        <tr>\n          <th style=\"width: 20%;\">Livre</th>\n          <th style=\"width: 15%;\">Auteur</th>\n          <th style=\"width: 15%;\">Emprunteur</th>\n          <th style=\"width: 10%;\">Type</th>\n          <th style=\"width: 12%;\">Matricule/Classe</th>\n          <th style=\"width: 10%;\">Date Emprunt</th>\n          <th style=\"width: 10%;\">Retour Prévu</th>\n          <th style=\"width: 8%;\">Statut</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${history.map((item: any) => {\n          const borrowDate = new Date(item.borrowDate);\n          const expectedDate = new Date(item.expectedReturnDate);\n          const today = new Date();\n          const isOverdue = today > expectedDate && item.status === 'active';\n          \n          return `\n            <tr>\n              <td><strong>${item.book?.title}</strong></td>\n              <td>${item.book?.author}</td>\n              <td><strong>${item.borrower?.firstName} ${item.borrower?.lastName}</strong></td>\n              <td>\n                <span class=\"borrower-type\">\n                  ${item.borrower?.type === 'student' ? 'Étudiant' : 'Personnel'}\n                </span>\n              </td>\n              <td>\n                ${item.borrower?.matricule}<br/>\n                <small>${item.borrower?.type === 'student' ? item.borrower?.classe || '' : item.borrower?.position || ''}</small>\n              </td>\n              <td>${borrowDate.toLocaleDateString('fr-FR')}</td>\n              <td>${expectedDate.toLocaleDateString('fr-FR')}</td>\n              <td>\n                <span class=\"${isOverdue ? 'status-overdue' : item.status === 'returned' ? 'status-returned' : 'status-borrowed'}\">\n                  ${isOverdue ? 'En retard' : item.status === 'returned' ? 'Rendu' : 'En cours'}\n                </span>\n              </td>\n            </tr>\n          `;\n        }).join('')}\n      </tbody>\n    </table>\n  `;\n}\n\nfunction generateHistoryContent(data: any): string {\n  const { history, filters, stats } = data;\n  \n  const filterInfo = [];\n  if (filters.startDate) filterInfo.push(`Du ${new Date(filters.startDate).toLocaleDateString('fr-FR')}`);\n  if (filters.endDate) filterInfo.push(`Au ${new Date(filters.endDate).toLocaleDateString('fr-FR')}`);\n  if (filters.borrowerType && filters.borrowerType !== 'all') {\n    filterInfo.push(`Type: ${filters.borrowerType === 'student' ? 'Étudiants' : 'Personnel'}`);\n  }\n  if (filters.status && filters.status !== 'all') {\n    const statusLabels = {\n      active: 'En cours',\n      returned: 'Rendus',\n      overdue: 'En retard'\n    };\n    filterInfo.push(`Statut: ${statusLabels[filters.status as keyof typeof statusLabels]}`);\n  }\n  \n  return `\n    ${filterInfo.length > 0 ? `\n      <div style=\"background: #F3EED9; padding: 15px; border-radius: 8px; margin-bottom: 20px; border: 1px solid #E5DCC2;\">\n        <strong>Filtres appliqués:</strong> ${filterInfo.join(' • ')}\n      </div>\n    ` : ''}\n    \n    <div class=\"stats-summary\">\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.total}</div>\n        <div class=\"stat-label\">Total Emprunts</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.active}</div>\n        <div class=\"stat-label\">En Cours</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.returned}</div>\n        <div class=\"stat-label\">Rendus</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.overdue}</div>\n        <div class=\"stat-label\">En Retard</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.students}</div>\n        <div class=\"stat-label\">Étudiants</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.staff}</div>\n        <div class=\"stat-label\">Personnel</div>\n      </div>\n    </div>\n    \n    <table class=\"content-table\">\n      <thead>\n        <tr>\n          <th style=\"width: 18%;\">Livre</th>\n          <th style=\"width: 12%;\">Auteur</th>\n          <th style=\"width: 15%;\">Emprunteur</th>\n          <th style=\"width: 8%;\">Type</th>\n          <th style=\"width: 10%;\">Matricule</th>\n          <th style=\"width: 10%;\">Date Emprunt</th>\n          <th style=\"width: 10%;\">Retour Prévu</th>\n          <th style=\"width: 10%;\">Retour Effectué</th>\n          <th style=\"width: 7%;\">Statut</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${history.map((item: any) => {\n          const borrowDate = new Date(item.borrowDate);\n          const expectedDate = new Date(item.expectedReturnDate);\n          const actualDate = item.actualReturnDate ? new Date(item.actualReturnDate) : null;\n          \n          return `\n            <tr>\n              <td><strong>${item.book?.title}</strong></td>\n              <td>${item.book?.author}</td>\n              <td><strong>${item.borrower?.firstName} ${item.borrower?.lastName}</strong></td>\n              <td>\n                <span class=\"borrower-type\">\n                  ${item.borrower?.type === 'student' ? 'ÉTU' : 'PERS'}\n                </span>\n              </td>\n              <td>\n                ${item.borrower?.matricule}<br/>\n                <small>${item.borrower?.type === 'student' ? item.borrower?.classe || '' : item.borrower?.position || ''}</small>\n              </td>\n              <td>\n                ${borrowDate.toLocaleDateString('fr-FR')}<br/>\n                <small>${borrowDate.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' })}</small>\n              </td>\n              <td>${expectedDate.toLocaleDateString('fr-FR')}</td>\n              <td>\n                ${actualDate ? `\n                  ${actualDate.toLocaleDateString('fr-FR')}<br/>\n                  <small>${actualDate.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' })}</small>\n                ` : '-'}\n              </td>\n              <td>\n                <span class=\"status-${item.status}\">\n                  ${item.status === 'active' ? 'En cours' : \n                    item.status === 'returned' ? 'Rendu' : 'En retard'}\n                </span>\n              </td>\n            </tr>\n          `;\n        }).join('')}\n      </tbody>\n    </table>\n    \n    ${history.some((item: any) => item.notes) ? `\n      <div class=\"page-break\"></div>\n      <h2 style=\"color: #3E5C49; margin-top: 30px;\">Notes et Observations</h2>\n      <table class=\"content-table\">\n        <thead>\n          <tr>\n            <th style=\"width: 25%;\">Livre</th>\n            <th style=\"width: 20%;\">Emprunteur</th>\n            <th style=\"width: 15%;\">Date Retour</th>\n            <th style=\"width: 40%;\">Notes</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${history.filter((item: any) => item.notes).map((item: any) => `\n            <tr>\n              <td><strong>${item.book?.title}</strong></td>\n              <td>${item.borrower?.firstName} ${item.borrower?.lastName}</td>\n              <td>${item.actualReturnDate ? new Date(item.actualReturnDate).toLocaleDateString('fr-FR') : '-'}</td>\n              <td>${item.notes}</td>\n            </tr>\n          `).join('')}\n        </tbody>\n      </table>\n    ` : ''}\n  `;\n}\n\nasync function exportToCSV(data: any): Promise<string | null> {\n  try {\n    const result = await dialog.showSaveDialog(mainWindow, {\n      title: 'Exporter en CSV',\n      defaultPath: `bibliotheque_export_${new Date().toISOString().split('T')[0]}.csv`,\n      filters: [\n        { name: 'CSV Files', extensions: ['csv'] },\n        { name: 'All Files', extensions: ['*'] }\n      ]\n    });\n\n    if (!result.filePath) return null;\n\n    let csvContent = '';\n    \n    // Déterminer le type de données à exporter\n    if (data.history) {\n      // Export historique\n      const csvHeaders = [\n        'Date Emprunt',\n        'Heure Emprunt',\n        'Livre',\n        'Auteur',\n        'Catégorie',\n        'ISBN',\n        'Emprunteur',\n        'Type Emprunteur',\n        'Matricule',\n        'Classe/Poste',\n        'Date Retour Prévue',\n        'Date Retour Effective',\n        'Heure Retour',\n        'Statut',\n        'Durée (jours)',\n        'Retard (jours)',\n        'Notes'\n      ];\n\n      const csvRows = data.history.map((item: any) => {\n        const borrowDate = new Date(item.borrowDate);\n        const expectedDate = new Date(item.expectedReturnDate);\n        const actualDate = item.actualReturnDate ? new Date(item.actualReturnDate) : null;\n        \n        const duration = actualDate ? \n          Math.ceil((actualDate.getTime() - borrowDate.getTime()) / (1000 * 60 * 60 * 24)) : \n          Math.ceil((new Date().getTime() - borrowDate.getTime()) / (1000 * 60 * 60 * 24));\n        \n        const overdue = item.status === 'overdue' || (item.status === 'active' && new Date() > expectedDate) ?\n          Math.ceil((new Date().getTime() - expectedDate.getTime()) / (1000 * 60 * 60 * 24)) : 0;\n\n        return [\n          `\"${borrowDate.toLocaleDateString('fr-FR')}\"`,\n          `\"${borrowDate.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' })}\"`,\n          `\"${(item.book?.title || '').replace(/\"/g, '\"\"')}\"`,\n          `\"${(item.book?.author || '').replace(/\"/g, '\"\"')}\"`,\n          `\"${(item.book?.category || '').replace(/\"/g, '\"\"')}\"`,\n          `\"${(item.book?.isbn || '').replace(/\"/g, '\"\"')}\"`,\n          `\"${(item.borrower?.firstName || '')} ${(item.borrower?.lastName || '')}\"`,\n          `\"${item.borrower?.type === 'student' ? 'Étudiant' : 'Personnel'}\"`,\n          `\"${(item.borrower?.matricule || '').replace(/\"/g, '\"\"')}\"`,\n          `\"${item.borrower?.type === 'student' ? (item.borrower?.classe || '') : (item.borrower?.position || '')}\"`,\n          `\"${expectedDate.toLocaleDateString('fr-FR')}\"`,\n          `\"${actualDate ? actualDate.toLocaleDateString('fr-FR') : ''}\"`,\n          `\"${actualDate ? actualDate.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' }) : ''}\"`,\n          `\"${item.status === 'active' ? 'En cours' : item.status === 'returned' ? 'Rendu' : 'En retard'}\"`,\n          `\"${duration}\"`,\n          `\"${overdue > 0 ? overdue : ''}\"`,\n          `\"${(item.notes || '').replace(/\"/g, '\"\"')}\"`\n        ];\n      });\n\n      csvContent = [csvHeaders.join(','), ...csvRows.map((row: any) => row.join(','))].join('\\n');\n    } else {\n      // Export livres\n      const { books } = data;\n      const csvHeaders = [\n        'Titre',\n        'Auteur', \n        'Catégorie',\n        'ISBN',\n        'Année Publication',\n        'Description',\n        'Statut',\n        'Emprunteur',\n        'Date Emprunt',\n        'Date Retour Prévue'\n      ];\n\n      const csvRows = books.map((book: any) => [\n        `\"${(book.title || '').replace(/\"/g, '\"\"')}\"`,\n        `\"${(book.author || '').replace(/\"/g, '\"\"')}\"`,\n        `\"${(book.category || '').replace(/\"/g, '\"\"')}\"`,\n        `\"${(book.isbn || '').replace(/\"/g, '\"\"')}\"`,\n        `\"${(book.publishedDate || '').replace(/\"/g, '\"\"')}\"`,\n        `\"${(book.description || '').replace(/\"/g, '\"\"')}\"`,\n        `\"${book.isBorrowed ? 'Emprunté' : 'Disponible'}\"`,\n        `\"${book.borrower ? `${book.borrower.firstName} ${book.borrower.lastName}` : ''}\"`,\n        `\"${book.borrowDate ? new Date(book.borrowDate).toLocaleDateString('fr-FR') : ''}\"`,\n        `\"${book.expectedReturnDate ? new Date(book.expectedReturnDate).toLocaleDateString('fr-FR') : ''}\"`\n      ]);\n\n      csvContent = [csvHeaders.join(','), ...csvRows.map((row: any) => row.join(','))].join('\\n');\n    }\n    \n    fs.writeFileSync(result.filePath, '\\ufeff' + csvContent, 'utf8');\n    \n    return result.filePath;\n  } catch (error) {\n    console.error('Export CSV failed:', error);\n    return null;\n  }\n}","// src/preload.ts - Version corrigée pour Electron\r\ndeclare global {\r\n  interface Window {\r\n    electronAPI: typeof electronAPI;\r\n  }\r\n}\r\n\r\nimport { contextBridge, ipcRenderer } from 'electron';\r\n\r\n// Debug amélioré\r\nconsole.log('=== Preload Script Debug ===');\r\nconsole.log('Process type:', process?.type);\r\nconsole.log('Process versions:', process?.versions);\r\nconsole.log('contextBridge available:', typeof contextBridge !== 'undefined');\r\nconsole.log('ipcRenderer available:', typeof ipcRenderer !== 'undefined');\r\nconsole.log('sandbox:', process?.sandboxed);\r\n\r\n// Vérification plus robuste du contexte\r\nif (typeof contextBridge === 'undefined') {\r\n  console.error('❌ contextBridge is undefined');\r\n  console.error('Current context:', {\r\n    nodeIntegration: process?.env?.ELECTRON_ENABLE_NODE_INTEGRATION,\r\n    contextIsolation: process?.env?.ELECTRON_CONTEXT_ISOLATION,\r\n    sandbox: process?.sandboxed,\r\n    type: process?.type\r\n  });\r\n  \r\n  // Ne pas lancer d'erreur fatale, permettre de continuer\r\n  console.warn('⚠️ Running without contextBridge - this may indicate a configuration issue');\r\n} else {\r\n  console.log('✅ contextBridge is available');\r\n}\r\n\r\nif (typeof ipcRenderer === 'undefined') {\r\n  console.error('❌ ipcRenderer is undefined');\r\n} else {\r\n  console.log('✅ ipcRenderer is available');\r\n}\r\n\r\nexport interface Document {\r\n  id?: number;\r\n  // Champs principaux requis\r\n  auteur: string;           // AUTEUR\r\n  titre: string;            // TITRE  \r\n  editeur: string;          // EDITEUR\r\n  lieuEdition: string;      // LIEU D'EDITION\r\n  annee: string;            // ANNEE\r\n  descripteurs: string;     // DESCRIPTEURS (mots-clés séparés par des virgules)\r\n  cote: string;             // COTE (référence de classification)\r\n  \r\n  // Champs optionnels\r\n  isbn?: string;\r\n  description?: string;\r\n  couverture?: string;      // URL de la couverture\r\n  \r\n  // Statut d'emprunt\r\n  estEmprunte: boolean;\r\n  emprunteurId?: number;\r\n  dateEmprunt?: string;\r\n  dateRetourPrevu?: string;\r\n  dateRetour?: string;\r\n  nomEmprunteur?: string;\r\n  \r\n  // Métadonnées de synchronisation\r\n  localId?: string;         // ID unique local pour la sync\r\n  remoteId?: string;        // ID sur le serveur distant\r\n  syncStatus: 'synced' | 'pending' | 'conflict' | 'error';\r\n  lastModified: string;     // Timestamp de dernière modification\r\n  version: number;          // Version pour gérer les conflits\r\n  deletedAt?: string;       // Soft delete\r\n  createdAt?: string;\r\n}\r\n\r\n// Alias pour compatibilité ascendante - NOUVEAU MODÈLE\r\nexport interface Book extends Document {\r\n  // Propriétés de compatibilité (mappées automatiquement)\r\n  get title(): string;\r\n  get author(): string;\r\n  get category(): string;\r\n  get publishedDate(): string;\r\n  get coverUrl(): string | undefined;\r\n  get isBorrowed(): boolean;\r\n  get borrowerId(): number | undefined;\r\n  get borrowDate(): string | undefined;\r\n  get expectedReturnDate(): string | undefined;\r\n  get returnDate(): string | undefined;\r\n  get borrowerName(): string | undefined;\r\n}\r\n\r\nexport interface Author {\r\n  id?: number;\r\n  name: string;\r\n  biography?: string;\r\n  birthDate?: string;\r\n  nationality?: string;\r\n  // Synchronisation\r\n  localId?: string;\r\n  remoteId?: string;\r\n  syncStatus: 'synced' | 'pending' | 'conflict' | 'error';\r\n  lastModified: string;\r\n  version: number;\r\n  deletedAt?: string;\r\n  createdAt?: string;\r\n}\r\n\r\nexport interface Category {\r\n  id?: number;\r\n  name: string;\r\n  description?: string;\r\n  color?: string;\r\n  // Synchronisation\r\n  localId?: string;\r\n  remoteId?: string;\r\n  syncStatus: 'synced' | 'pending' | 'conflict' | 'error';\r\n  lastModified: string;\r\n  version: number;\r\n  deletedAt?: string;\r\n  createdAt?: string;\r\n}\r\n\r\nexport interface Borrower {\r\n  id?: number;\r\n  type: 'student' | 'staff';\r\n  firstName: string;\r\n  lastName: string;\r\n  matricule: string;\r\n  // Spécifique aux étudiants\r\n  classe?: string;\r\n  // Spécifique au personnel\r\n  cniNumber?: string;\r\n  position?: string;\r\n  email?: string;\r\n  phone?: string;\r\n  // Synchronisation\r\n  localId?: string;\r\n  remoteId?: string;\r\n  syncStatus: 'synced' | 'pending' | 'conflict' | 'error';\r\n  lastModified: string;\r\n  version: number;\r\n  deletedAt?: string;\r\n  createdAt?: string;\r\n}\r\n\r\nexport interface BorrowHistory {\r\n  id?: number;\r\n  bookId: number;\r\n  borrowerId: number;\r\n  borrowDate: string;\r\n  expectedReturnDate: string;\r\n  actualReturnDate?: string;\r\n  status: 'active' | 'returned' | 'overdue';\r\n  notes?: string;\r\n  // Synchronisation\r\n  localId?: string;\r\n  remoteId?: string;\r\n  syncStatus: 'synced' | 'pending' | 'conflict' | 'error';\r\n  lastModified: string;\r\n  version: number;\r\n  deletedAt?: string;\r\n  createdAt?: string;\r\n  // Relations\r\n  book?: Book;\r\n  borrower?: Borrower;\r\n}\r\n\r\nexport interface Stats {\r\n  totalBooks: number;\r\n  borrowedBooks: number;\r\n  availableBooks: number;\r\n  totalAuthors: number;\r\n  totalCategories: number;\r\n  totalBorrowers: number;\r\n  totalStudents: number;\r\n  totalStaff: number;\r\n  overdueBooks: number;\r\n}\r\n\r\nexport interface HistoryFilter {\r\n  startDate?: string;\r\n  endDate?: string;\r\n  borrowerType?: 'all' | 'student' | 'staff';\r\n  status?: 'all' | 'active' | 'returned' | 'overdue';\r\n  borrowerId?: number;\r\n  bookId?: number;\r\n}\r\n\r\n// Interfaces pour les paramètres\r\nexport interface InstitutionSettings {\r\n  name: string;\r\n  address: string;\r\n  city: string;\r\n  country: string;\r\n  phone: string;\r\n  email: string;\r\n  website: string;\r\n  logo: string;\r\n  description: string;\r\n}\r\n\r\nexport interface BackupSettings {\r\n  autoBackup: boolean;\r\n  backupFrequency: 'daily' | 'weekly' | 'monthly';\r\n  lastBackup: string;\r\n  cloudSync: boolean;\r\n  cloudProvider: 'google' | 'dropbox' | 'onedrive';\r\n}\r\n\r\nexport interface SecuritySettings {\r\n  requireAuth: boolean;\r\n  sessionTimeout: number;\r\n  passwordPolicy: {\r\n    minLength: number;\r\n    requireNumbers: boolean;\r\n    requireSymbols: boolean;\r\n  };\r\n}\r\n\r\nexport interface ApplicationSettings {\r\n  institution: InstitutionSettings;\r\n  backup: BackupSettings;\r\n  security: SecuritySettings;\r\n}\r\n\r\n// Interface pour l'authentification\r\nexport interface AuthCredentials {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport interface AuthResponse {\r\n  success: boolean;\r\n  user?: {\r\n    id: number;\r\n    username: string;\r\n    role: string;\r\n    lastLogin: string;\r\n  };\r\n  error?: string;\r\n}\r\n\r\n// Interfaces pour la synchronisation\r\nexport interface SyncStatus {\r\n  isOnline: boolean;\r\n  lastSync: string | null;\r\n  pendingOperations: number;\r\n  syncInProgress: boolean;\r\n  errors: SyncError[];\r\n}\r\n\r\nexport interface SyncError {\r\n  id: string;\r\n  type: 'document' | 'author' | 'category' | 'borrower' | 'history';\r\n  operation: 'create' | 'update' | 'delete';\r\n  entityId: string;\r\n  error: string;\r\n  timestamp: string;\r\n  retryCount: number;\r\n}\r\n\r\nexport interface SyncOperation {\r\n  id: string;\r\n  type: 'document' | 'author' | 'category' | 'borrower' | 'history';\r\n  operation: 'create' | 'update' | 'delete';\r\n  data: any;\r\n  timestamp: string;\r\n  retryCount: number;\r\n  maxRetries: number;\r\n}\r\n\r\nexport interface NetworkStatus {\r\n  isOnline: boolean;\r\n  connectionType: 'wifi' | 'ethernet' | 'cellular' | 'none';\r\n  speed?: 'slow' | 'medium' | 'fast';\r\n  lastChecked: string;\r\n}\r\n\r\nexport interface ConflictResolution {\r\n  entityType: 'document' | 'author' | 'category' | 'borrower' | 'history';\r\n  entityId: string;\r\n  localVersion: any;\r\n  remoteVersion: any;\r\n  resolution: 'use_local' | 'use_remote' | 'merge' | 'manual';\r\n  resolvedData?: any;\r\n}\r\n\r\n// Fonctions utilitaires pour la compatibilité Book/Document\r\nexport const createBookFromDocument = (document: Document): Book => {\r\n  const book = { ...document } as any;\r\n  \r\n  // Ajouter les getters pour la compatibilité\r\n  Object.defineProperties(book, {\r\n    title: {\r\n      get: function() { return this.titre; },\r\n      enumerable: true\r\n    },\r\n    author: {\r\n      get: function() { return this.auteur; },\r\n      enumerable: true\r\n    },\r\n    category: {\r\n      get: function() { return this.descripteurs.split(',')[0]?.trim() || ''; },\r\n      enumerable: true\r\n    },\r\n    publishedDate: {\r\n      get: function() { return this.annee; },\r\n      enumerable: true\r\n    },\r\n    coverUrl: {\r\n      get: function() { return this.couverture; },\r\n      enumerable: true\r\n    },\r\n    isBorrowed: {\r\n      get: function() { return this.estEmprunte; },\r\n      enumerable: true\r\n    },\r\n    borrowerId: {\r\n      get: function() { return this.emprunteurId; },\r\n      enumerable: true\r\n    },\r\n    borrowDate: {\r\n      get: function() { return this.dateEmprunt; },\r\n      enumerable: true\r\n    },\r\n    expectedReturnDate: {\r\n      get: function() { return this.dateRetourPrevu; },\r\n      enumerable: true\r\n    },\r\n    returnDate: {\r\n      get: function() { return this.dateRetour; },\r\n      enumerable: true\r\n    },\r\n    borrowerName: {\r\n      get: function() { return this.nomEmprunteur; },\r\n      enumerable: true\r\n    }\r\n  });\r\n  \r\n  return book as Book;\r\n};\r\n\r\nexport const createDocumentFromBook = (book: Partial<Book>): Omit<Document, 'id'> => {\r\n  const now = new Date().toISOString();\r\n  \r\n  return {\r\n    auteur: (book as any).author || book.auteur || '',\r\n    titre: (book as any).title || book.titre || '',\r\n    editeur: book.editeur || 'Non spécifié',\r\n    lieuEdition: book.lieuEdition || 'Non spécifié',\r\n    annee: (book as any).publishedDate || book.annee || new Date().getFullYear().toString(),\r\n    descripteurs: (book as any).category || book.descripteurs || 'Général',\r\n    cote: book.cote || `GEN-${Math.random().toString(36).substr(2, 6).toUpperCase()}`,\r\n    isbn: book.isbn,\r\n    description: book.description,\r\n    couverture: (book as any).coverUrl || book.couverture,\r\n    estEmprunte: (book as any).isBorrowed || book.estEmprunte || false,\r\n    emprunteurId: (book as any).borrowerId || book.emprunteurId,\r\n    dateEmprunt: (book as any).borrowDate || book.dateEmprunt,\r\n    dateRetourPrevu: (book as any).expectedReturnDate || book.dateRetourPrevu,\r\n    dateRetour: (book as any).returnDate || book.dateRetour,\r\n    nomEmprunteur: (book as any).borrowerName || book.nomEmprunteur,\r\n    localId: book.localId,\r\n    remoteId: book.remoteId,\r\n    syncStatus: book.syncStatus || 'pending',\r\n    lastModified: book.lastModified || now,\r\n    version: book.version || 1,\r\n    deletedAt: book.deletedAt,\r\n    createdAt: book.createdAt || now\r\n  };\r\n};\r\n\r\n// API Definition\r\nconst electronAPI = {\r\n  // Window controls\r\n  minimizeWindow: () => ipcRenderer?.invoke('window-controls:minimize'),\r\n  maximizeWindow: () => ipcRenderer?.invoke('window-controls:maximize'),\r\n  closeWindow: () => ipcRenderer?.invoke('window-controls:close'),\r\n\r\n  // Authentication\r\n  getAuthStatus: (): Promise<boolean> => ipcRenderer?.invoke('auth:status') || Promise.resolve(false),\r\n  login: (credentials: AuthCredentials): Promise<AuthResponse> => ipcRenderer?.invoke('auth:login', credentials) || Promise.resolve({ success: false, error: 'IPC not available' }),\r\n  logout: (): Promise<void> => ipcRenderer?.invoke('auth:logout') || Promise.resolve(),\r\n\r\n  // Database operations - Books (avec compatibilité Document)\r\n  getBooks: (): Promise<Book[]> => \r\n    ipcRenderer?.invoke('db:getBooks').then((documents: Document[]) => \r\n      documents.map(createBookFromDocument)\r\n    ) || Promise.resolve([]),\r\n  addBook: (book: Omit<Book, 'id'>): Promise<number> => \r\n    ipcRenderer?.invoke('db:addBook', createDocumentFromBook(book)) || Promise.resolve(0),\r\n  updateBook: (book: Book): Promise<boolean> => \r\n    ipcRenderer?.invoke('db:updateBook', { ...createDocumentFromBook(book), id: book.id }) || Promise.resolve(false),\r\n  deleteBook: (id: number): Promise<boolean> => ipcRenderer?.invoke('db:deleteBook', id) || Promise.resolve(false),\r\n  searchBooks: (query: string): Promise<Book[]> => \r\n    ipcRenderer?.invoke('db:searchBooks', query).then((documents: Document[]) => \r\n      documents.map(createBookFromDocument)\r\n    ) || Promise.resolve([]),\r\n  \r\n  // Database operations - Documents (nouveau)\r\n  getDocuments: (): Promise<Document[]> => ipcRenderer?.invoke('db:getDocuments') || Promise.resolve([]),\r\n  addDocument: (document: Omit<Document, 'id'>): Promise<number> => ipcRenderer?.invoke('db:addDocument', document) || Promise.resolve(0),\r\n  updateDocument: (document: Document): Promise<boolean> => ipcRenderer?.invoke('db:updateDocument', document) || Promise.resolve(false),\r\n  deleteDocument: (id: number): Promise<boolean> => ipcRenderer?.invoke('db:deleteDocument', id) || Promise.resolve(false),\r\n  searchDocuments: (query: string): Promise<Document[]> => ipcRenderer?.invoke('db:searchDocuments', query) || Promise.resolve([]),\r\n  \r\n  // Database operations - Authors\r\n  getAuthors: (): Promise<Author[]> => ipcRenderer?.invoke('db:getAuthors') || Promise.resolve([]),\r\n  addAuthor: (author: Omit<Author, 'id'>): Promise<number> => ipcRenderer?.invoke('db:addAuthor', {\r\n    ...author,\r\n    localId: author.localId || `author_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n    syncStatus: author.syncStatus || 'pending',\r\n    lastModified: author.lastModified || new Date().toISOString(),\r\n    version: author.version || 1,\r\n    createdAt: author.createdAt || new Date().toISOString()\r\n  }) || Promise.resolve(0),\r\n  \r\n  // Database operations - Categories\r\n  getCategories: (): Promise<Category[]> => ipcRenderer?.invoke('db:getCategories') || Promise.resolve([]),\r\n  addCategory: (category: Omit<Category, 'id'>): Promise<number> => ipcRenderer?.invoke('db:addCategory', {\r\n    ...category,\r\n    localId: category.localId || `category_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n    syncStatus: category.syncStatus || 'pending',\r\n    lastModified: category.lastModified || new Date().toISOString(),\r\n    version: category.version || 1,\r\n    createdAt: category.createdAt || new Date().toISOString()\r\n  }) || Promise.resolve(0),\r\n  \r\n  // Database operations - Borrowers\r\n  getBorrowers: (): Promise<Borrower[]> => ipcRenderer?.invoke('db:getBorrowers') || Promise.resolve([]),\r\n  addBorrower: (borrower: Omit<Borrower, 'id'>): Promise<number> => ipcRenderer?.invoke('db:addBorrower', {\r\n    ...borrower,\r\n    localId: borrower.localId || `borrower_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n    syncStatus: borrower.syncStatus || 'pending',\r\n    lastModified: borrower.lastModified || new Date().toISOString(),\r\n    version: borrower.version || 1,\r\n    createdAt: borrower.createdAt || new Date().toISOString()\r\n  }) || Promise.resolve(0),\r\n  updateBorrower: (borrower: Borrower): Promise<boolean> => ipcRenderer?.invoke('db:updateBorrower', {\r\n    ...borrower,\r\n    lastModified: new Date().toISOString(),\r\n    version: (borrower.version || 1) + 1,\r\n    syncStatus: 'pending'\r\n  }) || Promise.resolve(false),\r\n  deleteBorrower: (id: number): Promise<boolean> => ipcRenderer?.invoke('db:deleteBorrower', id) || Promise.resolve(false),\r\n  searchBorrowers: (query: string): Promise<Borrower[]> => ipcRenderer?.invoke('db:searchBorrowers', query) || Promise.resolve([]),\r\n  \r\n  // Borrow operations\r\n  getBorrowedBooks: (): Promise<BorrowHistory[]> => ipcRenderer?.invoke('db:getBorrowedBooks') || Promise.resolve([]),\r\n  borrowBook: (bookId: number, borrowerId: number, expectedReturnDate: string): Promise<number> => \r\n    ipcRenderer?.invoke('db:borrowBook', bookId, borrowerId, expectedReturnDate) || Promise.resolve(0),\r\n  returnBook: (borrowHistoryId: number, notes?: string): Promise<boolean> => \r\n    ipcRenderer?.invoke('db:returnBook', borrowHistoryId, notes) || Promise.resolve(false),\r\n  getBorrowHistory: (filter?: HistoryFilter): Promise<BorrowHistory[]> => \r\n    ipcRenderer?.invoke('db:getBorrowHistory', filter) || Promise.resolve([]),\r\n  \r\n  // Statistics\r\n  getStats: (): Promise<Stats> => ipcRenderer?.invoke('db:getStats') || Promise.resolve({\r\n    totalBooks: 0,\r\n    borrowedBooks: 0,\r\n    availableBooks: 0,\r\n    totalAuthors: 0,\r\n    totalCategories: 0,\r\n    totalBorrowers: 0,\r\n    totalStudents: 0,\r\n    totalStaff: 0,\r\n    overdueBooks: 0\r\n  }),\r\n  getAdvancedStats: (): Promise<any> => ipcRenderer?.invoke('stats:advanced') || Promise.resolve({}),\r\n  \r\n  // Settings management\r\n  getSettings: (): Promise<ApplicationSettings | null> => ipcRenderer?.invoke('settings:get') || Promise.resolve(null),\r\n  saveSettings: (settings: ApplicationSettings): Promise<boolean> => ipcRenderer?.invoke('settings:save', settings) || Promise.resolve(false),\r\n  \r\n  // Backup and restore operations\r\n  createBackup: (): Promise<string> => ipcRenderer?.invoke('backup:create') || Promise.resolve(''),\r\n  restoreBackup: (): Promise<boolean> => ipcRenderer?.invoke('backup:restore') || Promise.resolve(false),\r\n  clearAllData: (): Promise<boolean> => ipcRenderer?.invoke('db:clearAll') || Promise.resolve(false),\r\n  \r\n  // Export/Import operations\r\n  exportDatabase: (filePath: string): Promise<void> => ipcRenderer?.invoke('db:export', filePath) || Promise.resolve(),\r\n  importDatabase: (filePath: string): Promise<boolean> => ipcRenderer?.invoke('db:import', filePath) || Promise.resolve(false),\r\n  \r\n  // Print operations\r\n  printInventory: (data: any): Promise<boolean> => ipcRenderer?.invoke('print:inventory', data) || Promise.resolve(false),\r\n  printAvailableBooks: (data: any): Promise<boolean> => ipcRenderer?.invoke('print:available-books', data) || Promise.resolve(false),\r\n  printBorrowedBooks: (data: any): Promise<boolean> => ipcRenderer?.invoke('print:borrowed-books', data) || Promise.resolve(false),\r\n  printBorrowHistory: (data: any): Promise<boolean> => ipcRenderer?.invoke('print:borrow-history', data) || Promise.resolve(false),\r\n  \r\n  // Export operations\r\n  exportCSV: (data: any): Promise<string | null> => ipcRenderer?.invoke('export:csv', data) || Promise.resolve(null),\r\n  \r\n  // File operations\r\n  selectFile: (options?: any): Promise<string | null> => ipcRenderer?.invoke('file:select', options) || Promise.resolve(null),\r\n  selectDirectory: (): Promise<string | null> => ipcRenderer?.invoke('file:selectDirectory') || Promise.resolve(null),\r\n  \r\n  // Notification operations\r\n  showNotification: (title: string, body: string): Promise<void> => \r\n    ipcRenderer?.invoke('notification:show', title, body) || Promise.resolve(),\r\n  \r\n  // System information\r\n  getSystemInfo: (): Promise<any> => ipcRenderer?.invoke('system:info') || Promise.resolve({}),\r\n  \r\n  // Application updates\r\n  checkForUpdates: (): Promise<any> => ipcRenderer?.invoke('system:checkUpdates') || Promise.resolve({}),\r\n  \r\n  // Theme operations\r\n  setTheme: (theme: string): Promise<void> => ipcRenderer?.invoke('theme:set', theme) || Promise.resolve(),\r\n  getTheme: (): Promise<string> => ipcRenderer?.invoke('theme:get') || Promise.resolve('light'),\r\n  \r\n  // Synchronization operations\r\n  getSyncStatus: (): Promise<SyncStatus> => ipcRenderer?.invoke('sync:status') || Promise.resolve({\r\n    isOnline: false,\r\n    lastSync: null,\r\n    pendingOperations: 0,\r\n    syncInProgress: false,\r\n    errors: []\r\n  }),\r\n  startSync: (): Promise<void> => ipcRenderer?.invoke('sync:start') || Promise.resolve(),\r\n  pauseSync: (): Promise<void> => ipcRenderer?.invoke('sync:pause') || Promise.resolve(),\r\n  getNetworkStatus: (): Promise<NetworkStatus> => ipcRenderer?.invoke('network:status') || Promise.resolve({\r\n    isOnline: false,\r\n    connectionType: 'none',\r\n    lastChecked: new Date().toISOString()\r\n  }),\r\n  resolveConflict: (resolution: ConflictResolution): Promise<boolean> => ipcRenderer?.invoke('sync:resolve-conflict', resolution) || Promise.resolve(false),\r\n  getSyncErrors: (): Promise<SyncError[]> => ipcRenderer?.invoke('sync:errors') || Promise.resolve([]),\r\n  retrySyncOperation: (operationId: string): Promise<boolean> => ipcRenderer?.invoke('sync:retry', operationId) || Promise.resolve(false),\r\n  clearSyncErrors: (): Promise<void> => ipcRenderer?.invoke('sync:clear-errors') || Promise.resolve()\r\n};\r\n\r\n// Type guard pour vérifier si nous sommes dans un environnement qui a accès à la fenêtre\r\nfunction hasWindowAccess(): boolean {\r\n  try {\r\n    return typeof globalThis !== 'undefined' && \r\n           'window' in globalThis && \r\n           (globalThis as any).window !== undefined;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n// Exposer l'API seulement si contextBridge est disponible\r\nif (typeof contextBridge !== 'undefined' && typeof ipcRenderer !== 'undefined') {\r\n  try {\r\n    contextBridge.exposeInMainWorld('electronAPI', electronAPI);\r\n    console.log('✅ electronAPI exposed via contextBridge');\r\n  } catch (error) {\r\n    console.error('❌ Failed to expose electronAPI:', error);\r\n    // Fallback: exposer directement sur globalThis si disponible\r\n    if (hasWindowAccess()) {\r\n      (globalThis as any).window.electronAPI = electronAPI;\r\n      console.log('⚠️ electronAPI exposed directly on window (fallback)');\r\n    }\r\n  }\r\n} else {\r\n  console.warn('⚠️ contextBridge or ipcRenderer not available, using fallback');\r\n  // Fallback pour les environnements où contextBridge n'est pas disponible\r\n  if (hasWindowAccess()) {\r\n    (globalThis as any).window.electronAPI = electronAPI;\r\n    console.log('⚠️ electronAPI exposed directly on window (no contextBridge)');\r\n  } else {\r\n    console.error('❌ Window object not available');\r\n  }\r\n}","import * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport * as crypto from 'crypto';\r\nimport { app } from 'electron';\r\nimport { AuthCredentials, AuthResponse } from '../preload';\r\n\r\nexport interface User {\r\n  id: number;\r\n  username: string;\r\n  passwordHash: string;\r\n  salt: string;\r\n  role: 'admin' | 'librarian' | 'user';\r\n  email?: string;\r\n  firstName?: string;\r\n  lastName?: string;\r\n  isActive: boolean;\r\n  createdAt: string;\r\n  lastLogin?: string;\r\n  loginAttempts: number;\r\n  lockedUntil?: string;\r\n}\r\n\r\nexport interface Session {\r\n  id: string;\r\n  userId: number;\r\n  username: string;\r\n  role: string;\r\n  createdAt: string;\r\n  expiresAt: string;\r\n  isActive: boolean;\r\n}\r\n\r\nexport class AuthService {\r\n  private usersFilePath: string;\r\n  private sessionsFilePath: string;\r\n  private users: User[] = [];\r\n  private sessions: Session[] = [];\r\n  private currentSession: Session | null = null;\r\n\r\n  constructor() {\r\n    const userDataPath = app.getPath('userData');\r\n    this.usersFilePath = path.join(userDataPath, 'users.json');\r\n    this.sessionsFilePath = path.join(userDataPath, 'sessions.json');\r\n    \r\n    this.loadUsers();\r\n    this.loadSessions();\r\n    this.createDefaultAdmin();\r\n  }\r\n\r\n  private loadUsers(): void {\r\n    try {\r\n      if (fs.existsSync(this.usersFilePath)) {\r\n        const data = fs.readFileSync(this.usersFilePath, 'utf8');\r\n        this.users = JSON.parse(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors du chargement des utilisateurs:', error);\r\n      this.users = [];\r\n    }\r\n  }\r\n\r\n  private saveUsers(): void {\r\n    try {\r\n      fs.writeFileSync(this.usersFilePath, JSON.stringify(this.users, null, 2));\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des utilisateurs:', error);\r\n    }\r\n  }\r\n\r\n  private loadSessions(): void {\r\n    try {\r\n      if (fs.existsSync(this.sessionsFilePath)) {\r\n        const data = fs.readFileSync(this.sessionsFilePath, 'utf8');\r\n        this.sessions = JSON.parse(data);\r\n        \r\n        // Nettoyer les sessions expirées\r\n        this.cleanExpiredSessions();\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors du chargement des sessions:', error);\r\n      this.sessions = [];\r\n    }\r\n  }\r\n\r\n  private saveSessions(): void {\r\n    try {\r\n      fs.writeFileSync(this.sessionsFilePath, JSON.stringify(this.sessions, null, 2));\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des sessions:', error);\r\n    }\r\n  }\r\n\r\n  private createDefaultAdmin(): void {\r\n    // Vérifier si un administrateur existe déjà\r\n    const adminExists = this.users.some(user => user.role === 'admin');\r\n    \r\n    if (!adminExists) {\r\n      // Créer l'utilisateur admin par défaut\r\n      const defaultAdmin: Omit<User, 'id'> = {\r\n        username: 'admin',\r\n        passwordHash: '',\r\n        salt: '',\r\n        role: 'admin',\r\n        email: 'admin@bibliotheque.local',\r\n        firstName: 'Administrateur',\r\n        lastName: 'Système',\r\n        isActive: true,\r\n        createdAt: new Date().toISOString(),\r\n        loginAttempts: 0\r\n      };\r\n\r\n      // Hasher le mot de passe par défaut\r\n      const { hash, salt } = this.hashPassword('admin');\r\n      defaultAdmin.passwordHash = hash;\r\n      defaultAdmin.salt = salt;\r\n\r\n      this.users.push({\r\n        ...defaultAdmin,\r\n        id: this.users.length + 1\r\n      });\r\n\r\n      // Créer aussi un utilisateur démo\r\n      const demoUser: Omit<User, 'id'> = {\r\n        username: 'demo',\r\n        passwordHash: '',\r\n        salt: '',\r\n        role: 'librarian',\r\n        email: 'demo@bibliotheque.local',\r\n        firstName: 'Démo',\r\n        lastName: 'Utilisateur',\r\n        isActive: true,\r\n        createdAt: new Date().toISOString(),\r\n        loginAttempts: 0\r\n      };\r\n\r\n      const demoPass = this.hashPassword('demo');\r\n      demoUser.passwordHash = demoPass.hash;\r\n      demoUser.salt = demoPass.salt;\r\n\r\n      this.users.push({\r\n        ...demoUser,\r\n        id: this.users.length + 1\r\n      });\r\n\r\n      // Créer l'utilisateur biblio\r\n      const biblioUser: Omit<User, 'id'> = {\r\n        username: 'biblio',\r\n        passwordHash: '',\r\n        salt: '',\r\n        role: 'librarian',\r\n        email: 'biblio@bibliotheque.local',\r\n        firstName: 'Bibliothécaire',\r\n        lastName: 'Principal',\r\n        isActive: true,\r\n        createdAt: new Date().toISOString(),\r\n        loginAttempts: 0\r\n      };\r\n\r\n      const biblioPass = this.hashPassword('biblio');\r\n      biblioUser.passwordHash = biblioPass.hash;\r\n      biblioUser.salt = biblioPass.salt;\r\n\r\n      this.users.push({\r\n        ...biblioUser,\r\n        id: this.users.length + 1\r\n      });\r\n\r\n      this.saveUsers();\r\n    }\r\n  }\r\n\r\n  private hashPassword(password: string, salt?: string): { hash: string; salt: string } {\r\n    const passwordSalt = salt || crypto.randomBytes(32).toString('hex');\r\n    const hash = crypto.pbkdf2Sync(password, passwordSalt, 10000, 64, 'sha512').toString('hex');\r\n    \r\n    return {\r\n      hash,\r\n      salt: passwordSalt\r\n    };\r\n  }\r\n\r\n  private verifyPassword(password: string, hash: string, salt: string): boolean {\r\n    const verifyHash = crypto.pbkdf2Sync(password, salt, 10000, 64, 'sha512').toString('hex');\r\n    return hash === verifyHash;\r\n  }\r\n\r\n  private generateSessionId(): string {\r\n    return crypto.randomBytes(32).toString('hex');\r\n  }\r\n\r\n  private cleanExpiredSessions(): void {\r\n    const now = new Date();\r\n    this.sessions = this.sessions.filter(session => {\r\n      const expiresAt = new Date(session.expiresAt);\r\n      return expiresAt > now && session.isActive;\r\n    });\r\n    this.saveSessions();\r\n  }\r\n\r\n  private isUserLocked(user: User): boolean {\r\n    if (user.lockedUntil) {\r\n      const lockExpires = new Date(user.lockedUntil);\r\n      if (new Date() < lockExpires) {\r\n        return true;\r\n      } else {\r\n        // Le verrouillage a expiré, réinitialiser\r\n        user.lockedUntil = undefined;\r\n        user.loginAttempts = 0;\r\n        this.saveUsers();\r\n        return false;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private lockUser(user: User): void {\r\n    user.loginAttempts += 1;\r\n    \r\n    if (user.loginAttempts >= 5) {\r\n      // Verrouiller pour 15 minutes\r\n      const lockDuration = 15 * 60 * 1000; // 15 minutes en millisecondes\r\n      user.lockedUntil = new Date(Date.now() + lockDuration).toISOString();\r\n    }\r\n    \r\n    this.saveUsers();\r\n  }\r\n\r\n  private resetLoginAttempts(user: User): void {\r\n    user.loginAttempts = 0;\r\n    user.lockedUntil = undefined;\r\n    this.saveUsers();\r\n  }\r\n\r\n  async login(credentials: AuthCredentials): Promise<AuthResponse> {\r\n    try {\r\n      // Nettoyer les sessions expirées\r\n      this.cleanExpiredSessions();\r\n\r\n      const user = this.users.find(u => \r\n        u.username === credentials.username && u.isActive\r\n      );\r\n\r\n      if (!user) {\r\n        return {\r\n          success: false,\r\n          error: 'Nom d\\'utilisateur ou mot de passe incorrect'\r\n        };\r\n      }\r\n\r\n      // Vérifier si l'utilisateur est verrouillé\r\n      if (this.isUserLocked(user)) {\r\n        const lockExpires = new Date(user.lockedUntil!);\r\n        const minutesLeft = Math.ceil((lockExpires.getTime() - Date.now()) / (60 * 1000));\r\n        return {\r\n          success: false,\r\n          error: `Compte verrouillé. Réessayez dans ${minutesLeft} minute(s)`\r\n        };\r\n      }\r\n\r\n      // Vérifier le mot de passe\r\n      const isValidPassword = this.verifyPassword(\r\n        credentials.password, \r\n        user.passwordHash, \r\n        user.salt\r\n      );\r\n\r\n      if (!isValidPassword) {\r\n        this.lockUser(user);\r\n        return {\r\n          success: false,\r\n          error: 'Nom d\\'utilisateur ou mot de passe incorrect'\r\n        };\r\n      }\r\n\r\n      // Réinitialiser les tentatives de connexion\r\n      this.resetLoginAttempts(user);\r\n\r\n      // Mettre à jour la dernière connexion\r\n      user.lastLogin = new Date().toISOString();\r\n      this.saveUsers();\r\n\r\n      // Créer une nouvelle session\r\n      const sessionId = this.generateSessionId();\r\n      const expiresAt = new Date(Date.now() + (60 * 60 * 1000)); // 1 heure\r\n      \r\n      const session: Session = {\r\n        id: sessionId,\r\n        userId: user.id,\r\n        username: user.username,\r\n        role: user.role,\r\n        createdAt: new Date().toISOString(),\r\n        expiresAt: expiresAt.toISOString(),\r\n        isActive: true\r\n      };\r\n\r\n      this.sessions.push(session);\r\n      this.currentSession = session;\r\n      this.saveSessions();\r\n\r\n      return {\r\n        success: true,\r\n        user: {\r\n          id: user.id,\r\n          username: user.username,\r\n          role: user.role,\r\n          lastLogin: user.lastLogin || user.createdAt\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Erreur lors de la connexion:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Erreur interne du serveur'\r\n      };\r\n    }\r\n  }\r\n\r\n  logout(): boolean {\r\n    try {\r\n      if (this.currentSession) {\r\n        // Marquer la session comme inactive\r\n        const session = this.sessions.find(s => s.id === this.currentSession!.id);\r\n        if (session) {\r\n          session.isActive = false;\r\n        }\r\n        \r\n        this.currentSession = null;\r\n        this.saveSessions();\r\n      }\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la déconnexion:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    if (!this.currentSession) {\r\n      return false;\r\n    }\r\n\r\n    // Vérifier si la session est encore valide\r\n    const expiresAt = new Date(this.currentSession.expiresAt);\r\n    const now = new Date();\r\n\r\n    if (now >= expiresAt || !this.currentSession.isActive) {\r\n      this.currentSession = null;\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getCurrentUser(): User | null {\r\n    if (!this.isAuthenticated() || !this.currentSession) {\r\n      return null;\r\n    }\r\n\r\n    return this.users.find(u => u.id === this.currentSession!.userId) || null;\r\n  }\r\n\r\n  getCurrentSession(): Session | null {\r\n    return this.isAuthenticated() ? this.currentSession : null;\r\n  }\r\n\r\n  // Méthodes d'administration des utilisateurs\r\n  createUser(userData: {\r\n    username: string;\r\n    password: string;\r\n    role: 'admin' | 'librarian' | 'user';\r\n    email?: string;\r\n    firstName?: string;\r\n    lastName?: string;\r\n  }): { success: boolean; user?: User; error?: string } {\r\n    try {\r\n      // Vérifier si l'utilisateur existe déjà\r\n      const existingUser = this.users.find(u => u.username === userData.username);\r\n      if (existingUser) {\r\n        return {\r\n          success: false,\r\n          error: 'Un utilisateur avec ce nom existe déjà'\r\n        };\r\n      }\r\n\r\n      // Hasher le mot de passe\r\n      const { hash, salt } = this.hashPassword(userData.password);\r\n\r\n      const newUser: User = {\r\n        id: Math.max(...this.users.map(u => u.id), 0) + 1,\r\n        username: userData.username,\r\n        passwordHash: hash,\r\n        salt: salt,\r\n        role: userData.role,\r\n        email: userData.email,\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        isActive: true,\r\n        createdAt: new Date().toISOString(),\r\n        loginAttempts: 0\r\n      };\r\n\r\n      this.users.push(newUser);\r\n      this.saveUsers();\r\n\r\n      // Retourner l'utilisateur sans les données sensibles\r\n      const { passwordHash, salt: userSalt, ...safeUser } = newUser;\r\n      \r\n      return {\r\n        success: true,\r\n        user: safeUser as User\r\n      };\r\n    } catch (error) {\r\n      console.error('Erreur lors de la création de l\\'utilisateur:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Erreur lors de la création de l\\'utilisateur'\r\n      };\r\n    }\r\n  }\r\n\r\n  updateUser(userId: number, userData: Partial<{\r\n    username: string;\r\n    password: string;\r\n    role: 'admin' | 'librarian' | 'user';\r\n    email: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    isActive: boolean;\r\n  }>): { success: boolean; error?: string } {\r\n    try {\r\n      const user = this.users.find(u => u.id === userId);\r\n      if (!user) {\r\n        return {\r\n          success: false,\r\n          error: 'Utilisateur non trouvé'\r\n        };\r\n      }\r\n\r\n      // Vérifier l'unicité du nom d'utilisateur si modifié\r\n      if (userData.username && userData.username !== user.username) {\r\n        const existingUser = this.users.find(u => u.username === userData.username);\r\n        if (existingUser) {\r\n          return {\r\n            success: false,\r\n            error: 'Ce nom d\\'utilisateur est déjà utilisé'\r\n          };\r\n        }\r\n        user.username = userData.username;\r\n      }\r\n\r\n      // Mettre à jour le mot de passe si fourni\r\n      if (userData.password) {\r\n        const { hash, salt } = this.hashPassword(userData.password);\r\n        user.passwordHash = hash;\r\n        user.salt = salt;\r\n        user.loginAttempts = 0; // Réinitialiser les tentatives\r\n        user.lockedUntil = undefined;\r\n      }\r\n\r\n      // Mettre à jour les autres champs\r\n      if (userData.role !== undefined) user.role = userData.role;\r\n      if (userData.email !== undefined) user.email = userData.email;\r\n      if (userData.firstName !== undefined) user.firstName = userData.firstName;\r\n      if (userData.lastName !== undefined) user.lastName = userData.lastName;\r\n      if (userData.isActive !== undefined) user.isActive = userData.isActive;\r\n\r\n      this.saveUsers();\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour de l\\'utilisateur:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Erreur lors de la mise à jour'\r\n      };\r\n    }\r\n  }\r\n\r\n  deleteUser(userId: number): { success: boolean; error?: string } {\r\n    try {\r\n      const userIndex = this.users.findIndex(u => u.id === userId);\r\n      if (userIndex === -1) {\r\n        return {\r\n          success: false,\r\n          error: 'Utilisateur non trouvé'\r\n        };\r\n      }\r\n\r\n      // Ne pas supprimer le dernier administrateur\r\n      const user = this.users[userIndex];\r\n      if (user.role === 'admin') {\r\n        const adminCount = this.users.filter(u => u.role === 'admin' && u.isActive).length;\r\n        if (adminCount <= 1) {\r\n          return {\r\n            success: false,\r\n            error: 'Impossible de supprimer le dernier administrateur'\r\n          };\r\n        }\r\n      }\r\n\r\n      this.users.splice(userIndex, 1);\r\n      this.saveUsers();\r\n\r\n      // Invalider les sessions de cet utilisateur\r\n      this.sessions = this.sessions.filter(s => s.userId !== userId);\r\n      this.saveSessions();\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erreur lors de la suppression de l\\'utilisateur:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Erreur lors de la suppression'\r\n      };\r\n    }\r\n  }\r\n\r\n  getAllUsers(): Omit<User, 'passwordHash' | 'salt'>[] {\r\n    return this.users.map(({ passwordHash, salt, ...user }) => user);\r\n  }\r\n\r\n  getActiveSessions(): Session[] {\r\n    this.cleanExpiredSessions();\r\n    return this.sessions.filter(s => s.isActive);\r\n  }\r\n\r\n  invalidateSession(sessionId: string): boolean {\r\n    const session = this.sessions.find(s => s.id === sessionId);\r\n    if (session) {\r\n      session.isActive = false;\r\n      this.saveSessions();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  invalidateAllUserSessions(userId: number): void {\r\n    this.sessions = this.sessions.map(session => {\r\n      if (session.userId === userId) {\r\n        session.isActive = false;\r\n      }\r\n      return session;\r\n    });\r\n    this.saveSessions();\r\n  }\r\n\r\n  // Méthodes utilitaires\r\n  validatePassword(password: string): { isValid: boolean; errors: string[] } {\r\n    const errors: string[] = [];\r\n\r\n    if (password.length < 6) {\r\n      errors.push('Le mot de passe doit contenir au moins 6 caractères');\r\n    }\r\n\r\n    if (!/\\d/.test(password)) {\r\n      errors.push('Le mot de passe doit contenir au moins un chiffre');\r\n    }\r\n\r\n    if (!/[a-z]/.test(password)) {\r\n      errors.push('Le mot de passe doit contenir au moins une lettre minuscule');\r\n    }\r\n\r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }\r\n\r\n  changePassword(userId: number, currentPassword: string, newPassword: string): { success: boolean; error?: string } {\r\n    try {\r\n      const user = this.users.find(u => u.id === userId);\r\n      if (!user) {\r\n        return {\r\n          success: false,\r\n          error: 'Utilisateur non trouvé'\r\n        };\r\n      }\r\n\r\n      // Vérifier le mot de passe actuel\r\n      const isCurrentPasswordValid = this.verifyPassword(currentPassword, user.passwordHash, user.salt);\r\n      if (!isCurrentPasswordValid) {\r\n        return {\r\n          success: false,\r\n          error: 'Mot de passe actuel incorrect'\r\n        };\r\n      }\r\n\r\n      // Valider le nouveau mot de passe\r\n      const validation = this.validatePassword(newPassword);\r\n      if (!validation.isValid) {\r\n        return {\r\n          success: false,\r\n          error: validation.errors.join(', ')\r\n        };\r\n      }\r\n\r\n      // Mettre à jour le mot de passe\r\n      const { hash, salt } = this.hashPassword(newPassword);\r\n      user.passwordHash = hash;\r\n      user.salt = salt;\r\n      user.loginAttempts = 0;\r\n      user.lockedUntil = undefined;\r\n\r\n      this.saveUsers();\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erreur lors du changement de mot de passe:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Erreur lors du changement de mot de passe'\r\n      };\r\n    }\r\n  }\r\n\r\n  resetPassword(userId: number, newPassword: string): { success: boolean; error?: string } {\r\n    try {\r\n      const user = this.users.find(u => u.id === userId);\r\n      if (!user) {\r\n        return {\r\n          success: false,\r\n          error: 'Utilisateur non trouvé'\r\n        };\r\n      }\r\n\r\n      // Valider le nouveau mot de passe\r\n      const validation = this.validatePassword(newPassword);\r\n      if (!validation.isValid) {\r\n        return {\r\n          success: false,\r\n          error: validation.errors.join(', ')\r\n        };\r\n      }\r\n\r\n      // Mettre à jour le mot de passe\r\n      const { hash, salt } = this.hashPassword(newPassword);\r\n      user.passwordHash = hash;\r\n      user.salt = salt;\r\n      user.loginAttempts = 0;\r\n      user.lockedUntil = undefined;\r\n\r\n      this.saveUsers();\r\n\r\n      // Invalider toutes les sessions de cet utilisateur\r\n      this.invalidateAllUserSessions(userId);\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erreur lors de la réinitialisation du mot de passe:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Erreur lors de la réinitialisation du mot de passe'\r\n      };\r\n    }\r\n  }\r\n\r\n  getLoginAttempts(username: string): number {\r\n    const user = this.users.find(u => u.username === username);\r\n    return user ? user.loginAttempts : 0;\r\n  }\r\n\r\n  unlockUser(userId: number): { success: boolean; error?: string } {\r\n    try {\r\n      const user = this.users.find(u => u.id === userId);\r\n      if (!user) {\r\n        return {\r\n          success: false,\r\n          error: 'Utilisateur non trouvé'\r\n        };\r\n      }\r\n\r\n      user.loginAttempts = 0;\r\n      user.lockedUntil = undefined;\r\n      this.saveUsers();\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erreur lors du déverrouillage de l\\'utilisateur:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Erreur lors du déverrouillage'\r\n      };\r\n    }\r\n  }\r\n\r\n  // Méthodes d'audit et de sécurité\r\n  getLoginHistory(limit: number = 50): Array<{\r\n    username: string;\r\n    loginTime: string;\r\n    success: boolean;\r\n    ip?: string;\r\n  }> {\r\n    // Pour l'instant, retourner les dernières connexions des sessions\r\n    return this.sessions\r\n      .slice(-limit)\r\n      .map(session => ({\r\n        username: session.username,\r\n        loginTime: session.createdAt,\r\n        success: true\r\n      }));\r\n  }\r\n\r\n  getSecurityStats(): {\r\n    totalUsers: number;\r\n    activeUsers: number;\r\n    lockedUsers: number;\r\n    activeSessions: number;\r\n    adminUsers: number;\r\n  } {\r\n    const now = new Date();\r\n    const lockedUsers = this.users.filter(user => {\r\n      if (user.lockedUntil) {\r\n        const lockExpires = new Date(user.lockedUntil);\r\n        return now < lockExpires;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {\r\n      totalUsers: this.users.length,\r\n      activeUsers: this.users.filter(u => u.isActive).length,\r\n      lockedUsers: lockedUsers.length,\r\n      activeSessions: this.getActiveSessions().length,\r\n      adminUsers: this.users.filter(u => u.role === 'admin' && u.isActive).length\r\n    };\r\n  }\r\n\r\n  // Méthodes de maintenance\r\n  cleanupInactiveSessions(): number {\r\n    const initialCount = this.sessions.length;\r\n    this.cleanExpiredSessions();\r\n    return initialCount - this.sessions.length;\r\n  }\r\n\r\n  exportUsers(): string {\r\n    const safeUsers = this.users.map(({ passwordHash, salt, ...user }) => user);\r\n    return JSON.stringify(safeUsers, null, 2);\r\n  }\r\n\r\n  // Méthode pour vérifier l'intégrité des données\r\n  validateDataIntegrity(): { isValid: boolean; errors: string[] } {\r\n    const errors: string[] = [];\r\n\r\n    // Vérifier qu'il y a au moins un administrateur actif\r\n    const activeAdmins = this.users.filter(u => u.role === 'admin' && u.isActive);\r\n    if (activeAdmins.length === 0) {\r\n      errors.push('Aucun administrateur actif trouvé');\r\n    }\r\n\r\n    // Vérifier l'unicité des noms d'utilisateur\r\n    const usernames = this.users.map(u => u.username);\r\n    const uniqueUsernames = new Set(usernames);\r\n    if (usernames.length !== uniqueUsernames.size) {\r\n      errors.push('Noms d\\'utilisateur en double détectés');\r\n    }\r\n\r\n    // Vérifier la validité des sessions\r\n    const validSessions = this.sessions.filter(session => {\r\n      const user = this.users.find(u => u.id === session.userId);\r\n      return user && user.isActive;\r\n    });\r\n\r\n    if (validSessions.length !== this.sessions.filter(s => s.isActive).length) {\r\n      errors.push('Sessions orphelines détectées');\r\n    }\r\n\r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }\r\n}","import * as fs from 'fs';\nimport * as path from 'path';\nimport archiver from 'archiver';\nimport extract, { Options } from 'extract-zip';\nimport { Entry, ZipFile } from 'yauzl';\nimport { app } from 'electron';\nimport { DatabaseService } from './DatabaseService';\n\nexport interface BackupMetadata {\n  version: string;\n  timestamp: string;\n  appVersion: string;\n  platform: string;\n  stats: {\n    totalBooks: number;\n    totalBorrowers: number;\n    totalAuthors: number;\n    totalCategories: number;\n    totalBorrowHistory: number;\n  };\n  checksum: string;\n}\n\nexport interface BackupInfo {\n  filePath: string;\n  fileName: string;\n  size: number;\n  createdAt: string;\n  metadata: BackupMetadata;\n}\n\nexport class BackupService {\n  private readonly backupDir: string;\n  private readonly tempDir: string;\n  private databaseService: DatabaseService;\n\n  constructor(databaseService: DatabaseService) {\n    this.databaseService = databaseService;\n    const userDataPath = app.getPath('userData');\n    this.backupDir = path.join(userDataPath, 'backups');\n    this.tempDir = path.join(userDataPath, 'temp');\n    \n    // Créer les dossiers s'ils n'existent pas\n    this.ensureDirectories();\n  }\n\n  private ensureDirectories(): void {\n    try {\n      if (!fs.existsSync(this.backupDir)) {\n        fs.mkdirSync(this.backupDir, { recursive: true });\n      }\n      if (!fs.existsSync(this.tempDir)) {\n        fs.mkdirSync(this.tempDir, { recursive: true });\n      }\n    } catch (error) {\n      console.error('Erreur lors de la création des dossiers:', error);\n    }\n  }\n\n  private async calculateChecksum(filePath: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const crypto = require('crypto');\n      const hash = crypto.createHash('sha256');\n      const stream = fs.createReadStream(filePath);\n      \n      stream.on('data', (data: string | Buffer) => hash.update(Buffer.from(data)));\n      stream.on('end', () => resolve(hash.digest('hex')));\n      stream.on('error', reject);\n    });\n  }\n\n  private async getBackupStats(): Promise<BackupMetadata['stats']> {\n    try {\n      const stats = await this.databaseService.getStats();\n      const borrowHistory = await this.databaseService.getBorrowHistory();\n      \n      return {\n        totalBooks: stats.totalBooks,\n        totalBorrowers: stats.totalBorrowers,\n        totalAuthors: stats.totalAuthors,\n        totalCategories: stats.totalCategories,\n        totalBorrowHistory: borrowHistory.length\n      };\n    } catch (error) {\n      console.error('Erreur lors de la récupération des statistiques:', error);\n      return {\n        totalBooks: 0,\n        totalBorrowers: 0,\n        totalAuthors: 0,\n        totalCategories: 0,\n        totalBorrowHistory: 0\n      };\n    }\n  }\n\n  async createBackup(): Promise<string> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n        const backupFileName = `bibliotheque_backup_${timestamp}.bak`;\n        const backupFilePath = path.join(this.backupDir, backupFileName);\n        \n        // Créer l'archive\n        const output = fs.createWriteStream(backupFilePath);\n        const archive = archiver('zip', {\n          zlib: { level: 9 } // Compression maximale\n        });\n\n        output.on('close', async () => {\n          try {\n            // Calculer le checksum\n            const checksum = await this.calculateChecksum(backupFilePath);\n            \n            // Créer les métadonnées\n            const stats = await this.getBackupStats();\n            const metadata: BackupMetadata = {\n              version: '1.0',\n              timestamp: new Date().toISOString(),\n              appVersion: app.getVersion(),\n              platform: process.platform,\n              stats,\n              checksum\n            };\n\n            // Sauvegarder les métadonnées dans un fichier séparé\n            const metadataPath = path.join(this.backupDir, `${backupFileName}.meta`);\n            fs.writeFileSync(metadataPath, JSON.stringify(metadata, null, 2));\n\n            console.log('Sauvegarde créée:', backupFilePath);\n            resolve(backupFilePath);\n          } catch (error) {\n            reject(error);\n          }\n        });\n\n        output.on('error', reject);\n        archive.on('error', reject);\n\n        archive.pipe(output);\n\n        // Ajouter la base de données\n        const dbPath = path.join(app.getPath('userData'), 'bibliotheque.db');\n        if (fs.existsSync(dbPath)) {\n          archive.file(dbPath, { name: 'bibliotheque.db' });\n        }\n\n        // Ajouter les fichiers de configuration\n        const usersPath = path.join(app.getPath('userData'), 'users.json');\n        if (fs.existsSync(usersPath)) {\n          archive.file(usersPath, { name: 'users.json' });\n        }\n\n        const sessionsPath = path.join(app.getPath('userData'), 'sessions.json');\n        if (fs.existsSync(sessionsPath)) {\n          archive.file(sessionsPath, { name: 'sessions.json' });\n        }\n\n        const settingsPath = path.join(app.getPath('userData'), 'settings.json');\n        if (fs.existsSync(settingsPath)) {\n          archive.file(settingsPath, { name: 'settings.json' });\n        }\n\n        // Ajouter un fichier d'informations sur la sauvegarde\n        const stats = await this.getBackupStats();\n        const backupInfo = {\n          version: '1.0',\n          timestamp: new Date().toISOString(),\n          appVersion: app.getVersion(),\n          platform: process.platform,\n          stats\n        };\n        \n        archive.append(JSON.stringify(backupInfo, null, 2), { name: 'backup_info.json' });\n\n        // Finaliser l'archive\n        await archive.finalize();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async restoreBackup(backupFilePath: string): Promise<boolean> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        // Vérifier que le fichier existe\n        if (!fs.existsSync(backupFilePath)) {\n          reject(new Error('Fichier de sauvegarde introuvable'));\n          return;\n        }\n\n        // Créer un dossier temporaire pour l'extraction\n        const extractPath = path.join(this.tempDir, `restore_${Date.now()}`);\n        fs.mkdirSync(extractPath, { recursive: true });\n\n        try {\n          // Extraire l'archive\n          await extract(backupFilePath, { dir: extractPath });\n\n          // Vérifier la structure de la sauvegarde\n          const backupInfoPath = path.join(extractPath, 'backup_info.json');\n          if (!fs.existsSync(backupInfoPath)) {\n            throw new Error('Structure de sauvegarde invalide');\n          }\n\n          // Lire les informations de sauvegarde\n          const backupInfo = JSON.parse(fs.readFileSync(backupInfoPath, 'utf8'));\n          console.log('Restauration de la sauvegarde:', backupInfo);\n\n          const userDataPath = app.getPath('userData');\n\n          // Sauvegarder les fichiers actuels\n          const backupCurrentPath = path.join(this.tempDir, `current_backup_${Date.now()}`);\n          fs.mkdirSync(backupCurrentPath, { recursive: true });\n\n          const filesToBackup = [\n            'bibliotheque.db',\n            'users.json',\n            'sessions.json',\n            'settings.json'\n          ];\n\n          filesToBackup.forEach(fileName => {\n            const currentFile = path.join(userDataPath, fileName);\n            if (fs.existsSync(currentFile)) {\n              fs.copyFileSync(currentFile, path.join(backupCurrentPath, fileName));\n            }\n          });\n\n          // Restaurer les fichiers\n          filesToBackup.forEach(fileName => {\n            const extractedFile = path.join(extractPath, fileName);\n            const targetFile = path.join(userDataPath, fileName);\n            \n            if (fs.existsSync(extractedFile)) {\n              fs.copyFileSync(extractedFile, targetFile);\n              console.log(`Fichier restauré: ${fileName}`);\n            }\n          });\n\n          // Nettoyer le dossier temporaire d'extraction\n          fs.rmSync(extractPath, { recursive: true, force: true });\n\n          console.log('Restauration terminée avec succès');\n          resolve(true);\n\n        } catch (extractError) {\n          // Nettoyer en cas d'erreur\n          if (fs.existsSync(extractPath)) {\n            fs.rmSync(extractPath, { recursive: true, force: true });\n          }\n          throw extractError;\n        }\n\n      } catch (error) {\n        console.error('Erreur lors de la restauration:', error);\n        reject(error);\n      }\n    });\n  }\n\n  async getBackupList(): Promise<BackupInfo[]> {\n    try {\n      const backups: BackupInfo[] = [];\n      const files = fs.readdirSync(this.backupDir);\n      \n      for (const file of files) {\n        if (file.endsWith('.bak')) {\n          const filePath = path.join(this.backupDir, file);\n          const metadataPath = path.join(this.backupDir, `${file}.meta`);\n          \n          try {\n            const stats = fs.statSync(filePath);\n            let metadata: BackupMetadata | null = null;\n            \n            // Essayer de lire les métadonnées\n            if (fs.existsSync(metadataPath)) {\n              metadata = JSON.parse(fs.readFileSync(metadataPath, 'utf8'));\n            } else {\n              // Essayer de lire les métadonnées depuis l'archive\n              metadata = await this.extractBackupMetadata(filePath);\n            }\n            \n            if (metadata) {\n              backups.push({\n                filePath,\n                fileName: file,\n                size: stats.size,\n                createdAt: stats.birthtime.toISOString(),\n                metadata\n              });\n            }\n          } catch (error) {\n            console.error(`Erreur lors de la lecture de la sauvegarde ${file}:`, error);\n          }\n        }\n      }\n      \n      // Trier par date de création (plus récent en premier)\n      return backups.sort((a, b) => \n        new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n      );\n    } catch (error) {\n      console.error('Erreur lors de la récupération de la liste des sauvegardes:', error);\n      return [];\n    }\n  }\n\n  private async extractBackupMetadata(backupFilePath: string): Promise<BackupMetadata | null> {\n    const tempExtractPath = path.join(this.tempDir, `meta_extract_${Date.now()}`);\n    \n    try {\n      await extract(backupFilePath, { \n        dir: tempExtractPath,\n        onEntry: (entry: Entry, zipFile: ZipFile) => {\n          // Ne extraire que le fichier backup_info.json\n          if (entry.fileName !== 'backup_info.json') {\n            zipFile.readEntry();\n          }\n        }\n      });\n      \n      const backupInfoPath = path.join(tempExtractPath, 'backup_info.json');\n      if (fs.existsSync(backupInfoPath)) {\n        const backupInfo = JSON.parse(fs.readFileSync(backupInfoPath, 'utf8'));\n        \n        // Calculer le checksum\n        const checksum = await this.calculateChecksum(backupFilePath);\n        \n        return {\n          version: backupInfo.version || '1.0',\n          timestamp: backupInfo.timestamp,\n          appVersion: backupInfo.appVersion,\n          platform: backupInfo.platform,\n          stats: backupInfo.stats,\n          checksum\n        };\n      }\n      \n      return null;\n    } catch (error) {\n      console.error('Erreur lors de l\\'extraction des métadonnées:', error);\n      return null;\n    } finally {\n      // Nettoyer\n      if (fs.existsSync(tempExtractPath)) {\n        fs.rmSync(tempExtractPath, { recursive: true, force: true });\n      }\n    }\n  }\n\n  async deleteBackup(backupFilePath: string): Promise<boolean> {\n    try {\n      if (fs.existsSync(backupFilePath)) {\n        fs.unlinkSync(backupFilePath);\n        \n        // Supprimer aussi le fichier de métadonnées s'il existe\n        const metadataPath = `${backupFilePath}.meta`;\n        if (fs.existsSync(metadataPath)) {\n          fs.unlinkSync(metadataPath);\n        }\n        \n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Erreur lors de la suppression de la sauvegarde:', error);\n      return false;\n    }\n  }\n\n  async validateBackup(backupFilePath: string): Promise<boolean> {\n    try {\n      const metadataPath = `${backupFilePath}.meta`;\n      \n      if (!fs.existsSync(backupFilePath)) {\n        return false;\n      }\n      \n      // Vérifier le checksum si les métadonnées existent\n      if (fs.existsSync(metadataPath)) {\n        const metadata: BackupMetadata = JSON.parse(fs.readFileSync(metadataPath, 'utf8'));\n        const currentChecksum = await this.calculateChecksum(backupFilePath);\n        \n        if (metadata.checksum !== currentChecksum) {\n          console.error('Checksum invalide pour la sauvegarde:', backupFilePath);\n          return false;\n        }\n      }\n      \n      // Vérifier que l'archive peut être ouverte et contient les fichiers essentiels\n      const tempExtractPath = path.join(this.tempDir, `validate_${Date.now()}`);\n      \n      try {\n        await extract(backupFilePath, { dir: tempExtractPath });\n        \n        const requiredFiles = ['backup_info.json'];\n        const hasRequiredFiles = requiredFiles.every(file => \n          fs.existsSync(path.join(tempExtractPath, file))\n        );\n        \n        return hasRequiredFiles;\n      } finally {\n        if (fs.existsSync(tempExtractPath)) {\n          fs.rmSync(tempExtractPath, { recursive: true, force: true });\n        }\n      }\n    } catch (error) {\n      console.error('Erreur lors de la validation de la sauvegarde:', error);\n      return false;\n    }\n  }\n\n  async exportDatabase(outputPath: string): Promise<void> {\n    try {\n      const dbPath = path.join(app.getPath('userData'), 'bibliotheque.db');\n      \n      if (!fs.existsSync(dbPath)) {\n        throw new Error('Base de données introuvable');\n      }\n      \n      fs.copyFileSync(dbPath, outputPath);\n    } catch (error) {\n      console.error('Erreur lors de l\\'export de la base de données:', error);\n      throw error;\n    }\n  }\n\n  async importDatabase(sourcePath: string): Promise<void> {\n    try {\n      if (!fs.existsSync(sourcePath)) {\n        throw new Error('Fichier source introuvable');\n      }\n      \n      const dbPath = path.join(app.getPath('userData'), 'bibliotheque.db');\n      \n      // Sauvegarder la base de données actuelle\n      const backupDbPath = path.join(app.getPath('userData'), `bibliotheque_backup_${Date.now()}.db`);\n      if (fs.existsSync(dbPath)) {\n        fs.copyFileSync(dbPath, backupDbPath);\n      }\n      \n      // Importer la nouvelle base de données\n      fs.copyFileSync(sourcePath, dbPath);\n      \n    } catch (error) {\n      console.error('Erreur lors de l\\'import de la base de données:', error);\n      throw error;\n    }\n  }\n\n  async scheduleAutoBackup(frequency: 'daily' | 'weekly' | 'monthly'): Promise<void> {\n    // Cette méthode peut être étendue pour implémenter des sauvegardes automatiques\n    // Pour l'instant, c'est un placeholder\n    console.log(`Sauvegarde automatique programmée: ${frequency}`);\n  }\n\n  async cleanOldBackups(keepCount: number = 10): Promise<number> {\n    try {\n      const backups = await this.getBackupList();\n      \n      if (backups.length <= keepCount) {\n        return 0; // Rien à nettoyer\n      }\n      \n      // Garder les plus récents, supprimer les anciens\n      const backupsToDelete = backups.slice(keepCount);\n      let deletedCount = 0;\n      \n      for (const backup of backupsToDelete) {\n        const success = await this.deleteBackup(backup.filePath);\n        if (success) {\n          deletedCount++;\n        }\n      }\n      \n      return deletedCount;\n    } catch (error) {\n      console.error('Erreur lors du nettoyage des sauvegardes:', error);\n      return 0;\n    }\n  }\n\n  getBackupDirectorySize(): number {\n    try {\n      const files = fs.readdirSync(this.backupDir);\n      let totalSize = 0;\n      \n      for (const file of files) {\n        const filePath = path.join(this.backupDir, file);\n        const stats = fs.statSync(filePath);\n        totalSize += stats.size;\n      }\n      \n      return totalSize;\n    } catch (error) {\n      console.error('Erreur lors du calcul de la taille du dossier de sauvegarde:', error);\n      return 0;\n    }\n  }\n\n  formatFileSize(bytes: number): string {\n    const units = ['B', 'KB', 'MB', 'GB'];\n    let size = bytes;\n    let unitIndex = 0;\n    \n    while (size >= 1024 && unitIndex < units.length - 1) {\n      size /= 1024;\n      unitIndex++;\n    }\n    \n    return `${size.toFixed(1)} ${units[unitIndex]}`;\n  }\n\n  \n}","import * as sqlite3 from 'sqlite3';\nimport * as path from 'path';\nimport { app } from 'electron';\nimport { Document, Book, Author, Category, Stats, Borrower, BorrowHistory, HistoryFilter, SyncOperation, createBookFromDocument } from '../preload';\n\ninterface SQLiteRunResult {\n  lastID: number;\n  changes: number;\n}\n\n\n// Interface pour les erreurs SQLite\ninterface SQLiteError extends Error {\n  code?: string;\n  errno?: number;\n}\n\nexport class DatabaseService {\n  private db: sqlite3.Database;\n\n  constructor() {\n    const dbPath = path.join(app.getPath('userData'), 'bibliotheque.db');\n    this.db = new sqlite3.Database(dbPath);\n  }\n\n  async initialize(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.db.serialize(() => {\n        // Table des auteurs avec support sync\n        this.db.run(`\n          CREATE TABLE IF NOT EXISTS authors (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            name TEXT NOT NULL UNIQUE,\n            biography TEXT,\n            birthDate TEXT,\n            nationality TEXT,\n            -- Métadonnées de synchronisation\n            localId TEXT UNIQUE,\n            remoteId TEXT,\n            syncStatus TEXT DEFAULT 'pending' CHECK (syncStatus IN ('synced', 'pending', 'conflict', 'error')),\n            lastModified DATETIME DEFAULT CURRENT_TIMESTAMP,\n            version INTEGER DEFAULT 1,\n            deletedAt DATETIME,\n            createdAt DATETIME DEFAULT CURRENT_TIMESTAMP\n          )\n        `);\n\n        // Table des catégories avec support sync\n        this.db.run(`\n          CREATE TABLE IF NOT EXISTS categories (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            name TEXT NOT NULL UNIQUE,\n            description TEXT,\n            color TEXT DEFAULT '#3E5C49',\n            -- Métadonnées de synchronisation\n            localId TEXT UNIQUE,\n            remoteId TEXT,\n            syncStatus TEXT DEFAULT 'pending' CHECK (syncStatus IN ('synced', 'pending', 'conflict', 'error')),\n            lastModified DATETIME DEFAULT CURRENT_TIMESTAMP,\n            version INTEGER DEFAULT 1,\n            deletedAt DATETIME,\n            createdAt DATETIME DEFAULT CURRENT_TIMESTAMP\n          )\n        `);\n\n        // Table des emprunteurs avec support sync\n        this.db.run(`\n          CREATE TABLE IF NOT EXISTS borrowers (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            type TEXT NOT NULL CHECK (type IN ('student', 'staff')),\n            firstName TEXT NOT NULL,\n            lastName TEXT NOT NULL,\n            matricule TEXT NOT NULL UNIQUE,\n            classe TEXT,\n            cniNumber TEXT,\n            position TEXT,\n            email TEXT,\n            phone TEXT,\n            -- Métadonnées de synchronisation\n            localId TEXT UNIQUE,\n            remoteId TEXT,\n            syncStatus TEXT DEFAULT 'pending' CHECK (syncStatus IN ('synced', 'pending', 'conflict', 'error')),\n            lastModified DATETIME DEFAULT CURRENT_TIMESTAMP,\n            version INTEGER DEFAULT 1,\n            deletedAt DATETIME,\n            createdAt DATETIME DEFAULT CURRENT_TIMESTAMP\n          )\n        `);\n\n        // Table des documents (nouvelle structure)\n        this.db.run(`\n          CREATE TABLE IF NOT EXISTS documents (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            \n            -- Champs principaux requis\n            auteur TEXT NOT NULL,\n            titre TEXT NOT NULL,\n            editeur TEXT NOT NULL,\n            lieuEdition TEXT NOT NULL,\n            annee TEXT NOT NULL,\n            descripteurs TEXT NOT NULL,\n            cote TEXT NOT NULL UNIQUE,\n            \n            -- Champs optionnels\n            isbn TEXT,\n            description TEXT,\n            couverture TEXT,\n            \n            -- Statut d'emprunt\n            estEmprunte BOOLEAN DEFAULT 0,\n            emprunteurId INTEGER,\n            dateEmprunt TEXT,\n            dateRetourPrevu TEXT,\n            dateRetour TEXT,\n            \n            -- Métadonnées de synchronisation\n            localId TEXT UNIQUE,\n            remoteId TEXT,\n            syncStatus TEXT DEFAULT 'pending' CHECK (syncStatus IN ('synced', 'pending', 'conflict', 'error')),\n            lastModified DATETIME DEFAULT CURRENT_TIMESTAMP,\n            version INTEGER DEFAULT 1,\n            deletedAt DATETIME,\n            createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,\n            \n            FOREIGN KEY (emprunteurId) REFERENCES borrowers(id)\n          )\n        `);\n\n        // Vue pour compatibilité avec l'ancienne table books\n        this.db.run(`\n          CREATE VIEW IF NOT EXISTS books_view AS\n          SELECT \n            id,\n            titre AS title,\n            auteur AS author,\n            isbn,\n            descripteurs AS category,\n            annee AS publishedDate,\n            description,\n            couverture AS coverUrl,\n            estEmprunte AS isBorrowed,\n            emprunteurId AS borrowerId,\n            dateEmprunt AS borrowDate,\n            dateRetourPrevu AS expectedReturnDate,\n            dateRetour AS returnDate,\n            createdAt\n          FROM documents\n          WHERE deletedAt IS NULL\n        `);\n\n        // Table historique des emprunts avec support sync\n        this.db.run(`\n          CREATE TABLE IF NOT EXISTS borrow_history (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            bookId INTEGER NOT NULL,\n            borrowerId INTEGER NOT NULL,\n            borrowDate DATETIME NOT NULL,\n            expectedReturnDate DATETIME NOT NULL,\n            actualReturnDate DATETIME,\n            status TEXT NOT NULL DEFAULT 'active' CHECK (status IN ('active', 'returned', 'overdue')),\n            notes TEXT,\n            -- Métadonnées de synchronisation\n            localId TEXT UNIQUE,\n            remoteId TEXT,\n            syncStatus TEXT DEFAULT 'pending' CHECK (syncStatus IN ('synced', 'pending', 'conflict', 'error')),\n            lastModified DATETIME DEFAULT CURRENT_TIMESTAMP,\n            version INTEGER DEFAULT 1,\n            deletedAt DATETIME,\n            createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,\n            FOREIGN KEY (bookId) REFERENCES documents(id),\n            FOREIGN KEY (borrowerId) REFERENCES borrowers(id)\n          )\n        `);\n\n        // Table de queue de synchronisation\n        this.db.run(`\n          CREATE TABLE IF NOT EXISTS sync_queue (\n            id TEXT PRIMARY KEY,\n            type TEXT NOT NULL CHECK (type IN ('document', 'author', 'category', 'borrower', 'history')),\n            operation TEXT NOT NULL CHECK (operation IN ('create', 'update', 'delete')),\n            data TEXT NOT NULL,\n            timestamp DATETIME NOT NULL,\n            retryCount INTEGER DEFAULT 0,\n            maxRetries INTEGER DEFAULT 3,\n            lastError TEXT,\n            createdAt DATETIME DEFAULT CURRENT_TIMESTAMP\n          )\n        `, (err) => {\n          if (err) {\n            reject(err);\n          } else {\n            this.seedInitialData().then(resolve).catch(reject);\n          }\n        });\n      });\n    });\n  }\n\n  private async seedInitialData(): Promise<void> {\n    try {\n      // Vérifier si des données existent déjà\n      const existingDocuments = await this.getDocuments();\n      if (existingDocuments.length > 0) {\n        console.log('Base de données déjà initialisée');\n        return;\n      }\n\n      const categories = [\n        { name: 'Fiction', description: 'Romans et nouvelles', color: '#3E5C49' },\n        { name: 'Science-Fiction', description: 'Littérature futuriste', color: '#C2571B' },\n        { name: 'Histoire', description: 'Livres historiques', color: '#6E6E6E' },\n        { name: 'Biographie', description: 'Vies de personnalités', color: '#3E5C49' },\n        { name: 'Sciences', description: 'Ouvrages scientifiques', color: '#C2571B' },\n        { name: 'Philosophie', description: 'Réflexions philosophiques', color: '#6E6E6E' },\n      ];\n\n      const authors = [\n        { name: 'Victor Hugo', biography: 'Écrivain français du XIXe siècle', nationality: 'Française' },\n        { name: 'Albert Camus', biography: 'Philosophe et écrivain français', nationality: 'Française' },\n        { name: 'Isaac Asimov', biography: 'Auteur de science-fiction', nationality: 'Américaine' },\n        { name: 'Marie Curie', biography: 'Physicienne et chimiste', nationality: 'Française' },\n        { name: 'Jules Verne', biography: 'Écrivain français de science-fiction', nationality: 'Française' },\n      ];\n\n      const borrowers = [\n        {\n          type: 'student' as const,\n          firstName: 'Jean',\n          lastName: 'Dupont',\n          matricule: 'ET001',\n          classe: 'Terminale C',\n          email: 'jean.dupont@ecole.cm'\n        },\n        {\n          type: 'student' as const,\n          firstName: 'Marie',\n          lastName: 'Martin',\n          matricule: 'ET002',\n          classe: 'Première D',\n          email: 'marie.martin@ecole.cm'\n        },\n        {\n          type: 'staff' as const,\n          firstName: 'Paul',\n          lastName: 'Nguyen',\n          matricule: 'ENS001',\n          position: 'Professeur de Mathématiques',\n          cniNumber: '123456789',\n          email: 'paul.nguyen@ecole.cm'\n        }\n      ];\n\n      const documents = [\n        {\n          auteur: 'Victor Hugo',\n          titre: 'Les Misérables',\n          editeur: 'Gallimard',\n          lieuEdition: 'Paris',\n          annee: '1862',\n          descripteurs: 'Fiction, Roman historique, XIXe siècle, France',\n          cote: 'FIC-HUG-001',\n          isbn: '978-2-253-00001-1',\n          description: 'Roman historique français décrivant la vie de divers personnages français dans la première moitié du XIXe siècle.',\n          estEmprunte: false,\n          syncStatus: 'synced' as const,\n          lastModified: new Date().toISOString(),\n          version: 1\n        },\n        {\n          auteur: 'Albert Camus',\n          titre: 'L\\'Étranger',\n          editeur: 'Gallimard',\n          lieuEdition: 'Paris',\n          annee: '1942',\n          descripteurs: 'Fiction, Philosophie, Absurde, Littérature française',\n          cote: 'FIC-CAM-001',\n          isbn: '978-2-253-00002-2',\n          description: 'Premier roman d\\'Albert Camus, publié en 1942. Il prend place dans la lignée des récits qui illustrent la philosophie de l\\'absurde.',\n          estEmprunte: false,\n          syncStatus: 'synced' as const,\n          lastModified: new Date().toISOString(),\n          version: 1\n        },\n        {\n          auteur: 'Isaac Asimov',\n          titre: 'Fondation',\n          editeur: 'Denoël',\n          lieuEdition: 'Paris',\n          annee: '1951',\n          descripteurs: 'Science-Fiction, Futur, Empire galactique, Psychohistoire',\n          cote: 'SF-ASI-001',\n          isbn: '978-2-253-00003-3',\n          description: 'Premier tome du cycle de Fondation, une saga de science-fiction se déroulant dans un futur lointain.',\n          estEmprunte: false,\n          syncStatus: 'synced' as const,\n          lastModified: new Date().toISOString(),\n          version: 1\n        },\n        {\n          auteur: 'Marie Curie',\n          titre: 'La Radioactivité',\n          editeur: 'Dunod',\n          lieuEdition: 'Paris',\n          annee: '1935',\n          descripteurs: 'Sciences, Physique, Radioactivité, Chimie',\n          cote: 'SCI-CUR-001',\n          description: 'Ouvrage fondamental sur la découverte et les applications de la radioactivité.',\n          estEmprunte: false,\n          syncStatus: 'synced' as const,\n          lastModified: new Date().toISOString(),\n          version: 1\n        },\n        {\n          auteur: 'Jules Verne',\n          titre: 'Vingt mille lieues sous les mers',\n          editeur: 'Hetzel',\n          lieuEdition: 'Paris',\n          annee: '1870',\n          descripteurs: 'Science-Fiction, Aventure, Sous-marins, Océan',\n          cote: 'SF-VER-001',\n          isbn: '978-2-253-00004-4',\n          description: 'Roman d\\'aventures de Jules Verne décrivant les exploits du capitaine Nemo à bord du Nautilus.',\n          estEmprunte: false,\n          syncStatus: 'synced' as const,\n          lastModified: new Date().toISOString(),\n          version: 1\n        }\n      ];\n\n      // Ajouter les catégories\n      for (const category of categories) {\n        await this.addCategory({\n          ...category,\n          syncStatus: 'pending',\n          lastModified: new Date().toISOString(),\n          version: 1,\n          createdAt: new Date().toISOString()\n        });\n      }\n\n      // Ajouter les auteurs\n      for (const author of authors) {\n        await this.addAuthor({\n          ...author,\n          syncStatus: 'pending',\n          lastModified: new Date().toISOString(),\n          version: 1,\n          createdAt: new Date().toISOString()\n        });\n      }\n\n      // Ajouter les emprunteurs\n      for (const borrower of borrowers) {\n        await this.addBorrower({\n          ...borrower,\n          syncStatus: 'pending',\n          lastModified: new Date().toISOString(),\n          version: 1,\n          createdAt: new Date().toISOString()\n        });\n      }\n\n      // Ajouter les documents\n      for (const document of documents) {\n        await this.addDocument(document);\n      }\n\n      console.log('Données d\\'exemple ajoutées avec succès');\n    } catch (error) {\n      console.error('Erreur lors de l\\'initialisation des données:', error);\n    }\n  }\n\n  // CRUD Borrowers\n  async getBorrowers(): Promise<Borrower[]> {\n    return new Promise((resolve, reject) => {\n      this.db.all('SELECT * FROM borrowers ORDER BY lastName, firstName', (err, rows) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(rows as Borrower[]);\n        }\n      });\n    });\n  }\n\n  async addBorrower(borrower: Omit<Borrower, 'id'>): Promise<number> {\n    return new Promise((resolve, reject) => {\n      const stmt = this.db.prepare(`\n        INSERT INTO borrowers (type, firstName, lastName, matricule, classe, cniNumber, position, email, phone)\n        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n      `);\n      \n      stmt.run([\n        borrower.type,\n        borrower.firstName,\n        borrower.lastName,\n        borrower.matricule,\n        borrower.classe || null,\n        borrower.cniNumber || null,\n        borrower.position || null,\n        borrower.email || null,\n        borrower.phone || null\n      ], function(this: sqlite3.Statement & { lastID?: number }, err: SQLiteError | null) {\n        if (err) {\n          if (err.code === 'SQLITE_CONSTRAINT' && err.message && err.message.includes('UNIQUE constraint failed: borrowers.matricule')) {\n            reject(new Error('Un emprunteur avec ce matricule existe déjà'));\n          } else {\n            reject(err);\n          }\n        } else {\n          resolve(this.lastID || 0);\n        }\n      });\n      \n      stmt.finalize();\n    });\n  }\n\n  async updateBorrower(borrower: Borrower): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      const stmt = this.db.prepare(`\n        UPDATE borrowers SET \n          type = ?, firstName = ?, lastName = ?, matricule = ?, \n          classe = ?, cniNumber = ?, position = ?, email = ?, phone = ?\n        WHERE id = ?\n      `);\n      \n      stmt.run([\n        borrower.type,\n        borrower.firstName,\n        borrower.lastName,\n        borrower.matricule,\n        borrower.classe || null,\n        borrower.cniNumber || null,\n        borrower.position || null,\n        borrower.email || null,\n        borrower.phone || null,\n        borrower.id\n      ], function(err) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(this.changes > 0);\n        }\n      });\n      \n      stmt.finalize();\n    });\n  }\n\n  async deleteBorrower(id: number): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      // Vérifier s'il n'y a pas d'emprunts actifs\n      this.db.get('SELECT COUNT(*) as count FROM borrow_history WHERE borrowerId = ? AND status = \"active\"', \n        [id], (err: any, row: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        \n        if (row.count > 0) {\n          reject(new Error('Impossible de supprimer : cet emprunteur a des livres non rendus'));\n          return;\n        }\n        \n        this.db.run('DELETE FROM borrowers WHERE id = ?', [id], function(err) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(this.changes > 0);\n          }\n        });\n      });\n    });\n  }\n\n  async searchBorrowers(query: string): Promise<Borrower[]> {\n    return new Promise((resolve, reject) => {\n      const searchQuery = `%${query}%`;\n      this.db.all(`\n        SELECT * FROM borrowers \n        WHERE firstName LIKE ? OR lastName LIKE ? OR matricule LIKE ? OR classe LIKE ? OR position LIKE ?\n        ORDER BY lastName, firstName\n      `, [searchQuery, searchQuery, searchQuery, searchQuery, searchQuery], (err, rows) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(rows as Borrower[]);\n        }\n      });\n    });\n  }\n\n  // Books CRUD mis à jour\n  async getBooks(): Promise<Book[]> {\n    return new Promise((resolve, reject) => {\n      this.db.all(`\n        SELECT \n          d.*,\n          b.firstName as borrower_firstName,\n          b.lastName as borrower_lastName\n        FROM documents d\n        LEFT JOIN borrowers b ON d.emprunteurId = b.id\n        WHERE d.deletedAt IS NULL\n        ORDER BY d.createdAt DESC\n      `, (err, rows) => {\n        if (err) {\n          reject(err);\n        } else {\n          const books = rows.map((row: any) => createBookFromDocument(row as Document));\n          resolve(books);\n        }\n      });\n    });\n  }\n\n  \n\n  // Gestion des emprunts\n async borrowBook(bookId: number, borrowerId: number, expectedReturnDate: string): Promise<number> {\n  return new Promise((resolve, reject) => {\n    const borrowDate = new Date().toISOString();\n    const database = this.db; // Capturer this.db dans une variable locale\n    \n    database.serialize(() => {\n      database.run('BEGIN TRANSACTION');\n      \n      const stmt1 = database.prepare(`\n        INSERT INTO borrow_history (bookId, borrowerId, borrowDate, expectedReturnDate, status)\n        VALUES (?, ?, ?, ?, 'active')\n      `);\n      \n      stmt1.run([bookId, borrowerId, borrowDate, expectedReturnDate], function(this: sqlite3.RunResult, err: Error | null) {\n        if (err) {\n          database.run('ROLLBACK');\n          reject(err);\n          return;\n        }\n        \n        const historyId = this.lastID;\n        \n        const stmt2 = database.prepare(`\n          UPDATE documents SET \n            estEmprunte = 1, \n            emprunteurId = ?, \n            dateEmprunt = ?, \n            dateRetourPrevu = ?\n          WHERE id = ?\n        `);\n        \n        stmt2.run([borrowerId, borrowDate, expectedReturnDate, bookId], (err: Error | null) => {\n          if (err) {\n            database.run('ROLLBACK');\n            reject(err);\n          } else {\n            database.run('COMMIT');\n            resolve(historyId);\n          }\n        });\n        \n        stmt2.finalize();\n      });\n      \n      stmt1.finalize();\n    });\n  });\n}\n\n  async returnBook(borrowHistoryId: number, notes?: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    const returnDate = new Date().toISOString();\n    const database = this.db; // Capturer this.db dans une variable locale\n    \n    database.serialize(() => {\n      database.run('BEGIN TRANSACTION');\n      \n      database.get('SELECT bookId FROM borrow_history WHERE id = ?', [borrowHistoryId], (err: Error | null, row: any) => {\n        if (err) {\n          database.run('ROLLBACK');\n          reject(err);\n          return;\n        }\n        \n        if (!row) {\n          database.run('ROLLBACK');\n          reject(new Error('Emprunt non trouvé'));\n          return;\n        }\n        \n        const bookId = row.bookId;\n        \n        const stmt1 = database.prepare(`\n          UPDATE borrow_history SET \n            actualReturnDate = ?, \n            status = 'returned',\n            notes = ?\n          WHERE id = ?\n        `);\n        \n        stmt1.run([returnDate, notes || null, borrowHistoryId], function(this: sqlite3.RunResult, err: Error | null) {\n          if (err) {\n            database.run('ROLLBACK');\n            reject(err);\n            return;\n          }\n          \n          const stmt2 = database.prepare(`\n            UPDATE documents SET \n              estEmprunte = 0, \n              emprunteurId = NULL, \n              dateEmprunt = NULL,\n              dateRetourPrevu = NULL,\n              dateRetour = ?\n            WHERE id = ?\n          `);\n          \n          stmt2.run([returnDate, bookId], function(this: sqlite3.RunResult, err: Error | null) {\n            if (err) {\n              database.run('ROLLBACK');\n              reject(err);\n            } else {\n              database.run('COMMIT');\n              resolve((this.changes || 0) > 0);\n            }\n          });\n          \n          stmt2.finalize();\n        });\n        \n        stmt1.finalize();\n      });\n    });\n  });\n}\n\n  async getBorrowedBooks(): Promise<BorrowHistory[]> {\n    return new Promise((resolve, reject) => {\n      this.db.all(`\n        SELECT \n          bh.*,\n          d.titre as title, d.auteur as author, d.descripteurs as category, d.couverture as coverUrl, \n          d.isbn, d.annee as publishedDate, d.description, d.estEmprunte as isBorrowed,\n          d.emprunteurId as borrowerId, d.dateEmprunt as borrowDate, d.dateRetourPrevu as expectedReturnDate,\n          d.dateRetour as returnDate, d.syncStatus as bookSyncStatus, d.lastModified as bookLastModified,\n          d.version as bookVersion, d.createdAt as bookCreatedAt,\n          br.firstName, br.lastName, br.type, br.matricule, br.classe, br.position,\n          br.email, br.phone, br.cniNumber, br.syncStatus as borrowerSyncStatus,\n          br.lastModified as borrowerLastModified, br.version as borrowerVersion,\n          br.createdAt as borrowerCreatedAt\n        FROM borrow_history bh\n        JOIN documents d ON bh.bookId = d.id\n        JOIN borrowers br ON bh.borrowerId = br.id\n        WHERE bh.status = 'active' AND d.deletedAt IS NULL\n        ORDER BY bh.borrowDate DESC\n      `, (err, rows: any[]) => {\n        if (err) {\n          reject(err);\n        } else {\n          const history = rows.map(row => ({\n            id: row.id,\n            bookId: row.bookId,\n            borrowerId: row.borrowerId,\n            borrowDate: row.borrowDate,\n            expectedReturnDate: row.expectedReturnDate,\n            actualReturnDate: row.actualReturnDate,\n            status: row.status,\n            notes: row.notes,\n            syncStatus: row.syncStatus || 'synced',\n            lastModified: row.lastModified || new Date().toISOString(),\n            version: row.version || 1,\n            createdAt: row.createdAt,\n            book: {\n              id: row.bookId,\n              // English properties (Book interface)\n              title: row.title,\n              author: row.author,\n              isbn: row.isbn,\n              category: row.category,\n              publishedDate: row.publishedDate,\n              description: row.description,\n              coverUrl: row.coverUrl,\n              isBorrowed: Boolean(row.isBorrowed),\n              borrowerId: row.borrowerId,\n              borrowDate: row.borrowDate,\n              expectedReturnDate: row.expectedReturnDate,\n              returnDate: row.returnDate,\n              borrowerName: `${row.firstName} ${row.lastName}`,\n              // French properties (Document interface)\n              auteur: row.author,\n              titre: row.title,\n              editeur: 'Non spécifié',\n              lieuEdition: 'Non spécifié',\n              annee: row.publishedDate,\n              descripteurs: row.category,\n              cote: `${row.category.substring(0,3)}-${row.author.substring(0,3)}-001`.toUpperCase(),\n              couverture: row.coverUrl,\n              estEmprunte: Boolean(row.isBorrowed),\n              emprunteurId: row.borrowerId,\n              dateEmprunt: row.borrowDate,\n              dateRetourPrevu: row.expectedReturnDate,\n              dateRetour: row.returnDate,\n              nomEmprunteur: `${row.firstName} ${row.lastName}`,\n              // Sync properties\n              syncStatus: row.bookSyncStatus || 'synced',\n              lastModified: row.bookLastModified || new Date().toISOString(),\n              version: row.bookVersion || 1,\n              createdAt: row.bookCreatedAt\n            },\n            borrower: {\n              id: row.borrowerId,\n              type: row.type,\n              firstName: row.firstName,\n              lastName: row.lastName,\n              matricule: row.matricule,\n              classe: row.classe,\n              cniNumber: row.cniNumber,\n              position: row.position,\n              email: row.email,\n              phone: row.phone,\n              syncStatus: row.borrowerSyncStatus || 'synced',\n              lastModified: row.borrowerLastModified || new Date().toISOString(),\n              version: row.borrowerVersion || 1,\n              createdAt: row.borrowerCreatedAt\n            }\n          }));\n          resolve(history);\n        }\n      });\n    });\n  }\n\n  async getBorrowHistory(filter?: HistoryFilter): Promise<BorrowHistory[]> {\n    return new Promise((resolve, reject) => {\n      let query = `\n        SELECT \n          bh.*,\n          d.titre as title, d.auteur as author, d.descripteurs as category, d.couverture as coverUrl, \n          d.isbn, d.annee as publishedDate, d.description, d.estEmprunte as isBorrowed,\n          d.emprunteurId as borrowerId, d.dateEmprunt as borrowDate, d.dateRetourPrevu as expectedReturnDate,\n          d.dateRetour as returnDate, d.syncStatus as bookSyncStatus, d.lastModified as bookLastModified,\n          d.version as bookVersion, d.createdAt as bookCreatedAt,\n          br.firstName, br.lastName, br.type, br.matricule, br.classe, br.position,\n          br.email, br.phone, br.cniNumber, br.syncStatus as borrowerSyncStatus,\n          br.lastModified as borrowerLastModified, br.version as borrowerVersion,\n          br.createdAt as borrowerCreatedAt\n        FROM borrow_history bh\n        JOIN documents d ON bh.bookId = d.id\n        JOIN borrowers br ON bh.borrowerId = br.id\n      `;\n      \n      const conditions: string[] = ['d.deletedAt IS NULL'];\n      const params: any[] = [];\n      \n      if (filter) {\n        if (filter.startDate) {\n          conditions.push('bh.borrowDate >= ?');\n          params.push(filter.startDate);\n        }\n        \n        if (filter.endDate) {\n          conditions.push('bh.borrowDate <= ?');\n          params.push(filter.endDate + ' 23:59:59');\n        }\n        \n        if (filter.borrowerType && filter.borrowerType !== 'all') {\n          conditions.push('br.type = ?');\n          params.push(filter.borrowerType);\n        }\n        \n        if (filter.status && filter.status !== 'all') {\n          conditions.push('bh.status = ?');\n          params.push(filter.status);\n        }\n        \n        if (filter.borrowerId) {\n          conditions.push('bh.borrowerId = ?');\n          params.push(filter.borrowerId);\n        }\n        \n        if (filter.bookId) {\n          conditions.push('bh.bookId = ?');\n          params.push(filter.bookId);\n        }\n      }\n      \n      if (conditions.length > 0) {\n        query += ' WHERE ' + conditions.join(' AND ');\n      }\n      \n      query += ' ORDER BY bh.borrowDate DESC';\n      \n      this.db.all(query, params, (err, rows: any[]) => {\n        if (err) {\n          reject(err);\n        } else {\n          const history = rows.map(row => ({\n            id: row.id,\n            bookId: row.bookId,\n            borrowerId: row.borrowerId,\n            borrowDate: row.borrowDate,\n            expectedReturnDate: row.expectedReturnDate,\n            actualReturnDate: row.actualReturnDate,\n            status: row.status,\n            notes: row.notes,\n            syncStatus: row.syncStatus || 'synced',\n            lastModified: row.lastModified || new Date().toISOString(),\n            version: row.version || 1,\n            createdAt: row.createdAt,\n            book: {\n              id: row.bookId,\n              // English properties (Book interface)\n              title: row.title,\n              author: row.author,\n              isbn: row.isbn,\n              category: row.category,\n              publishedDate: row.publishedDate,\n              description: row.description,\n              coverUrl: row.coverUrl,\n              isBorrowed: Boolean(row.isBorrowed),\n              borrowerId: row.borrowerId,\n              borrowDate: row.borrowDate,\n              expectedReturnDate: row.expectedReturnDate,\n              returnDate: row.returnDate,\n              borrowerName: `${row.firstName} ${row.lastName}`,\n              // French properties (Document interface)\n              auteur: row.author,\n              titre: row.title,\n              editeur: 'Non spécifié',\n              lieuEdition: 'Non spécifié',\n              annee: row.publishedDate,\n              descripteurs: row.category,\n              cote: `${row.category.substring(0,3)}-${row.author.substring(0,3)}-001`.toUpperCase(),\n              couverture: row.coverUrl,\n              estEmprunte: Boolean(row.isBorrowed),\n              emprunteurId: row.borrowerId,\n              dateEmprunt: row.borrowDate,\n              dateRetourPrevu: row.expectedReturnDate,\n              dateRetour: row.returnDate,\n              nomEmprunteur: `${row.firstName} ${row.lastName}`,\n              // Sync properties\n              syncStatus: row.bookSyncStatus || 'synced',\n              lastModified: row.bookLastModified || new Date().toISOString(),\n              version: row.bookVersion || 1,\n              createdAt: row.bookCreatedAt\n            },\n            borrower: {\n              id: row.borrowerId,\n              type: row.type,\n              firstName: row.firstName,\n              lastName: row.lastName,\n              matricule: row.matricule,\n              classe: row.classe,\n              cniNumber: row.cniNumber,\n              position: row.position,\n              email: row.email,\n              phone: row.phone,\n              syncStatus: row.borrowerSyncStatus || 'synced',\n              lastModified: row.borrowerLastModified || new Date().toISOString(),\n              version: row.borrowerVersion || 1,\n              createdAt: row.borrowerCreatedAt\n            }\n          }));\n          resolve(history);\n        }\n      });\n    });\n  }\n\n  // Autres méthodes existantes\n  async getAuthors(): Promise<Author[]> {\n    return new Promise((resolve, reject) => {\n      this.db.all('SELECT * FROM authors ORDER BY name', (err, rows) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(rows as Author[]);\n        }\n      });\n    });\n  }\n\n  async addAuthor(author: Omit<Author, 'id'>): Promise<number> {\n    return new Promise((resolve, reject) => {\n      const stmt = this.db.prepare(`\n        INSERT OR IGNORE INTO authors (name, biography, birthDate, nationality)\n        VALUES (?, ?, ?, ?)\n      `);\n      \n      stmt.run([\n        author.name,\n        author.biography,\n        author.birthDate,\n        author.nationality\n      ], function(err) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(this.lastID || 0);\n        }\n      });\n      \n      stmt.finalize();\n    });\n  }\n\n  async getCategories(): Promise<Category[]> {\n    return new Promise((resolve, reject) => {\n      this.db.all('SELECT * FROM categories ORDER BY name', (err, rows) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(rows as Category[]);\n        }\n      });\n    });\n  }\n\n  async addCategory(category: Omit<Category, 'id'>): Promise<number> {\n    return new Promise((resolve, reject) => {\n      const stmt = this.db.prepare(`\n        INSERT OR IGNORE INTO categories (name, description, color)\n        VALUES (?, ?, ?)\n      `);\n      \n      stmt.run([\n        category.name,\n        category.description,\n        category.color\n      ], function(err) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(this.lastID || 0);\n        }\n      });\n      \n      stmt.finalize();\n    });\n  }\n\n  async searchBooks(query: string): Promise<Book[]> {\n    return new Promise((resolve, reject) => {\n      const searchQuery = `%${query}%`;\n      this.db.all(`\n        SELECT * FROM books \n        WHERE title LIKE ? OR author LIKE ? OR category LIKE ? OR description LIKE ?\n        ORDER BY title\n      `, [searchQuery, searchQuery, searchQuery, searchQuery], (err, rows) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(rows as Book[]);\n        }\n      });\n    });\n  }\n\n  async getStats(): Promise<Stats> {\n  return new Promise((resolve, reject) => {\n    this.db.serialize(() => {\n      const stats: Partial<Stats> = {};\n      \n      // Utiliser documents au lieu de books\n      this.db.get('SELECT COUNT(*) as count FROM documents WHERE deletedAt IS NULL', (err: Error | null, row: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        stats.totalBooks = row.count || 0;\n        \n        this.db.get('SELECT COUNT(*) as count FROM documents WHERE estEmprunte = 1 AND deletedAt IS NULL', (err: Error | null, row: any) => {\n          if (err) {\n            reject(err);\n            return;\n          }\n          stats.borrowedBooks = row.count || 0;\n          stats.availableBooks = (stats.totalBooks || 0) - (stats.borrowedBooks || 0);\n          \n          this.db.get('SELECT COUNT(*) as count FROM authors WHERE deletedAt IS NULL', (err: Error | null, row: any) => {\n            if (err) {\n              reject(err);\n              return;\n            }\n            stats.totalAuthors = row.count || 0;\n            \n            this.db.get('SELECT COUNT(*) as count FROM categories WHERE deletedAt IS NULL', (err: Error | null, row: any) => {\n              if (err) {\n                reject(err);\n                return;\n              }\n              stats.totalCategories = row.count || 0;\n              \n              this.db.get('SELECT COUNT(*) as count FROM borrowers WHERE deletedAt IS NULL', (err: Error | null, row: any) => {\n                if (err) {\n                  reject(err);\n                  return;\n                }\n                stats.totalBorrowers = row.count || 0;\n                \n                this.db.get('SELECT COUNT(*) as count FROM borrowers WHERE type = \"student\" AND deletedAt IS NULL', (err: Error | null, row: any) => {\n                  if (err) {\n                    reject(err);\n                    return;\n                  }\n                  stats.totalStudents = row.count || 0;\n                  \n                  this.db.get('SELECT COUNT(*) as count FROM borrowers WHERE type = \"staff\" AND deletedAt IS NULL', (err: Error | null, row: any) => {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n                    stats.totalStaff = row.count || 0;\n                    \n                    // Compter les livres en retard\n                    const now = new Date().toISOString();\n                    this.db.get(`\n                      SELECT COUNT(*) as count FROM borrow_history \n                      WHERE status = 'active' AND expectedReturnDate < ? AND deletedAt IS NULL\n                    `, [now], (err: Error | null, row: any) => {\n                      if (err) {\n                        reject(err);\n                        return;\n                      }\n                      stats.overdueBooks = row.count || 0;\n                      resolve(stats as Stats);\n                    });\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\n  // Méthode pour nettoyer la base de données (utile pour les tests)\n  async clearDatabase(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.db.serialize(() => {\n        this.db.run('DELETE FROM borrow_history', (err) => {\n          if (err) {\n            reject(err);\n            return;\n          }\n          this.db.run('DELETE FROM books', (err) => {\n            if (err) {\n              reject(err);\n              return;\n            }\n            this.db.run('DELETE FROM borrowers', (err) => {\n              if (err) {\n                reject(err);\n                return;\n              }\n              this.db.run('DELETE FROM authors', (err) => {\n                if (err) {\n                  reject(err);\n                  return;\n                }\n                this.db.run('DELETE FROM categories', (err) => {\n                  if (err) {\n                    reject(err);\n                    return;\n                  }\n                  resolve();\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  }\n\n  // ===============================\n  // NOUVELLES MÉTHODES POUR DOCUMENTS\n  // ===============================\n\n  async getDocuments(): Promise<Document[]> {\n    return new Promise((resolve, reject) => {\n      this.db.all(`\n        SELECT \n          d.*,\n          b.firstName as borrower_firstName,\n          b.lastName as borrower_lastName\n        FROM documents d\n        LEFT JOIN borrowers b ON d.emprunteurId = b.id\n        WHERE d.deletedAt IS NULL\n        ORDER BY d.lastModified DESC\n      `, (err, rows) => {\n        if (err) {\n          reject(err);\n        } else {\n          const documents = rows.map((row: any) => ({\n            id: row.id,\n            auteur: row.auteur,\n            titre: row.titre,\n            editeur: row.editeur,\n            lieuEdition: row.lieuEdition,\n            annee: row.annee,\n            descripteurs: row.descripteurs,\n            cote: row.cote,\n            isbn: row.isbn,\n            description: row.description,\n            couverture: row.couverture,\n            estEmprunte: Boolean(row.estEmprunte),\n            emprunteurId: row.emprunteurId,\n            dateEmprunt: row.dateEmprunt,\n            dateRetourPrevu: row.dateRetourPrevu,\n            dateRetour: row.dateRetour,\n            nomEmprunteur: row.borrower_firstName && row.borrower_lastName \n              ? `${row.borrower_firstName} ${row.borrower_lastName}` \n              : undefined,\n            localId: row.localId,\n            remoteId: row.remoteId,\n            syncStatus: row.syncStatus,\n            lastModified: row.lastModified,\n            version: row.version,\n            deletedAt: row.deletedAt,\n            createdAt: row.createdAt\n          }));\n          resolve(documents);\n        }\n      });\n    });\n  }\n\n  async addDocument(document: Omit<Document, 'id'>): Promise<number> {\n    return new Promise((resolve, reject) => {\n      const localId = `doc_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      const now = new Date().toISOString();\n      \n      const stmt = this.db.prepare(`\n        INSERT INTO documents (\n          auteur, titre, editeur, lieuEdition, annee, descripteurs, cote,\n          isbn, description, couverture, estEmprunte,\n          localId, syncStatus, lastModified, version, createdAt\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n      `);\n      \n      stmt.run([\n        document.auteur,\n        document.titre,\n        document.editeur,\n        document.lieuEdition,\n        document.annee,\n        document.descripteurs,\n        document.cote,\n        document.isbn || null,\n        document.description || null,\n        document.couverture || null,\n        document.estEmprunte ? 1 : 0,\n        localId,\n        'pending',\n        now,\n        1,\n        now\n      ], function(this: sqlite3.Statement & { lastID?: number }, err: SQLiteError | null) {\n        if (err) {\n          if (err.code === 'SQLITE_CONSTRAINT' && err.message && err.message.includes('UNIQUE constraint failed: documents.cote')) {\n            reject(new Error('Un document avec cette cote existe déjà'));\n          } else {\n            reject(err);\n          }\n        } else {\n          resolve(this.lastID || 0);\n        }\n      });\n      \n      stmt.finalize();\n    });\n  }\n\n  async updateDocument(document: Document): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      const now = new Date().toISOString();\n      \n      const stmt = this.db.prepare(`\n        UPDATE documents SET \n          auteur = ?, titre = ?, editeur = ?, lieuEdition = ?, annee = ?, \n          descripteurs = ?, cote = ?, isbn = ?, description = ?, couverture = ?,\n          lastModified = ?, version = version + 1, syncStatus = 'pending'\n        WHERE id = ? AND deletedAt IS NULL\n      `);\n      \n      stmt.run([\n        document.auteur,\n        document.titre,\n        document.editeur,\n        document.lieuEdition,\n        document.annee,\n        document.descripteurs,\n        document.cote,\n        document.isbn || null,\n        document.description || null,\n        document.couverture || null,\n        now,\n        document.id\n      ], function(this: sqlite3.Statement & { changes?: number }, err: SQLiteError | null) {\n        if (err) {\n          if (err.code === 'SQLITE_CONSTRAINT' && err.message && err.message.includes('UNIQUE constraint failed: documents.cote')) {\n            reject(new Error('Un autre document avec cette cote existe déjà'));\n          } else {\n            reject(err);\n          }\n        } else {\n          resolve((this.changes || 0) > 0);\n        }\n      });\n      \n      stmt.finalize();\n    });\n  }\n\n  async deleteDocument(id: number): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      const now = new Date().toISOString();\n      \n      // Soft delete\n      const stmt = this.db.prepare(`\n        UPDATE documents \n        SET deletedAt = ?, lastModified = ?, syncStatus = 'pending', version = version + 1\n        WHERE id = ? AND deletedAt IS NULL\n      `);\n      \n      stmt.run([now, now, id], function(this: sqlite3.Statement & { changes?: number }, err: SQLiteError | null) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve((this.changes || 0) > 0);\n        }\n      });\n      \n      stmt.finalize();\n    });\n  }\n\n  async searchDocuments(query: string): Promise<Document[]> {\n    return new Promise((resolve, reject) => {\n      const searchTerm = `%${query.toLowerCase()}%`;\n      \n      this.db.all(`\n        SELECT \n          d.*,\n          b.firstName as borrower_firstName,\n          b.lastName as borrower_lastName\n        FROM documents d\n        LEFT JOIN borrowers b ON d.emprunteurId = b.id\n        WHERE d.deletedAt IS NULL\n        AND (\n          LOWER(d.titre) LIKE ? OR \n          LOWER(d.auteur) LIKE ? OR \n          LOWER(d.editeur) LIKE ? OR\n          LOWER(d.descripteurs) LIKE ? OR\n          LOWER(d.cote) LIKE ? OR\n          LOWER(d.isbn) LIKE ?\n        )\n        ORDER BY d.lastModified DESC\n      `, [searchTerm, searchTerm, searchTerm, searchTerm, searchTerm, searchTerm], (err, rows) => {\n        if (err) {\n          reject(err);\n        } else {\n          const documents = rows.map((row: any) => ({\n            id: row.id,\n            auteur: row.auteur,\n            titre: row.titre,\n            editeur: row.editeur,\n            lieuEdition: row.lieuEdition,\n            annee: row.annee,\n            descripteurs: row.descripteurs,\n            cote: row.cote,\n            isbn: row.isbn,\n            description: row.description,\n            couverture: row.couverture,\n            estEmprunte: Boolean(row.estEmprunte),\n            emprunteurId: row.emprunteurId,\n            dateEmprunt: row.dateEmprunt,\n            dateRetourPrevu: row.dateRetourPrevu,\n            dateRetour: row.dateRetour,\n            nomEmprunteur: row.borrower_firstName && row.borrower_lastName \n              ? `${row.borrower_firstName} ${row.borrower_lastName}` \n              : undefined,\n            localId: row.localId,\n            remoteId: row.remoteId,\n            syncStatus: row.syncStatus,\n            lastModified: row.lastModified,\n            version: row.version,\n            deletedAt: row.deletedAt,\n            createdAt: row.createdAt\n          }));\n          resolve(documents);\n        }\n      });\n    });\n  }\n\n  // ===============================\n  // MÉTHODES DE SYNCHRONISATION\n  // ===============================\n\n  async getSyncQueue(): Promise<SyncOperation[]> {\n    return new Promise((resolve, reject) => {\n      this.db.all('SELECT * FROM sync_queue ORDER BY timestamp ASC', (err, rows) => {\n        if (err) {\n          reject(err);\n        } else {\n          const operations = rows.map((row: any) => ({\n            id: row.id,\n            type: row.type,\n            operation: row.operation,\n            data: JSON.parse(row.data),\n            timestamp: row.timestamp,\n            retryCount: row.retryCount,\n            maxRetries: row.maxRetries\n          }));\n          resolve(operations);\n        }\n      });\n    });\n  }\n\n  async addSyncOperation(operation: SyncOperation): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const stmt = this.db.prepare(`\n        INSERT INTO sync_queue (id, type, operation, data, timestamp, retryCount, maxRetries)\n        VALUES (?, ?, ?, ?, ?, ?, ?)\n      `);\n      \n      stmt.run([\n        operation.id,\n        operation.type,\n        operation.operation,\n        JSON.stringify(operation.data),\n        operation.timestamp,\n        operation.retryCount,\n        operation.maxRetries\n      ], (err) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      });\n      \n      stmt.finalize();\n    });\n  }\n\n  async updateSyncOperation(operation: SyncOperation): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const stmt = this.db.prepare(`\n        UPDATE sync_queue \n        SET retryCount = ?, data = ?, lastError = ?\n        WHERE id = ?\n      `);\n      \n      stmt.run([\n        operation.retryCount,\n        JSON.stringify(operation.data),\n        '', // lastError sera ajouté plus tard si nécessaire\n        operation.id\n      ], (err) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      });\n      \n      stmt.finalize();\n    });\n  }\n\n  async removeSyncOperation(operationId: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.db.run('DELETE FROM sync_queue WHERE id = ?', [operationId], (err) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  // Méthodes pour mettre à jour les IDs distants\n  async updateDocumentRemoteId(localId: string, remoteId: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.db.run(\n        'UPDATE documents SET remoteId = ?, syncStatus = \"synced\" WHERE localId = ?',\n        [remoteId, localId],\n        (err) => {\n          if (err) reject(err);\n          else resolve();\n        }\n      );\n    });\n  }\n\n  async updateAuthorRemoteId(localId: string, remoteId: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.db.run(\n        'UPDATE authors SET remoteId = ?, syncStatus = \"synced\" WHERE localId = ?',\n        [remoteId, localId],\n        (err) => {\n          if (err) reject(err);\n          else resolve();\n        }\n      );\n    });\n  }\n\n  async updateCategoryRemoteId(localId: string, remoteId: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.db.run(\n        'UPDATE categories SET remoteId = ?, syncStatus = \"synced\" WHERE localId = ?',\n        [remoteId, localId],\n        (err) => {\n          if (err) reject(err);\n          else resolve();\n        }\n      );\n    });\n  }\n\n  async updateBorrowerRemoteId(localId: string, remoteId: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.db.run(\n        'UPDATE borrowers SET remoteId = ?, syncStatus = \"synced\" WHERE localId = ?',\n        [remoteId, localId],\n        (err) => {\n          if (err) reject(err);\n          else resolve();\n        }\n      );\n    });\n  }\n\n  async updateBorrowHistoryRemoteId(localId: string, remoteId: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.db.run(\n        'UPDATE borrow_history SET remoteId = ?, syncStatus = \"synced\" WHERE localId = ?',\n        [remoteId, localId],\n        (err) => {\n          if (err) reject(err);\n          else resolve();\n        }\n      );\n    });\n  }\n}","import * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport { app } from 'electron';\r\n\r\nexport interface InstitutionSettings {\r\n  name: string;\r\n  address: string;\r\n  city: string;\r\n  country: string;\r\n  phone: string;\r\n  email: string;\r\n  website: string;\r\n  logo: string;\r\n  description: string;\r\n  establishedYear?: string;\r\n  type: 'school' | 'university' | 'library' | 'other';\r\n  director?: string;\r\n  capacity?: number;\r\n}\r\n\r\nexport interface BackupSettings {\r\n  autoBackup: boolean;\r\n  backupFrequency: 'daily' | 'weekly' | 'monthly';\r\n  lastBackup: string;\r\n  backupLocation: string;\r\n  keepBackups: number;\r\n  cloudSync: boolean;\r\n  cloudProvider: 'google' | 'dropbox' | 'onedrive' | 'none';\r\n  cloudPath?: string;\r\n}\r\n\r\nexport interface SecuritySettings {\r\n  requireAuth: boolean;\r\n  sessionTimeout: number; // en minutes\r\n  maxLoginAttempts: number;\r\n  lockoutDuration: number; // en minutes\r\n  passwordPolicy: {\r\n    minLength: number;\r\n    requireNumbers: boolean;\r\n    requireSymbols: boolean;\r\n    requireUppercase: boolean;\r\n    requireLowercase: boolean;\r\n    maxAge?: number; // en jours\r\n  };\r\n  twoFactorAuth: boolean;\r\n  auditLog: boolean;\r\n}\r\n\r\nexport interface AppearanceSettings {\r\n  theme: 'light' | 'dark' | 'auto';\r\n  language: 'fr' | 'en' | 'es';\r\n  fontSize: 'small' | 'medium' | 'large';\r\n  compactMode: boolean;\r\n  animations: boolean;\r\n  colorScheme: 'default' | 'green' | 'blue' | 'purple';\r\n}\r\n\r\nexport interface LibrarySettings {\r\n  defaultLoanPeriod: number; // en jours\r\n  maxRenewals: number;\r\n  maxBooksPerUser: number;\r\n  lateFeesEnabled: boolean;\r\n  lateFeeAmount: number;\r\n  gracePeriod: number; // en jours\r\n  reservationEnabled: boolean;\r\n  reservationPeriod: number; // en jours\r\n  categoriesRequired: boolean;\r\n  isbnRequired: boolean;\r\n}\r\n\r\nexport interface NotificationSettings {\r\n  emailNotifications: boolean;\r\n  overdueReminders: boolean;\r\n  reminderDaysBefore: number;\r\n  returnConfirmation: boolean;\r\n  newBookNotifications: boolean;\r\n  systemNotifications: boolean;\r\n  smtpServer?: string;\r\n  smtpPort?: number;\r\n  smtpUser?: string;\r\n  smtpPassword?: string;\r\n  smtpSecure?: boolean;\r\n}\r\n\r\nexport interface ApplicationSettings {\r\n  institution: InstitutionSettings;\r\n  backup: BackupSettings;\r\n  security: SecuritySettings;\r\n  appearance: AppearanceSettings;\r\n  library: LibrarySettings;\r\n  notifications: NotificationSettings;\r\n  version: string;\r\n  lastUpdated: string;\r\n}\r\n\r\nexport class SettingsService {\r\n  private settingsFilePath: string;\r\n  private settings: ApplicationSettings;\r\n  private defaultSettings: ApplicationSettings;\r\n\r\n  constructor() {\r\n    const userDataPath = app.getPath('userData');\r\n    this.settingsFilePath = path.join(userDataPath, 'settings.json');\r\n    \r\n    this.defaultSettings = this.createDefaultSettings();\r\n    this.settings = { ...this.defaultSettings };\r\n    \r\n    this.loadSettings();\r\n  }\r\n\r\n  private createDefaultSettings(): ApplicationSettings {\r\n    const userDataPath = app.getPath('userData');\r\n    \r\n    return {\r\n      institution: {\r\n        name: 'Ma Bibliothèque',\r\n        address: '',\r\n        city: 'Douala',\r\n        country: 'Cameroun',\r\n        phone: '',\r\n        email: '',\r\n        website: '',\r\n        logo: '',\r\n        description: 'Système de gestion de bibliothèque moderne',\r\n        type: 'library'\r\n      },\r\n      backup: {\r\n        autoBackup: true,\r\n        backupFrequency: 'weekly',\r\n        lastBackup: '',\r\n        backupLocation: path.join(userDataPath, 'backups'),\r\n        keepBackups: 10,\r\n        cloudSync: false,\r\n        cloudProvider: 'none'\r\n      },\r\n      security: {\r\n        requireAuth: true,\r\n        sessionTimeout: 60, // 1 heure\r\n        maxLoginAttempts: 5,\r\n        lockoutDuration: 15, // 15 minutes\r\n        passwordPolicy: {\r\n          minLength: 6,\r\n          requireNumbers: true,\r\n          requireSymbols: false,\r\n          requireUppercase: false,\r\n          requireLowercase: true\r\n        },\r\n        twoFactorAuth: false,\r\n        auditLog: true\r\n      },\r\n      appearance: {\r\n        theme: 'light',\r\n        language: 'fr',\r\n        fontSize: 'medium',\r\n        compactMode: false,\r\n        animations: true,\r\n        colorScheme: 'default'\r\n      },\r\n      library: {\r\n        defaultLoanPeriod: 14, // 2 semaines\r\n        maxRenewals: 2,\r\n        maxBooksPerUser: 5,\r\n        lateFeesEnabled: false,\r\n        lateFeeAmount: 0,\r\n        gracePeriod: 3,\r\n        reservationEnabled: true,\r\n        reservationPeriod: 7,\r\n        categoriesRequired: true,\r\n        isbnRequired: false\r\n      },\r\n      notifications: {\r\n        emailNotifications: false,\r\n        overdueReminders: true,\r\n        reminderDaysBefore: 3,\r\n        returnConfirmation: true,\r\n        newBookNotifications: false,\r\n        systemNotifications: true\r\n      },\r\n      version: '1.0.0',\r\n      lastUpdated: new Date().toISOString()\r\n    };\r\n  }\r\n\r\n  private loadSettings(): void {\r\n    try {\r\n      if (fs.existsSync(this.settingsFilePath)) {\r\n        const data = fs.readFileSync(this.settingsFilePath, 'utf8');\r\n        const loadedSettings = JSON.parse(data);\r\n        \r\n        // Fusionner avec les paramètres par défaut pour s'assurer que toutes les propriétés existent\r\n        this.settings = this.mergeSettings(this.defaultSettings, loadedSettings);\r\n        \r\n        // Validation et migration si nécessaire\r\n        this.validateAndMigrateSettings();\r\n      } else {\r\n        // Créer le fichier de paramètres avec les valeurs par défaut\r\n        this.saveSettings();\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors du chargement des paramètres:', error);\r\n      this.settings = { ...this.defaultSettings };\r\n      this.saveSettings();\r\n    }\r\n  }\r\n\r\n  private mergeSettings(defaultSettings: any, loadedSettings: any): any {\r\n    const merged = { ...defaultSettings };\r\n    \r\n    for (const key in loadedSettings) {\r\n      if (loadedSettings.hasOwnProperty(key)) {\r\n        if (typeof loadedSettings[key] === 'object' && loadedSettings[key] !== null && !Array.isArray(loadedSettings[key])) {\r\n          merged[key] = this.mergeSettings(defaultSettings[key] || {}, loadedSettings[key]);\r\n        } else {\r\n          merged[key] = loadedSettings[key];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return merged;\r\n  }\r\n\r\n  private validateAndMigrateSettings(): void {\r\n    let needsSave = false;\r\n    \r\n    // Validation des valeurs numériques\r\n    if (this.settings.security.sessionTimeout < 5) {\r\n      this.settings.security.sessionTimeout = 5;\r\n      needsSave = true;\r\n    }\r\n    \r\n    if (this.settings.security.passwordPolicy.minLength < 4) {\r\n      this.settings.security.passwordPolicy.minLength = 4;\r\n      needsSave = true;\r\n    }\r\n    \r\n    if (this.settings.library.defaultLoanPeriod < 1) {\r\n      this.settings.library.defaultLoanPeriod = 7;\r\n      needsSave = true;\r\n    }\r\n    \r\n    if (this.settings.backup.keepBackups < 1) {\r\n      this.settings.backup.keepBackups = 5;\r\n      needsSave = true;\r\n    }\r\n    \r\n    // Validation des énumérations\r\n    const validThemes = ['light', 'dark', 'auto'];\r\n    if (!validThemes.includes(this.settings.appearance.theme)) {\r\n      this.settings.appearance.theme = 'light';\r\n      needsSave = true;\r\n    }\r\n    \r\n    const validLanguages = ['fr', 'en', 'es'];\r\n    if (!validLanguages.includes(this.settings.appearance.language)) {\r\n      this.settings.appearance.language = 'fr';\r\n      needsSave = true;\r\n    }\r\n    \r\n    // Mettre à jour la version et la date si nécessaire\r\n    if (this.settings.version !== this.defaultSettings.version) {\r\n      this.settings.version = this.defaultSettings.version;\r\n      this.settings.lastUpdated = new Date().toISOString();\r\n      needsSave = true;\r\n    }\r\n    \r\n    if (needsSave) {\r\n      this.saveSettings();\r\n    }\r\n  }\r\n\r\n  private saveSettings(): void {\r\n    try {\r\n      this.settings.lastUpdated = new Date().toISOString();\r\n      const data = JSON.stringify(this.settings, null, 2);\r\n      fs.writeFileSync(this.settingsFilePath, data, 'utf8');\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres:', error);\r\n    }\r\n  }\r\n\r\n  // Méthodes publiques\r\n  getSettings(): ApplicationSettings {\r\n    return { ...this.settings };\r\n  }\r\n\r\n  saveUserSettings(newSettings: ApplicationSettings): boolean {\r\n    try {\r\n      if (typeof newSettings !== 'object' || newSettings === null) {\r\n        throw new Error('Invalid settings object');\r\n      }\r\n      this.settings = { ...newSettings };\r\n      this.validateAndMigrateSettings();\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres utilisateur:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Méthodes spécifiques par section\r\n  getInstitutionSettings(): InstitutionSettings {\r\n    return { ...this.settings.institution };\r\n  }\r\n\r\n  saveInstitutionSettings(institutionSettings: InstitutionSettings): boolean {\r\n    try {\r\n      this.settings.institution = { ...institutionSettings };\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres d\\'établissement:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getBackupSettings(): BackupSettings {\r\n    return { ...this.settings.backup };\r\n  }\r\n\r\n  saveBackupSettings(backupSettings: BackupSettings): boolean {\r\n    try {\r\n      this.settings.backup = { ...backupSettings };\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres de sauvegarde:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getSecuritySettings(): SecuritySettings {\r\n    return { ...this.settings.security };\r\n  }\r\n\r\n  saveSecuritySettings(securitySettings: SecuritySettings): boolean {\r\n    try {\r\n      this.settings.security = { ...securitySettings };\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres de sécurité:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getAppearanceSettings(): AppearanceSettings {\r\n    return { ...this.settings.appearance };\r\n  }\r\n\r\n  saveAppearanceSettings(appearanceSettings: AppearanceSettings): boolean {\r\n    try {\r\n      this.settings.appearance = { ...appearanceSettings };\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres d\\'apparence:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getLibrarySettings(): LibrarySettings {\r\n    return { ...this.settings.library };\r\n  }\r\n\r\n  saveLibrarySettings(librarySettings: LibrarySettings): boolean {\r\n    try {\r\n      this.settings.library = { ...librarySettings };\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres de bibliothèque:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getNotificationSettings(): NotificationSettings {\r\n    return { ...this.settings.notifications };\r\n  }\r\n\r\n  saveNotificationSettings(notificationSettings: NotificationSettings): boolean {\r\n    try {\r\n      this.settings.notifications = { ...notificationSettings };\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres de notification:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Méthodes utilitaires\r\n  resetToDefaults(): boolean {\r\n    try {\r\n      this.settings = { ...this.defaultSettings };\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la réinitialisation des paramètres:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  resetSectionToDefault(section: keyof ApplicationSettings): boolean {\r\n    try {\r\n      if (section in this.defaultSettings) {\r\n        (this.settings as any)[section] = { ...(this.defaultSettings[section] as any) };\r\n        this.saveSettings();\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la réinitialisation de la section ${section}:`, error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  exportSettings(): string {\r\n    try {\r\n      return JSON.stringify(this.settings, null, 2);\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'export des paramètres:', error);\r\n      return '';\r\n    }\r\n  }\r\n\r\n  importSettings(settingsJson: string): boolean {\r\n    try {\r\n      const importedSettings = JSON.parse(settingsJson);\r\n      this.settings = this.mergeSettings(this.defaultSettings, importedSettings);\r\n      this.validateAndMigrateSettings();\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'import des paramètres:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  validateSettings(): { isValid: boolean; errors: string[] } {\r\n    const errors: string[] = [];\r\n\r\n    // Validation de l'établissement\r\n    if (!this.settings.institution.name.trim()) {\r\n      errors.push('Le nom de l\\'établissement est requis');\r\n    }\r\n\r\n    // Validation de la sécurité\r\n    if (this.settings.security.sessionTimeout < 5 || this.settings.security.sessionTimeout > 1440) {\r\n      errors.push('Le délai d\\'expiration de session doit être entre 5 et 1440 minutes');\r\n    }\r\n\r\n    if (this.settings.security.passwordPolicy.minLength < 4 || this.settings.security.passwordPolicy.minLength > 50) {\r\n      errors.push('La longueur minimale du mot de passe doit être entre 4 et 50 caractères');\r\n    }\r\n\r\n    // Validation de la bibliothèque\r\n    if (this.settings.library.defaultLoanPeriod < 1 || this.settings.library.defaultLoanPeriod > 365) {\r\n      errors.push('La période d\\'emprunt par défaut doit être entre 1 et 365 jours');\r\n    }\r\n\r\n    if (this.settings.library.maxBooksPerUser < 1 || this.settings.library.maxBooksPerUser > 100) {\r\n      errors.push('Le nombre maximum de livres par utilisateur doit être entre 1 et 100');\r\n    }\r\n\r\n    // Validation des sauvegardes\r\n    if (this.settings.backup.keepBackups < 1 || this.settings.backup.keepBackups > 100) {\r\n      errors.push('Le nombre de sauvegardes à conserver doit être entre 1 et 100');\r\n    }\r\n\r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }\r\n\r\n  getSettingsInfo(): {\r\n    filePath: string;\r\n    fileSize: number;\r\n    lastModified: string;\r\n    version: string;\r\n  } {\r\n    try {\r\n      const stats = fs.existsSync(this.settingsFilePath) \r\n        ? fs.statSync(this.settingsFilePath) \r\n        : null;\r\n\r\n      return {\r\n        filePath: this.settingsFilePath,\r\n        fileSize: stats ? stats.size : 0,\r\n        lastModified: stats ? stats.mtime.toISOString() : '',\r\n        version: this.settings.version\r\n      };\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des informations de paramètres:', error);\r\n      return {\r\n        filePath: this.settingsFilePath,\r\n        fileSize: 0,\r\n        lastModified: '',\r\n        version: this.settings.version\r\n      };\r\n    }\r\n  }\r\n\r\n  // Méthodes de compatibilité pour l'ancien système\r\n  async setTheme(theme: 'light' | 'dark' | 'auto'): Promise<void> {\r\n    this.settings.appearance.theme = theme;\r\n    this.saveSettings();\r\n  }\r\n\r\n  async getTheme(): Promise<string> {\r\n    return this.settings.appearance.theme;\r\n  }\r\n}","module.exports = require(\"archiver\");","module.exports = require(\"crypto\");","module.exports = require(\"electron\");","module.exports = require(\"extract-zip\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"sqlite3\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main.ts\");\n",""],"names":[],"sourceRoot":""}