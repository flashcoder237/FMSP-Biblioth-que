{"version":3,"file":"main.js","mappings":"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","sources":["webpack://bibliotheque-app/./src/main.ts","webpack://bibliotheque-app/./src/preload.ts","webpack://bibliotheque-app/./src/services/AuthService.ts","webpack://bibliotheque-app/./src/services/BackupService.ts","webpack://bibliotheque-app/./src/services/ConfigService.ts","webpack://bibliotheque-app/./src/services/DatabaseService.ts","webpack://bibliotheque-app/./src/services/LoggerService.ts","webpack://bibliotheque-app/./src/services/SettingsService.ts","webpack://bibliotheque-app/./src/services/SupabaseService.ts","webpack://bibliotheque-app/./src/services/SyncService.ts","webpack://bibliotheque-app/./src/services/ValidationService.ts","webpack://bibliotheque-app/external commonjs \"@supabase/supabase-js\"","webpack://bibliotheque-app/external commonjs \"archiver\"","webpack://bibliotheque-app/external node-commonjs \"crypto\"","webpack://bibliotheque-app/external node-commonjs \"electron\"","webpack://bibliotheque-app/external commonjs \"extract-zip\"","webpack://bibliotheque-app/external node-commonjs \"fs\"","webpack://bibliotheque-app/external node-commonjs \"path\"","webpack://bibliotheque-app/external commonjs \"sqlite3\"","webpack://bibliotheque-app/webpack/bootstrap","webpack://bibliotheque-app/webpack/before-startup","webpack://bibliotheque-app/webpack/startup","webpack://bibliotheque-app/webpack/after-startup"],"sourcesContent":["// src/main.ts - Configuration corrigée pour SQLite3\nimport { app, BrowserWindow, ipcMain, dialog, Notification } from 'electron';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { DatabaseService } from './services/DatabaseService';\nimport { BackupService } from './services/BackupService';\nimport { AuthService } from './services/AuthService';\nimport { ApplicationSettings, SettingsService } from './services/SettingsService';\nimport { SyncService } from './services/SyncService';\nimport { configService } from './services/ConfigService';\nimport { logger } from './services/LoggerService';\nimport { validationService } from './services/ValidationService';\nimport { AuthCredentials, createBookFromDocument } from './preload';\nimport { RunResult } from 'sqlite3';\n\nlet mainWindow: BrowserWindow;\nlet dbService: DatabaseService;\nlet backupService: BackupService;\nlet authService: AuthService;\nlet settingsService: SettingsService;\nlet syncService: SyncService;\n\nfunction createWindow(): void {\n  mainWindow = new BrowserWindow({\n    width: 1200,\n    height: 800,\n    minWidth: 800,\n    minHeight: 600,\n    webPreferences: {\n      nodeIntegration: false,\n      contextIsolation: true,\n      // IMPORTANT: Désactiver sandbox pour SQLite3\n      sandbox: false,\n      preload: path.join(__dirname, 'preload.js'),\n      // Sécurité adaptée pour les modules natifs\n      allowRunningInsecureContent: false,\n      experimentalFeatures: false,\n      webSecurity: true\n    },\n    titleBarStyle: 'hiddenInset',\n    frame: false,\n    show: false,\n    icon: path.join(__dirname, '../assets/icon.png'),\n  });\n\n  // Vérifier que le fichier preload existe\n  const preloadPath = path.join(__dirname, 'preload.js');\n  console.log('Preload path:', preloadPath);\n  console.log('Preload exists:', fs.existsSync(preloadPath));\n\n  // Always use the built files\n  mainWindow.loadFile(path.join(__dirname, 'index.html'));\n  mainWindow.webContents.openDevTools();\n\n  mainWindow.once('ready-to-show', () => {\n    mainWindow.show();\n  });\n\n  // Gestion de la fermeture de l'application\n  mainWindow.on('close', async (event) => {\n    if (backupService && settingsService) {\n      const settings = await settingsService.getSettings();\n      if (settings?.backup.autoBackup) {\n        try {\n          await backupService.createBackup();\n        } catch (error) {\n          console.error('Erreur lors de la sauvegarde automatique:', error);\n        }\n      }\n    }\n  });\n}\n\napp.whenReady().then(async () => {\n  // Initialiser les services de base d'abord\n  try {\n    // 1. Initialiser la configuration en premier\n    await configService.initialize();\n    logger.info('Configuration initialisée', 'Main');\n    \n    // 2. Initialiser les services principaux\n    dbService = new DatabaseService();\n    await dbService.initialize();\n    logger.info('Base de données initialisée', 'Main');\n    \n    backupService = new BackupService(dbService);\n    authService = new AuthService();\n    settingsService = new SettingsService();\n    syncService = new SyncService(dbService);\n    \n    // 3. Initialiser le service de synchronisation\n    await syncService.initialize();\n    logger.info('Service de synchronisation initialisé', 'Main');\n    \n    logger.info('Tous les services initialisés avec succès', 'Main');\n    createWindow();\n    \n  } catch (error) {\n    logger.error('Erreur critique lors de l\\'initialisation des services', 'Main', error as Error);\n    \n    // Essayer de créer la fenêtre même en cas d'erreur pour afficher le problème\n    try {\n      createWindow();\n    } catch (windowError) {\n      logger.error('Impossible de créer la fenêtre', 'Main', windowError as Error);\n      app.quit();\n    }\n  }\n\n  app.on('activate', () => {\n    if (BrowserWindow.getAllWindows().length === 0) {\n      createWindow();\n    }\n  });\n});\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\n// Window Controls\nipcMain.handle('window-controls:minimize', () => {\n  mainWindow.minimize();\n});\n\nipcMain.handle('window-controls:maximize', () => {\n  if (mainWindow.isMaximized()) {\n    mainWindow.unmaximize();\n  } else {\n    mainWindow.maximize();\n  }\n});\n\nipcMain.handle('window-controls:close', () => {\n  mainWindow.close();\n});\n\n// Database Operations - Documents (API principale)\nipcMain.handle('db:getDocuments', async () => {\n  try {\n    return await dbService.getDocuments();\n  } catch (error) {\n    console.error('Erreur getDocuments:', error);\n    return [];\n  }\n});\n\nipcMain.handle('db:addDocument', async (_, document) => {\n  try {\n    // Valider les données avant l'ajout\n    const validation = validationService.validateDocument(document);\n    if (!validation.isValid) {\n      logger.warn('Tentative d\\'ajout de document avec données invalides', 'IPC', {\n        errors: validation.errors,\n        warnings: validation.warnings\n      });\n      throw new Error(`Données invalides: ${validation.errors.join(', ')}`);\n    }\n\n    // Logger les avertissements s'il y en a\n    if (validation.warnings && validation.warnings.length > 0) {\n      logger.warn('Avertissements lors de l\\'ajout de document', 'IPC', {\n        warnings: validation.warnings\n      });\n    }\n\n    const result = await dbService.addDocument(document);\n    logger.info('Document ajouté avec succès', 'IPC', { id: result });\n    return result;\n  } catch (error) {\n    logger.error('Erreur lors de l\\'ajout de document', 'IPC', error as Error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:updateDocument', async (_, document) => {\n  try {\n    // Valider les données avant la mise à jour\n    const validation = validationService.validateDocument(document);\n    if (!validation.isValid) {\n      logger.warn('Tentative de mise à jour avec données invalides', 'IPC', {\n        id: document.id,\n        errors: validation.errors\n      });\n      throw new Error(`Données invalides: ${validation.errors.join(', ')}`);\n    }\n\n    const result = await dbService.updateDocument(document);\n    logger.info('Document mis à jour avec succès', 'IPC', { id: document.id });\n    return result;\n  } catch (error) {\n    logger.error('Erreur lors de la mise à jour de document', 'IPC', error as Error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:deleteDocument', async (_, id) => {\n  try {\n    return await dbService.deleteDocument(id);\n  } catch (error) {\n    console.error('Erreur deleteDocument:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:searchDocuments', async (_, query) => {\n  try {\n    return await dbService.searchDocuments(query);\n  } catch (error) {\n    console.error('Erreur searchDocuments:', error);\n    return [];\n  }\n});\n\n// Database Operations - Books (Compatibilité legacy)\nipcMain.handle('db:getBooks', async () => {\n  try {\n    return await dbService.getBooks();\n  } catch (error) {\n    console.error('Erreur getBooks:', error);\n    return [];\n  }\n});\n\nipcMain.handle('db:addBook', async (_, book) => {\n  try {\n    return await dbService.addDocument(book);\n  } catch (error) {\n    console.error('Erreur addBook:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:updateBook', async (_, book) => {\n  try {\n    return await dbService.updateDocument(book);\n  } catch (error) {\n    console.error('Erreur updateBook:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:deleteBook', async (_, id) => {\n  try {\n    return await dbService.deleteDocument(id);\n  } catch (error) {\n    console.error('Erreur deleteBook:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:searchBooks', async (_, query) => {\n  try {\n    return await dbService.searchDocuments(query).then(docs => docs.map(createBookFromDocument));\n  } catch (error) {\n    console.error('Erreur searchBooks:', error);\n    return [];\n  }\n});\n\n// Database Operations - Authors\nipcMain.handle('db:getAuthors', async () => {\n  try {\n    return await dbService.getAuthors();\n  } catch (error) {\n    console.error('Erreur getAuthors:', error);\n    return [];\n  }\n});\n\nipcMain.handle('db:addAuthor', async (_, author) => {\n  try {\n    return await dbService.addAuthor(author);\n  } catch (error) {\n    console.error('Erreur addAuthor:', error);\n    throw error;\n  }\n});\n\n// Database Operations - Categories\nipcMain.handle('db:getCategories', async () => {\n  try {\n    return await dbService.getCategories();\n  } catch (error) {\n    console.error('Erreur getCategories:', error);\n    return [];\n  }\n});\n\nipcMain.handle('db:addCategory', async (_, category) => {\n  try {\n    return await dbService.addCategory(category);\n  } catch (error) {\n    console.error('Erreur addCategory:', error);\n    throw error;\n  }\n});\n\n// Database Operations - Borrowers\nipcMain.handle('db:getBorrowers', async () => {\n  try {\n    return await dbService.getBorrowers();\n  } catch (error) {\n    console.error('Erreur getBorrowers:', error);\n    return [];\n  }\n});\n\nipcMain.handle('db:addBorrower', async (_, borrower) => {\n  try {\n    return await dbService.addBorrower(borrower);\n  } catch (error) {\n    console.error('Erreur addBorrower:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:updateBorrower', async (_, borrower) => {\n  try {\n    return await dbService.updateBorrower(borrower);\n  } catch (error) {\n    console.error('Erreur updateBorrower:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:deleteBorrower', async (_, id) => {\n  try {\n    return await dbService.deleteBorrower(id);\n  } catch (error) {\n    console.error('Erreur deleteBorrower:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:searchBorrowers', async (_, query) => {\n  try {\n    return await dbService.searchBorrowers(query);\n  } catch (error) {\n    console.error('Erreur searchBorrowers:', error);\n    return [];\n  }\n});\n\n// Database Operations - Borrow Management\nipcMain.handle('db:getBorrowedDocuments', async () => {\n  try {\n    return await dbService.getBorrowedDocuments();\n  } catch (error) {\n    console.error('Erreur getBorrowedDocuments:', error);\n    return [];\n  }\n});\n\n// Compatibility handler\nipcMain.handle('db:getBorrowedBooks', async () => {\n  try {\n    return await dbService.getBorrowedDocuments();\n  } catch (error) {\n    console.error('Erreur getBorrowedBooks:', error);\n    return [];\n  }\n});\n\nipcMain.handle('db:borrowDocument', async (_, documentId, borrowerId, expectedReturnDate) => {\n  try {\n    return await dbService.borrowDocument(documentId, borrowerId, expectedReturnDate);\n  } catch (error) {\n    console.error('Erreur borrowDocument:', error);\n    throw error;\n  }\n});\n\n// Compatibility handler\nipcMain.handle('db:borrowBook', async (_, documentId, borrowerId, expectedReturnDate) => {\n  try {\n    return await dbService.borrowDocument(documentId, borrowerId, expectedReturnDate);\n  } catch (error) {\n    console.error('Erreur borrowBook:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:returnBook', async (_, borrowHistoryId, notes) => {\n  try {\n    return await dbService.returnBook(borrowHistoryId, notes);\n  } catch (error) {\n    console.error('Erreur returnBook:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:getBorrowHistory', async (_, filter) => {\n  try {\n    return await dbService.getBorrowHistory(filter);\n  } catch (error) {\n    console.error('Erreur getBorrowHistory:', error);\n    return [];\n  }\n});\n\nipcMain.handle('db:getStats', async () => {\n  try {\n    return await dbService.getStats();\n  } catch (error) {\n    console.error('Erreur getStats:', error);\n    return {\n      totalDocuments: 0,\n      borrowedDocuments: 0,\n      availableDocuments: 0,\n      totalAuthors: 0,\n      totalCategories: 0,\n      totalBorrowers: 0,\n      totalStudents: 0,\n      totalStaff: 0,\n      overdueDocuments: 0\n    };\n  }\n});\n\n// Nouvelles opérations de base de données\nipcMain.handle('db:clearAll', async () => {\n  try {\n    return await dbService.clearDatabase();\n  } catch (error) {\n    console.error('Erreur clearAll:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('db:export', async () => {\n  const result = await dialog.showSaveDialog(mainWindow, {\n    title: 'Exporter la base de données',\n    defaultPath: `bibliotheque_backup_${new Date().toISOString().split('T')[0]}.db`,\n    filters: [\n      { name: 'Base de données', extensions: ['db'] },\n      { name: 'Tous les fichiers', extensions: ['*'] }\n    ]\n  });\n\n  if (!result.filePath) return null;\n\n  try {\n    await backupService.exportDatabase(result.filePath);\n    return result.filePath;\n  } catch (error) {\n    console.error('Erreur lors de l\\'export:', error);\n    return null;\n  }\n});\n\nipcMain.handle('db:import', async (_, filePath) => {\n  try {\n    await backupService.importDatabase(filePath);\n    return true;\n  } catch (error) {\n    console.error('Erreur lors de l\\'import:', error);\n    return false;\n  }\n});\n\n// Settings Operations\nipcMain.handle('settings:get', async () => {\n  try {\n    return await settingsService.getSettings();\n  } catch (error) {\n    console.error('Erreur settings:get:', error);\n    return null;\n  }\n});\n\nipcMain.handle('settings:save', async (_, settings: ApplicationSettings) => {\n  try {\n    return settingsService.saveUserSettings(settings);\n  } catch (error) {\n    console.error('Erreur settings:save:', error);\n    return false;\n  }\n});\n\n// Backup Operations\nipcMain.handle('backup:create', async () => {\n  try {\n    return await backupService.createBackup();\n  } catch (error) {\n    console.error('Erreur backup:create:', error);\n    throw error;\n  }\n});\n\nipcMain.handle('backup:restore', async () => {\n  const result = await dialog.showOpenDialog(mainWindow, {\n    title: 'Sélectionner une sauvegarde',\n    filters: [\n      { name: 'Sauvegardes', extensions: ['bak', 'backup'] },\n      { name: 'Tous les fichiers', extensions: ['*'] }\n    ],\n    properties: ['openFile']\n  });\n\n  if (result.canceled || !result.filePaths[0]) return false;\n\n  try {\n    await backupService.restoreBackup(result.filePaths[0]);\n    return true;\n  } catch (error) {\n    console.error('Erreur lors de la restauration:', error);\n    return false;\n  }\n});\n\n// Authentication Operations\nipcMain.handle('auth:status', async () => {\n  try {\n    return authService.isAuthenticated();\n  } catch (error) {\n    console.error('Erreur auth:status:', error);\n    return false;\n  }\n});\n\nipcMain.handle('auth:login', async (_, credentials: AuthCredentials) => {\n  try {\n    return await authService.login(credentials);\n  } catch (error) {\n    console.error('Erreur auth:login:', error);\n    return { success: false, error: 'Erreur de connexion' };\n  }\n});\n\nipcMain.handle('auth:logout', async () => {\n  try {\n    return authService.logout();\n  } catch (error) {\n    console.error('Erreur auth:logout:', error);\n    return false;\n  }\n});\n\n// Configuration Operations\nipcMain.handle('config:getSupabaseConfig', async () => {\n  try {\n    if (!configService.hasSupabaseConfig()) {\n      logger.warn('Configuration Supabase demandée mais non disponible', 'IPC');\n      return null;\n    }\n\n    const config = configService.get('supabase');\n    logger.debug('Configuration Supabase fournie au renderer', 'IPC');\n    \n    return {\n      url: config.url,\n      key: config.key\n    };\n  } catch (error) {\n    logger.error('Erreur lors de la récupération de la configuration Supabase', 'IPC', error as Error);\n    return null;\n  }\n});\n\n// File Operations\nipcMain.handle('file:select', async (_, options = {}) => {\n  const result = await dialog.showOpenDialog(mainWindow, {\n    properties: ['openFile'],\n    filters: [\n      { name: 'Images', extensions: ['jpg', 'jpeg', 'png', 'gif', 'bmp'] },\n      { name: 'Documents', extensions: ['pdf', 'doc', 'docx', 'txt'] },\n      { name: 'Tous les fichiers', extensions: ['*'] }\n    ],\n    ...options\n  });\n\n  return result.canceled ? null : result.filePaths[0];\n});\n\nipcMain.handle('file:selectDirectory', async () => {\n  const result = await dialog.showOpenDialog(mainWindow, {\n    properties: ['openDirectory']\n  });\n\n  return result.canceled ? null : result.filePaths[0];\n});\n\n// Notification Operations\nipcMain.handle('notification:show', async (_, title: string, body: string) => {\n  if (Notification.isSupported()) {\n    new Notification({\n      title,\n      body,\n      icon: path.join(__dirname, '../assets/icon.png')\n    }).show();\n  }\n});\n\n// System Operations\nipcMain.handle('system:info', async () => {\n  return {\n    platform: process.platform,\n    arch: process.arch,\n    version: process.version,\n    appVersion: app.getVersion(),\n    electronVersion: process.versions.electron,\n    chromeVersion: process.versions.chrome,\n    nodeVersion: process.versions.node\n  };\n});\n\nipcMain.handle('system:checkUpdates', async () => {\n  // Placeholder pour la vérification des mises à jour\n  return {\n    hasUpdate: false,\n    currentVersion: app.getVersion(),\n    latestVersion: app.getVersion()\n  };\n});\n\n// Theme Operations\nipcMain.handle('theme:set', async (_, theme: 'light' | 'dark' | 'auto') => {\n  try {\n    await settingsService.setTheme(theme);\n  } catch (error) {\n    console.error('Erreur theme:set:', error);\n  }\n});\n\nipcMain.handle('theme:get', async () => {\n  try {\n    return await settingsService.getTheme();\n  } catch (error) {\n    console.error('Erreur theme:get:', error);\n    return 'light';\n  }\n});\n\n// Statistics Operations\nipcMain.handle('stats:advanced', async () => {\n  const basicStats = await dbService.getStats();\n  const borrowHistory = await dbService.getBorrowHistory();\n  \n  // Calculer des statistiques avancées\n  const now = new Date();\n  const monthlyBorrows = borrowHistory.filter(h => {\n    const borrowDate = new Date(h.borrowDate);\n    return borrowDate.getMonth() === now.getMonth() && borrowDate.getFullYear() === now.getFullYear();\n  }).length;\n\n  const averageBorrowDuration = borrowHistory\n    .filter(h => h.actualReturnDate)\n    .reduce((acc, h) => {\n      const borrowed = new Date(h.borrowDate);\n      const returned = new Date(h.actualReturnDate!);\n      const duration = (returned.getTime() - borrowed.getTime()) / (1000 * 60 * 60 * 24);\n      return acc + duration;\n    }, 0) / borrowHistory.filter(h => h.actualReturnDate).length || 0;\n\n  const topCategories = await getTopCategories();\n  const topBorrowers = await getTopBorrowers();\n\n  return {\n    ...basicStats,\n    monthlyBorrows,\n    averageBorrowDuration: Math.round(averageBorrowDuration),\n    topCategories,\n    topBorrowers\n  };\n});\n\nasync function getTopCategories() {\n  const books = await dbService.getBooks();\n  const categoryCounts = books.reduce((acc: { [key: string]: number }, book) => {\n    acc[book.category] = (acc[book.category] || 0) + 1;\n    return acc;\n  }, {});\n\n  return Object.entries(categoryCounts)\n    .sort(([,a], [,b]) => (b as number) - (a as number))\n    .slice(0, 5)\n    .map(([category, count]) => ({ category, count }));\n}\n\nasync function getTopBorrowers() {\n  const history = await dbService.getBorrowHistory();\n  const borrowerCounts = history.reduce((acc: { [key: string]: number }, h) => {\n    const key = `${h.borrower?.firstName} ${h.borrower?.lastName}`;\n    acc[key] = (acc[key] || 0) + 1;\n    return acc;\n  }, {});\n\n  return Object.entries(borrowerCounts)\n    .sort(([,a], [,b]) => (b as number) - (a as number))\n    .slice(0, 5)\n    .map(([borrower, count]) => ({ borrower, count }));\n}\n\n// Synchronization Operations\nipcMain.handle('sync:getStatus', async () => {\n  try {\n    return syncService ? await syncService.getStatus() : {\n      isOnline: false,\n      lastSync: null,\n      pendingOperations: 0,\n      syncInProgress: false,\n      errors: []\n    };\n  } catch (error) {\n    console.error('Erreur sync:getStatus:', error);\n    return {\n      isOnline: false,\n      lastSync: null,\n      pendingOperations: 0,\n      syncInProgress: false,\n      errors: []\n    };\n  }\n});\n\nipcMain.handle('sync:trigger', async () => {\n  try {\n    if (syncService) {\n      await syncService.startSync();\n      return true;\n    }\n    return false;\n  } catch (error) {\n    console.error('Erreur sync:trigger:', error);\n    return false;\n  }\n});\n\nipcMain.handle('sync:clearErrors', async () => {\n  try {\n    if (syncService) {\n      await syncService.clearErrors();\n      return true;\n    }\n    return false;\n  } catch (error) {\n    console.error('Erreur sync:clearErrors:', error);\n    return false;\n  }\n});\n\nipcMain.handle('sync:retry', async (_, operationId: string) => {\n  try {\n    if (syncService) {\n      await syncService.retryOperation(operationId);\n      return true;\n    }\n    return false;\n  } catch (error) {\n    console.error('Erreur sync:retry:', error);\n    return false;\n  }\n});\n\nasync function createPrintWindow(data: any, type: string): Promise<boolean> {\n  return new Promise((resolve) => {\n    const printWindow = new BrowserWindow({\n      width: 800,\n      height: 600,\n      show: false,\n      webPreferences: {\n        nodeIntegration: false,\n        contextIsolation: true,\n        // IMPORTANT: Garder sandbox: false pour SQLite3\n        sandbox: false\n      }\n    });\n\n    const htmlContent = generatePrintHTML(data, type);\n    \n    printWindow.loadURL(`data:text/html;charset=utf-8,${encodeURIComponent(htmlContent)}`);\n    \n    printWindow.webContents.once('did-finish-load', () => {\n      printWindow.webContents.print({\n        silent: false,\n        printBackground: true,\n      }, (success, failureReason) => {\n        printWindow.close();\n        if (!success && failureReason) {\n          console.error('Print failed:', failureReason);\n        }\n        resolve(success);\n      });\n    });\n  });\n}\n\nfunction generatePrintHTML(data: any, type: string): string {\n  const now = new Date().toLocaleDateString('fr-FR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n\n  let title = '';\n  let content = '';\n\n  switch (type) {\n    case 'inventory':\n      title = 'Inventaire Complet de la Bibliothèque';\n      content = generateInventoryContent(data);\n      break;\n    case 'available':\n      title = 'Liste des Livres Disponibles';\n      content = generateAvailableBooksContent(data);\n      break;\n    case 'borrowed':\n      title = 'Liste des Livres Empruntés';\n      content = generateBorrowedBooksContent(data);\n      break;\n    case 'history':\n      title = 'Historique des Emprunts';\n      content = generateHistoryContent(data);\n      break;\n  }\n\n  return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"UTF-8\">\n      <title>${title}</title>\n      <style>\n        @page { \n          margin: 20mm; \n          size: A4; \n        }\n        body {\n          font-family: 'Segoe UI', Arial, sans-serif;\n          margin: 0; \n          padding: 0; \n          color: #2E2E2E; \n          line-height: 1.4;\n          font-size: 12px;\n        }\n        .header {\n          border-bottom: 3px solid #3E5C49;\n          padding-bottom: 20px; \n          margin-bottom: 30px;\n        }\n        .header h1 {\n          color: #3E5C49; \n          margin: 0 0 10px 0;\n          font-size: 24px; \n          font-weight: 700;\n        }\n        .header .subtitle { \n          color: #6E6E6E; \n          font-size: 14px; \n          margin: 5px 0; \n        }\n        .header .date { \n          color: #6E6E6E; \n          font-size: 11px; \n          margin-top: 10px; \n        }\n        .stats-summary {\n          background: #F3EED9; \n          border: 1px solid #E5DCC2;\n          border-radius: 8px; \n          padding: 15px; \n          margin-bottom: 25px;\n          display: grid; \n          grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); \n          gap: 15px;\n        }\n        .stat-item { \n          text-align: center; \n        }\n        .stat-value {\n          font-size: 20px; \n          font-weight: 700;\n          color: #3E5C49; \n          margin-bottom: 5px;\n        }\n        .stat-label {\n          font-size: 10px; \n          color: #6E6E6E;\n          text-transform: uppercase; \n          letter-spacing: 0.5px;\n        }\n        .content-table {\n          width: 100%; \n          border-collapse: collapse;\n          margin-bottom: 20px; \n          font-size: 10px;\n        }\n        .content-table th, .content-table td {\n          padding: 8px 6px; \n          text-align: left; \n          border-bottom: 1px solid #E5DCC2;\n          word-wrap: break-word;\n        }\n        .content-table th {\n          background: #F3EED9; \n          font-weight: 600;\n          color: #2E2E2E; \n          border-bottom: 2px solid #E5DCC2;\n          font-size: 9px;\n        }\n        .content-table tr:nth-child(even) { \n          background: #FAF9F6; \n        }\n        .category-tag {\n          background: #3E5C49; \n          color: white;\n          padding: 1px 6px; \n          border-radius: 10px;\n          font-size: 8px; \n          font-weight: 500;\n        }\n        .status-available { \n          color: #3E5C49; \n          font-weight: 600; \n        }\n        .status-borrowed { \n          color: #C2571B; \n          font-weight: 600; \n        }\n        .status-returned { \n          color: #3E5C49; \n          font-weight: 600; \n        }\n        .status-overdue { \n          color: #DC2626; \n          font-weight: 600; \n        }\n        .borrower-type {\n          font-size: 8px;\n          text-transform: uppercase;\n          font-weight: 600;\n          color: #6E6E6E;\n        }\n        .page-break {\n          page-break-before: always;\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"header\">\n        <h1>${title}</h1>\n        <div class=\"subtitle\">Système de Gestion de Bibliothèque</div>\n        <div class=\"date\">Généré le ${now}</div>\n      </div>\n      ${content}\n    </body>\n    </html>\n    `;\n}\n\nfunction generateInventoryContent(data: any): string {\n  const { books, stats } = data;\n  \n  return `\n    <div class=\"stats-summary\">\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.totalDocuments}</div>\n        <div class=\"stat-label\">Total Livres</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.availableDocuments}</div>\n        <div class=\"stat-label\">Disponibles</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.borrowedDocuments}</div>\n        <div class=\"stat-label\">Empruntés</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.totalAuthors}</div>\n        <div class=\"stat-label\">Auteurs</div>\n      </div>\n    </div>\n    \n    <table class=\"content-table\">\n      <thead>\n        <tr>\n          <th style=\"width: 25%;\">Titre</th>\n          <th style=\"width: 20%;\">Auteur</th>\n          <th style=\"width: 15%;\">Catégorie</th>\n          <th style=\"width: 10%;\">ISBN</th>\n          <th style=\"width: 8%;\">Année</th>\n          <th style=\"width: 10%;\">Statut</th>\n          <th style=\"width: 12%;\">Emprunteur/Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${books.map((book: any) => `\n          <tr>\n            <td><strong>${book.title}</strong></td>\n            <td>${book.author}</td>\n            <td><span class=\"category-tag\">${book.category}</span></td>\n            <td>${book.isbn || '-'}</td>\n            <td>${book.publishedDate || '-'}</td>\n            <td>\n              <span class=\"${book.isBorrowed ? 'status-borrowed' : 'status-available'}\">\n                ${book.isBorrowed ? 'Emprunté' : 'Disponible'}\n              </span>\n            </td>\n            <td>\n              ${book.borrowerId ? `${book.borrower?.firstName || ''} ${book.borrower?.lastName || ''}<br/>` : '-'}\n              ${book.borrowDate ? new Date(book.borrowDate).toLocaleDateString('fr-FR') : ''}\n            </td>\n          </tr>\n        `).join('')}\n      </tbody>\n    </table>\n  `;\n}\n\nfunction generateAvailableBooksContent(data: any): string {\n  const { books, stats } = data;\n  const availableBooks = books.filter((book: any) => !book.isBorrowed);\n  \n  return `\n    <div class=\"stats-summary\">\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${availableBooks.length}</div>\n        <div class=\"stat-label\">Livres Disponibles</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.totalDocuments}</div>\n        <div class=\"stat-label\">Total Livres</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${((availableBooks.length / (stats.totalDocuments || 1)) * 100).toFixed(1)}%</div>\n        <div class=\"stat-label\">Taux Disponibilité</div>\n      </div>\n    </div>\n    \n    <table class=\"content-table\">\n      <thead>\n        <tr>\n          <th style=\"width: 30%;\">Titre</th>\n          <th style=\"width: 25%;\">Auteur</th>\n          <th style=\"width: 15%;\">Catégorie</th>\n          <th style=\"width: 15%;\">ISBN</th>\n          <th style=\"width: 15%;\">Année Publication</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${availableBooks.map((book: any) => `\n          <tr>\n            <td><strong>${book.title}</strong></td>\n            <td>${book.author}</td>\n            <td><span class=\"category-tag\">${book.category}</span></td>\n            <td>${book.isbn || '-'}</td>\n            <td>${book.publishedDate || '-'}</td>\n          </tr>\n        `).join('')}\n      </tbody>\n    </table>\n  `;\n}\n\nfunction generateBorrowedBooksContent(data: any): string {\n  const { history } = data;\n  \n  return `\n    <div class=\"stats-summary\">\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${history.length}</div>\n        <div class=\"stat-label\">Livres Empruntés</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${history.filter((h: any) => h.status === 'overdue').length}</div>\n        <div class=\"stat-label\">En Retard</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${history.filter((h: any) => h.borrower?.type === 'student').length}</div>\n        <div class=\"stat-label\">Étudiants</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${history.filter((h: any) => h.borrower?.type === 'staff').length}</div>\n        <div class=\"stat-label\">Personnel</div>\n      </div>\n    </div>\n    \n    <table class=\"content-table\">\n      <thead>\n        <tr>\n          <th style=\"width: 20%;\">Livre</th>\n          <th style=\"width: 15%;\">Auteur</th>\n          <th style=\"width: 15%;\">Emprunteur</th>\n          <th style=\"width: 10%;\">Type</th>\n          <th style=\"width: 12%;\">Matricule/Classe</th>\n          <th style=\"width: 10%;\">Date Emprunt</th>\n          <th style=\"width: 10%;\">Retour Prévu</th>\n          <th style=\"width: 8%;\">Statut</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${history.map((item: any) => {\n          const borrowDate = new Date(item.borrowDate);\n          const expectedDate = new Date(item.expectedReturnDate);\n          const today = new Date();\n          const isOverdue = today > expectedDate && item.status === 'active';\n          \n          return `\n            <tr>\n              <td><strong>${item.book?.title}</strong></td>\n              <td>${item.book?.author}</td>\n              <td><strong>${item.borrower?.firstName} ${item.borrower?.lastName}</strong></td>\n              <td>\n                <span class=\"borrower-type\">\n                  ${item.borrower?.type === 'student' ? 'Étudiant' : 'Personnel'}\n                </span>\n              </td>\n              <td>\n                ${item.borrower?.matricule}<br/>\n                <small>${item.borrower?.type === 'student' ? item.borrower?.classe || '' : item.borrower?.position || ''}</small>\n              </td>\n              <td>${borrowDate.toLocaleDateString('fr-FR')}</td>\n              <td>${expectedDate.toLocaleDateString('fr-FR')}</td>\n              <td>\n                <span class=\"${isOverdue ? 'status-overdue' : item.status === 'returned' ? 'status-returned' : 'status-borrowed'}\">\n                  ${isOverdue ? 'En retard' : item.status === 'returned' ? 'Rendu' : 'En cours'}\n                </span>\n              </td>\n            </tr>\n          `;\n        }).join('')}\n      </tbody>\n    </table>\n  `;\n}\n\nfunction generateHistoryContent(data: any): string {\n  const { history, filters, stats } = data;\n  \n  const filterInfo = [];\n  if (filters.startDate) filterInfo.push(`Du ${new Date(filters.startDate).toLocaleDateString('fr-FR')}`);\n  if (filters.endDate) filterInfo.push(`Au ${new Date(filters.endDate).toLocaleDateString('fr-FR')}`);\n  if (filters.borrowerType && filters.borrowerType !== 'all') {\n    filterInfo.push(`Type: ${filters.borrowerType === 'student' ? 'Étudiants' : 'Personnel'}`);\n  }\n  if (filters.status && filters.status !== 'all') {\n    const statusLabels = {\n      active: 'En cours',\n      returned: 'Rendus',\n      overdue: 'En retard'\n    };\n    filterInfo.push(`Statut: ${statusLabels[filters.status as keyof typeof statusLabels]}`);\n  }\n  \n  return `\n    ${filterInfo.length > 0 ? `\n      <div style=\"background: #F3EED9; padding: 15px; border-radius: 8px; margin-bottom: 20px; border: 1px solid #E5DCC2;\">\n        <strong>Filtres appliqués:</strong> ${filterInfo.join(' • ')}\n      </div>\n    ` : ''}\n    \n    <div class=\"stats-summary\">\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.total}</div>\n        <div class=\"stat-label\">Total Emprunts</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.active}</div>\n        <div class=\"stat-label\">En Cours</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.returned}</div>\n        <div class=\"stat-label\">Rendus</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.overdue}</div>\n        <div class=\"stat-label\">En Retard</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.students}</div>\n        <div class=\"stat-label\">Étudiants</div>\n      </div>\n      <div class=\"stat-item\">\n        <div class=\"stat-value\">${stats.staff}</div>\n        <div class=\"stat-label\">Personnel</div>\n      </div>\n    </div>\n    \n    <table class=\"content-table\">\n      <thead>\n        <tr>\n          <th style=\"width: 18%;\">Livre</th>\n          <th style=\"width: 12%;\">Auteur</th>\n          <th style=\"width: 15%;\">Emprunteur</th>\n          <th style=\"width: 8%;\">Type</th>\n          <th style=\"width: 10%;\">Matricule</th>\n          <th style=\"width: 10%;\">Date Emprunt</th>\n          <th style=\"width: 10%;\">Retour Prévu</th>\n          <th style=\"width: 10%;\">Retour Effectué</th>\n          <th style=\"width: 7%;\">Statut</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${history.map((item: any) => {\n          const borrowDate = new Date(item.borrowDate);\n          const expectedDate = new Date(item.expectedReturnDate);\n          const actualDate = item.actualReturnDate ? new Date(item.actualReturnDate) : null;\n          \n          return `\n            <tr>\n              <td><strong>${item.book?.title}</strong></td>\n              <td>${item.book?.author}</td>\n              <td><strong>${item.borrower?.firstName} ${item.borrower?.lastName}</strong></td>\n              <td>\n                <span class=\"borrower-type\">\n                  ${item.borrower?.type === 'student' ? 'ÉTU' : 'PERS'}\n                </span>\n              </td>\n              <td>\n                ${item.borrower?.matricule}<br/>\n                <small>${item.borrower?.type === 'student' ? item.borrower?.classe || '' : item.borrower?.position || ''}</small>\n              </td>\n              <td>\n                ${borrowDate.toLocaleDateString('fr-FR')}<br/>\n                <small>${borrowDate.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' })}</small>\n              </td>\n              <td>${expectedDate.toLocaleDateString('fr-FR')}</td>\n              <td>\n                ${actualDate ? `\n                  ${actualDate.toLocaleDateString('fr-FR')}<br/>\n                  <small>${actualDate.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' })}</small>\n                ` : '-'}\n              </td>\n              <td>\n                <span class=\"status-${item.status}\">\n                  ${item.status === 'active' ? 'En cours' : \n                    item.status === 'returned' ? 'Rendu' : 'En retard'}\n                </span>\n              </td>\n            </tr>\n          `;\n        }).join('')}\n      </tbody>\n    </table>\n    \n    ${history.some((item: any) => item.notes) ? `\n      <div class=\"page-break\"></div>\n      <h2 style=\"color: #3E5C49; margin-top: 30px;\">Notes et Observations</h2>\n      <table class=\"content-table\">\n        <thead>\n          <tr>\n            <th style=\"width: 25%;\">Livre</th>\n            <th style=\"width: 20%;\">Emprunteur</th>\n            <th style=\"width: 15%;\">Date Retour</th>\n            <th style=\"width: 40%;\">Notes</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${history.filter((item: any) => item.notes).map((item: any) => `\n            <tr>\n              <td><strong>${item.book?.title}</strong></td>\n              <td>${item.borrower?.firstName} ${item.borrower?.lastName}</td>\n              <td>${item.actualReturnDate ? new Date(item.actualReturnDate).toLocaleDateString('fr-FR') : '-'}</td>\n              <td>${item.notes}</td>\n            </tr>\n          `).join('')}\n        </tbody>\n      </table>\n    ` : ''}\n  `;\n}\n\nasync function exportToCSV(data: any): Promise<string | null> {\n  try {\n    const result = await dialog.showSaveDialog(mainWindow, {\n      title: 'Exporter en CSV',\n      defaultPath: `bibliotheque_export_${new Date().toISOString().split('T')[0]}.csv`,\n      filters: [\n        { name: 'CSV Files', extensions: ['csv'] },\n        { name: 'All Files', extensions: ['*'] }\n      ]\n    });\n\n    if (!result.filePath) return null;\n\n    let csvContent = '';\n    \n    // Déterminer le type de données à exporter\n    if (data.history) {\n      // Export historique\n      const csvHeaders = [\n        'Date Emprunt',\n        'Heure Emprunt',\n        'Livre',\n        'Auteur',\n        'Catégorie',\n        'ISBN',\n        'Emprunteur',\n        'Type Emprunteur',\n        'Matricule',\n        'Classe/Poste',\n        'Date Retour Prévue',\n        'Date Retour Effective',\n        'Heure Retour',\n        'Statut',\n        'Durée (jours)',\n        'Retard (jours)',\n        'Notes'\n      ];\n\n      const csvRows = data.history.map((item: any) => {\n        const borrowDate = new Date(item.borrowDate);\n        const expectedDate = new Date(item.expectedReturnDate);\n        const actualDate = item.actualReturnDate ? new Date(item.actualReturnDate) : null;\n        \n        const duration = actualDate ? \n          Math.ceil((actualDate.getTime() - borrowDate.getTime()) / (1000 * 60 * 60 * 24)) : \n          Math.ceil((new Date().getTime() - borrowDate.getTime()) / (1000 * 60 * 60 * 24));\n        \n        const overdue = item.status === 'overdue' || (item.status === 'active' && new Date() > expectedDate) ?\n          Math.ceil((new Date().getTime() - expectedDate.getTime()) / (1000 * 60 * 60 * 24)) : 0;\n\n        return [\n          `\"${borrowDate.toLocaleDateString('fr-FR')}\"`,\n          `\"${borrowDate.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' })}\"`,\n          `\"${(item.book?.title || '').replace(/\"/g, '\"\"')}\"`,\n          `\"${(item.book?.author || '').replace(/\"/g, '\"\"')}\"`,\n          `\"${(item.book?.category || '').replace(/\"/g, '\"\"')}\"`,\n          `\"${(item.book?.isbn || '').replace(/\"/g, '\"\"')}\"`,\n          `\"${(item.borrower?.firstName || '')} ${(item.borrower?.lastName || '')}\"`,\n          `\"${item.borrower?.type === 'student' ? 'Étudiant' : 'Personnel'}\"`,\n          `\"${(item.borrower?.matricule || '').replace(/\"/g, '\"\"')}\"`,\n          `\"${item.borrower?.type === 'student' ? (item.borrower?.classe || '') : (item.borrower?.position || '')}\"`,\n          `\"${expectedDate.toLocaleDateString('fr-FR')}\"`,\n          `\"${actualDate ? actualDate.toLocaleDateString('fr-FR') : ''}\"`,\n          `\"${actualDate ? actualDate.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' }) : ''}\"`,\n          `\"${item.status === 'active' ? 'En cours' : item.status === 'returned' ? 'Rendu' : 'En retard'}\"`,\n          `\"${duration}\"`,\n          `\"${overdue > 0 ? overdue : ''}\"`,\n          `\"${(item.notes || '').replace(/\"/g, '\"\"')}\"`\n        ];\n      });\n\n      csvContent = [csvHeaders.join(','), ...csvRows.map((row: any) => row.join(','))].join('\\n');\n    } else {\n      // Export livres\n      const { books } = data;\n      const csvHeaders = [\n        'Titre',\n        'Auteur', \n        'Catégorie',\n        'ISBN',\n        'Année Publication',\n        'Description',\n        'Statut',\n        'Emprunteur',\n        'Date Emprunt',\n        'Date Retour Prévue'\n      ];\n\n      const csvRows = books.map((book: any) => [\n        `\"${(book.title || '').replace(/\"/g, '\"\"')}\"`,\n        `\"${(book.author || '').replace(/\"/g, '\"\"')}\"`,\n        `\"${(book.category || '').replace(/\"/g, '\"\"')}\"`,\n        `\"${(book.isbn || '').replace(/\"/g, '\"\"')}\"`,\n        `\"${(book.publishedDate || '').replace(/\"/g, '\"\"')}\"`,\n        `\"${(book.description || '').replace(/\"/g, '\"\"')}\"`,\n        `\"${book.isBorrowed ? 'Emprunté' : 'Disponible'}\"`,\n        `\"${book.borrower ? `${book.borrower.firstName} ${book.borrower.lastName}` : ''}\"`,\n        `\"${book.borrowDate ? new Date(book.borrowDate).toLocaleDateString('fr-FR') : ''}\"`,\n        `\"${book.expectedReturnDate ? new Date(book.expectedReturnDate).toLocaleDateString('fr-FR') : ''}\"`\n      ]);\n\n      csvContent = [csvHeaders.join(','), ...csvRows.map((row: any) => row.join(','))].join('\\n');\n    }\n    \n    fs.writeFileSync(result.filePath, '\\ufeff' + csvContent, 'utf8');\n    \n    return result.filePath;\n  } catch (error) {\n    console.error('Export CSV failed:', error);\n    return null;\n  }\n}","// src/preload.ts - Version corrigée pour Electron\r\ndeclare global {\r\n  interface Window {\r\n    electronAPI: typeof electronAPI;\r\n  }\r\n}\r\n\r\nimport { contextBridge, ipcRenderer } from 'electron';\r\n\r\n// Debug amélioré\r\nconsole.log('=== Preload Script Debug ===');\r\nconsole.log('Process type:', process?.type);\r\nconsole.log('Process versions:', process?.versions);\r\nconsole.log('contextBridge available:', typeof contextBridge !== 'undefined');\r\nconsole.log('ipcRenderer available:', typeof ipcRenderer !== 'undefined');\r\nconsole.log('sandbox:', process?.sandboxed);\r\n\r\n// Vérification plus robuste du contexte\r\nif (typeof contextBridge === 'undefined') {\r\n  console.error('❌ contextBridge is undefined');\r\n  console.error('Current context:', {\r\n    nodeIntegration: process?.env?.ELECTRON_ENABLE_NODE_INTEGRATION,\r\n    contextIsolation: process?.env?.ELECTRON_CONTEXT_ISOLATION,\r\n    sandbox: process?.sandboxed,\r\n    type: process?.type\r\n  });\r\n  \r\n  // Ne pas lancer d'erreur fatale, permettre de continuer\r\n  console.warn('⚠️ Running without contextBridge - this may indicate a configuration issue');\r\n} else {\r\n  console.log('✅ contextBridge is available');\r\n}\r\n\r\nif (typeof ipcRenderer === 'undefined') {\r\n  console.error('❌ ipcRenderer is undefined');\r\n} else {\r\n  console.log('✅ ipcRenderer is available');\r\n}\r\n\r\nexport interface Document {\r\n  id?: number;\r\n  // Champs principaux requis\r\n  auteur: string;           // AUTEUR\r\n  titre: string;            // TITRE  \r\n  editeur: string;          // EDITEUR\r\n  lieuEdition: string;      // LIEU D'EDITION\r\n  annee: string;            // ANNEE\r\n  descripteurs: string;     // DESCRIPTEURS (mots-clés séparés par des virgules)\r\n  cote: string;             // COTE (référence de classification)\r\n  type?: 'book' | 'mémoire' | 'thèse' | 'rapport' | 'article' | 'autre'; // TYPE DE DOCUMENT\r\n  \r\n  // Champs optionnels\r\n  isbn?: string;\r\n  description?: string;\r\n  couverture?: string;      // URL de la couverture\r\n  \r\n  // Statut d'emprunt\r\n  estEmprunte: boolean;\r\n  emprunteurId?: number;\r\n  dateEmprunt?: string;\r\n  dateRetourPrevu?: string;\r\n  dateRetour?: string;\r\n  nomEmprunteur?: string;\r\n  \r\n  // Métadonnées de synchronisation\r\n  localId?: string;         // ID unique local pour la sync\r\n  remoteId?: string;        // ID sur le serveur distant\r\n  syncStatus: 'synced' | 'pending' | 'conflict' | 'error';\r\n  lastModified: string;     // Timestamp de dernière modification\r\n  version: number;          // Version pour gérer les conflits\r\n  deletedAt?: string;       // Soft delete\r\n  createdAt?: string;\r\n}\r\n\r\n// Alias pour compatibilité ascendante - NOUVEAU MODÈLE\r\nexport interface Book extends Document {\r\n  // Propriétés de compatibilité (mappées automatiquement)\r\n  get title(): string;\r\n  get author(): string;\r\n  get category(): string;\r\n  get publishedDate(): string;\r\n  get coverUrl(): string | undefined;\r\n  get isBorrowed(): boolean;\r\n  get borrowerId(): number | undefined;\r\n  get borrowDate(): string | undefined;\r\n  get expectedReturnDate(): string | undefined;\r\n  get returnDate(): string | undefined;\r\n  get borrowerName(): string | undefined;\r\n}\r\n\r\nexport interface Author {\r\n  id?: number;\r\n  name: string;\r\n  biography?: string;\r\n  birthDate?: string;\r\n  nationality?: string;\r\n  // Synchronisation\r\n  localId?: string;\r\n  remoteId?: string;\r\n  syncStatus: 'synced' | 'pending' | 'conflict' | 'error';\r\n  lastModified: string;\r\n  version: number;\r\n  deletedAt?: string;\r\n  createdAt?: string;\r\n}\r\n\r\nexport interface Category {\r\n  id?: number;\r\n  name: string;\r\n  description?: string;\r\n  color?: string;\r\n  // Synchronisation\r\n  localId?: string;\r\n  remoteId?: string;\r\n  syncStatus: 'synced' | 'pending' | 'conflict' | 'error';\r\n  lastModified: string;\r\n  version: number;\r\n  deletedAt?: string;\r\n  createdAt?: string;\r\n}\r\n\r\nexport interface Borrower {\r\n  id?: number;\r\n  type: 'student' | 'staff';\r\n  firstName: string;\r\n  lastName: string;\r\n  matricule: string;\r\n  // Spécifique aux étudiants\r\n  classe?: string;\r\n  // Spécifique au personnel\r\n  cniNumber?: string;\r\n  position?: string;\r\n  email?: string;\r\n  phone?: string;\r\n  // Synchronisation\r\n  localId?: string;\r\n  remoteId?: string;\r\n  syncStatus: 'synced' | 'pending' | 'conflict' | 'error';\r\n  lastModified: string;\r\n  version: number;\r\n  deletedAt?: string;\r\n  createdAt?: string;\r\n}\r\n\r\nexport interface BorrowHistory {\r\n  id?: number;\r\n  documentId: number;\r\n  borrowerId: number;\r\n  borrowDate: string;\r\n  expectedReturnDate: string;\r\n  actualReturnDate?: string;\r\n  status: 'active' | 'returned' | 'overdue';\r\n  notes?: string;\r\n  // Synchronisation\r\n  localId?: string;\r\n  remoteId?: string;\r\n  syncStatus: 'synced' | 'pending' | 'conflict' | 'error';\r\n  lastModified: string;\r\n  version: number;\r\n  deletedAt?: string;\r\n  createdAt?: string;\r\n  // Relations\r\n  document?: Document;\r\n  borrower?: Borrower;\r\n}\r\n\r\nexport interface Stats {\r\n  totalDocuments: number;\r\n  borrowedDocuments: number;\r\n  availableDocuments: number;\r\n  totalAuthors: number;\r\n  totalCategories: number;\r\n  totalBorrowers: number;\r\n  totalStudents: number;\r\n  totalStaff: number;\r\n  overdueDocuments: number;\r\n}\r\n\r\nexport interface HistoryFilter {\r\n  startDate?: string;\r\n  endDate?: string;\r\n  borrowerType?: 'all' | 'student' | 'staff';\r\n  status?: 'all' | 'active' | 'returned' | 'overdue';\r\n  borrowerId?: number;\r\n  documentId?: number;\r\n}\r\n\r\n// Interfaces pour les paramètres\r\nexport interface InstitutionSettings {\r\n  name: string;\r\n  address: string;\r\n  city: string;\r\n  country: string;\r\n  phone: string;\r\n  email: string;\r\n  website: string;\r\n  logo: string;\r\n  description: string;\r\n}\r\n\r\nexport interface BackupSettings {\r\n  autoBackup: boolean;\r\n  backupFrequency: 'daily' | 'weekly' | 'monthly';\r\n  lastBackup: string;\r\n  cloudSync: boolean;\r\n  cloudProvider: 'google' | 'dropbox' | 'onedrive';\r\n}\r\n\r\nexport interface SecuritySettings {\r\n  requireAuth: boolean;\r\n  sessionTimeout: number;\r\n  passwordPolicy: {\r\n    minLength: number;\r\n    requireNumbers: boolean;\r\n    requireSymbols: boolean;\r\n  };\r\n}\r\n\r\nexport interface ApplicationSettings {\r\n  institution: InstitutionSettings;\r\n  backup: BackupSettings;\r\n  security: SecuritySettings;\r\n}\r\n\r\n// Interface pour l'authentification\r\nexport interface AuthCredentials {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport interface AuthResponse {\r\n  success: boolean;\r\n  user?: {\r\n    id: number;\r\n    username: string;\r\n    role: string;\r\n    lastLogin: string;\r\n  };\r\n  error?: string;\r\n}\r\n\r\n// Interfaces pour la synchronisation\r\nexport interface SyncStatus {\r\n  isOnline: boolean;\r\n  lastSync: string | null;\r\n  pendingOperations: number;\r\n  syncInProgress: boolean;\r\n  errors: SyncError[];\r\n}\r\n\r\nexport interface SyncError {\r\n  id: string;\r\n  type: 'document' | 'author' | 'category' | 'borrower' | 'history';\r\n  operation: 'create' | 'update' | 'delete';\r\n  entityId: string;\r\n  error: string;\r\n  timestamp: string;\r\n  retryCount: number;\r\n}\r\n\r\nexport interface SyncOperation {\r\n  id: string;\r\n  type: 'document' | 'author' | 'category' | 'borrower' | 'history';\r\n  operation: 'create' | 'update' | 'delete';\r\n  data: any;\r\n  timestamp: string;\r\n  retryCount: number;\r\n  maxRetries: number;\r\n}\r\n\r\nexport interface NetworkStatus {\r\n  isOnline: boolean;\r\n  connectionType: 'wifi' | 'ethernet' | 'cellular' | 'none';\r\n  speed?: 'slow' | 'medium' | 'fast';\r\n  lastChecked: string;\r\n}\r\n\r\nexport interface ConflictResolution {\r\n  entityType: 'document' | 'author' | 'category' | 'borrower' | 'history';\r\n  entityId: string;\r\n  localVersion: any;\r\n  remoteVersion: any;\r\n  resolution: 'use_local' | 'use_remote' | 'merge' | 'manual';\r\n  resolvedData?: any;\r\n}\r\n\r\n// Fonctions utilitaires pour la compatibilité Book/Document\r\nexport const createBookFromDocument = (document: Document): Book => {\r\n  const book = { ...document } as any;\r\n  \r\n  // Ajouter les getters pour la compatibilité\r\n  Object.defineProperties(book, {\r\n    title: {\r\n      get: function() { return this.titre; },\r\n      enumerable: true\r\n    },\r\n    author: {\r\n      get: function() { return this.auteur; },\r\n      enumerable: true\r\n    },\r\n    category: {\r\n      get: function() { return this.descripteurs.split(',')[0]?.trim() || ''; },\r\n      enumerable: true\r\n    },\r\n    publishedDate: {\r\n      get: function() { return this.annee; },\r\n      enumerable: true\r\n    },\r\n    coverUrl: {\r\n      get: function() { return this.couverture; },\r\n      enumerable: true\r\n    },\r\n    isBorrowed: {\r\n      get: function() { return this.estEmprunte; },\r\n      enumerable: true\r\n    },\r\n    borrowerId: {\r\n      get: function() { return this.emprunteurId; },\r\n      enumerable: true\r\n    },\r\n    borrowDate: {\r\n      get: function() { return this.dateEmprunt; },\r\n      enumerable: true\r\n    },\r\n    expectedReturnDate: {\r\n      get: function() { return this.dateRetourPrevu; },\r\n      enumerable: true\r\n    },\r\n    returnDate: {\r\n      get: function() { return this.dateRetour; },\r\n      enumerable: true\r\n    },\r\n    borrowerName: {\r\n      get: function() { return this.nomEmprunteur; },\r\n      enumerable: true\r\n    }\r\n  });\r\n  \r\n  return book as Book;\r\n};\r\n\r\nexport const createDocumentFromBook = (book: Partial<Book>): Omit<Document, 'id'> => {\r\n  const now = new Date().toISOString();\r\n  \r\n  return {\r\n    auteur: (book as any).author || book.auteur || '',\r\n    titre: (book as any).title || book.titre || '',\r\n    editeur: book.editeur || 'Non spécifié',\r\n    lieuEdition: book.lieuEdition || 'Non spécifié',\r\n    annee: (book as any).publishedDate || book.annee || new Date().getFullYear().toString(),\r\n    descripteurs: (book as any).category || book.descripteurs || 'Général',\r\n    cote: book.cote || `GEN-${Math.random().toString(36).substr(2, 6).toUpperCase()}`,\r\n    isbn: book.isbn,\r\n    description: book.description,\r\n    couverture: (book as any).coverUrl || book.couverture,\r\n    estEmprunte: (book as any).isBorrowed || book.estEmprunte || false,\r\n    emprunteurId: (book as any).borrowerId || book.emprunteurId,\r\n    dateEmprunt: (book as any).borrowDate || book.dateEmprunt,\r\n    dateRetourPrevu: (book as any).expectedReturnDate || book.dateRetourPrevu,\r\n    dateRetour: (book as any).returnDate || book.dateRetour,\r\n    nomEmprunteur: (book as any).borrowerName || book.nomEmprunteur,\r\n    localId: book.localId,\r\n    remoteId: book.remoteId,\r\n    syncStatus: book.syncStatus || 'pending',\r\n    lastModified: book.lastModified || now,\r\n    version: book.version || 1,\r\n    deletedAt: book.deletedAt,\r\n    createdAt: book.createdAt || now\r\n  };\r\n};\r\n\r\n// API Definition\r\nconst electronAPI = {\r\n  // Window controls\r\n  minimizeWindow: () => ipcRenderer?.invoke('window-controls:minimize'),\r\n  maximizeWindow: () => ipcRenderer?.invoke('window-controls:maximize'),\r\n  closeWindow: () => ipcRenderer?.invoke('window-controls:close'),\r\n\r\n  // Authentication\r\n  getAuthStatus: (): Promise<boolean> => ipcRenderer?.invoke('auth:status') || Promise.resolve(false),\r\n  login: (credentials: AuthCredentials): Promise<AuthResponse> => ipcRenderer?.invoke('auth:login', credentials) || Promise.resolve({ success: false, error: 'IPC not available' }),\r\n  logout: (): Promise<void> => ipcRenderer?.invoke('auth:logout') || Promise.resolve(),\r\n\r\n  // Configuration\r\n  getSupabaseConfig: (): Promise<{url: string; key: string} | null> => ipcRenderer?.invoke('config:getSupabaseConfig') || Promise.resolve(null),\r\n\r\n  // Database operations - Books (avec compatibilité Document)\r\n  getBooks: (): Promise<Book[]> => \r\n    ipcRenderer?.invoke('db:getBooks').then((documents: Document[]) => \r\n      documents.map(createBookFromDocument)\r\n    ) || Promise.resolve([]),\r\n  addBook: (book: Omit<Book, 'id'>): Promise<number> => \r\n    ipcRenderer?.invoke('db:addBook', createDocumentFromBook(book)) || Promise.resolve(0),\r\n  updateBook: (book: Book): Promise<boolean> => \r\n    ipcRenderer?.invoke('db:updateBook', { ...createDocumentFromBook(book), id: book.id }) || Promise.resolve(false),\r\n  deleteBook: (id: number): Promise<boolean> => ipcRenderer?.invoke('db:deleteBook', id) || Promise.resolve(false),\r\n  searchBooks: (query: string): Promise<Book[]> => \r\n    ipcRenderer?.invoke('db:searchBooks', query).then((documents: Document[]) => \r\n      documents.map(createBookFromDocument)\r\n    ) || Promise.resolve([]),\r\n  \r\n  // Database operations - Documents (nouveau)\r\n  getDocuments: (): Promise<Document[]> => ipcRenderer?.invoke('db:getDocuments') || Promise.resolve([]),\r\n  addDocument: (document: Omit<Document, 'id'>): Promise<number> => ipcRenderer?.invoke('db:addDocument', document) || Promise.resolve(0),\r\n  updateDocument: (document: Document): Promise<boolean> => ipcRenderer?.invoke('db:updateDocument', document) || Promise.resolve(false),\r\n  deleteDocument: (id: number): Promise<boolean> => ipcRenderer?.invoke('db:deleteDocument', id) || Promise.resolve(false),\r\n  searchDocuments: (query: string): Promise<Document[]> => ipcRenderer?.invoke('db:searchDocuments', query) || Promise.resolve([]),\r\n  \r\n  // Database operations - Authors\r\n  getAuthors: (): Promise<Author[]> => ipcRenderer?.invoke('db:getAuthors') || Promise.resolve([]),\r\n  addAuthor: (author: Omit<Author, 'id'>): Promise<number> => ipcRenderer?.invoke('db:addAuthor', {\r\n    ...author,\r\n    localId: author.localId || `author_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n    syncStatus: author.syncStatus || 'pending',\r\n    lastModified: author.lastModified || new Date().toISOString(),\r\n    version: author.version || 1,\r\n    createdAt: author.createdAt || new Date().toISOString()\r\n  }) || Promise.resolve(0),\r\n  \r\n  // Database operations - Categories\r\n  getCategories: (): Promise<Category[]> => ipcRenderer?.invoke('db:getCategories') || Promise.resolve([]),\r\n  addCategory: (category: Omit<Category, 'id'>): Promise<number> => ipcRenderer?.invoke('db:addCategory', {\r\n    ...category,\r\n    localId: category.localId || `category_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n    syncStatus: category.syncStatus || 'pending',\r\n    lastModified: category.lastModified || new Date().toISOString(),\r\n    version: category.version || 1,\r\n    createdAt: category.createdAt || new Date().toISOString()\r\n  }) || Promise.resolve(0),\r\n  \r\n  // Database operations - Borrowers\r\n  getBorrowers: (): Promise<Borrower[]> => ipcRenderer?.invoke('db:getBorrowers') || Promise.resolve([]),\r\n  addBorrower: (borrower: Omit<Borrower, 'id'>): Promise<number> => ipcRenderer?.invoke('db:addBorrower', {\r\n    ...borrower,\r\n    localId: borrower.localId || `borrower_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n    syncStatus: borrower.syncStatus || 'pending',\r\n    lastModified: borrower.lastModified || new Date().toISOString(),\r\n    version: borrower.version || 1,\r\n    createdAt: borrower.createdAt || new Date().toISOString()\r\n  }) || Promise.resolve(0),\r\n  updateBorrower: (borrower: Borrower): Promise<boolean> => ipcRenderer?.invoke('db:updateBorrower', {\r\n    ...borrower,\r\n    lastModified: new Date().toISOString(),\r\n    version: (borrower.version || 1) + 1,\r\n    syncStatus: 'pending'\r\n  }) || Promise.resolve(false),\r\n  deleteBorrower: (id: number): Promise<boolean> => ipcRenderer?.invoke('db:deleteBorrower', id) || Promise.resolve(false),\r\n  searchBorrowers: (query: string): Promise<Borrower[]> => ipcRenderer?.invoke('db:searchBorrowers', query) || Promise.resolve([]),\r\n  \r\n  // Borrow operations\r\n  getBorrowedDocuments: (): Promise<BorrowHistory[]> => ipcRenderer?.invoke('db:getBorrowedDocuments') || Promise.resolve([]),\r\n  // Compatibility method\r\n  getBorrowedBooks: (): Promise<BorrowHistory[]> => ipcRenderer?.invoke('db:getBorrowedDocuments') || Promise.resolve([]),\r\n  borrowDocument: (documentId: number, borrowerId: number, expectedReturnDate: string): Promise<number> => \r\n    ipcRenderer?.invoke('db:borrowDocument', documentId, borrowerId, expectedReturnDate) || Promise.resolve(0),\r\n  // Compatibility method\r\n  borrowBook: (documentId: number, borrowerId: number, expectedReturnDate: string): Promise<number> => \r\n    ipcRenderer?.invoke('db:borrowDocument', documentId, borrowerId, expectedReturnDate) || Promise.resolve(0),\r\n  returnBook: (borrowHistoryId: number, notes?: string): Promise<boolean> => \r\n    ipcRenderer?.invoke('db:returnBook', borrowHistoryId, notes) || Promise.resolve(false),\r\n  getBorrowHistory: (filter?: HistoryFilter): Promise<BorrowHistory[]> => \r\n    ipcRenderer?.invoke('db:getBorrowHistory', filter) || Promise.resolve([]),\r\n  \r\n  // Statistics\r\n  getStats: (): Promise<Stats> => ipcRenderer?.invoke('db:getStats') || Promise.resolve({\r\n    totalDocuments: 0,\r\n    borrowedDocuments: 0,\r\n    availableDocuments: 0,\r\n    totalAuthors: 0,\r\n    totalCategories: 0,\r\n    totalBorrowers: 0,\r\n    totalStudents: 0,\r\n    totalStaff: 0,\r\n    overdueBooks: 0\r\n  }),\r\n  getAdvancedStats: (): Promise<any> => ipcRenderer?.invoke('stats:advanced') || Promise.resolve({}),\r\n  \r\n  // Settings management\r\n  getSettings: (): Promise<ApplicationSettings | null> => ipcRenderer?.invoke('settings:get') || Promise.resolve(null),\r\n  saveSettings: (settings: ApplicationSettings): Promise<boolean> => ipcRenderer?.invoke('settings:save', settings) || Promise.resolve(false),\r\n  \r\n  // Backup and restore operations\r\n  createBackup: (): Promise<string> => ipcRenderer?.invoke('backup:create') || Promise.resolve(''),\r\n  restoreBackup: (): Promise<boolean> => ipcRenderer?.invoke('backup:restore') || Promise.resolve(false),\r\n  clearAllData: (): Promise<boolean> => ipcRenderer?.invoke('db:clearAll') || Promise.resolve(false),\r\n  \r\n  // Export/Import operations\r\n  exportDatabase: (filePath: string): Promise<void> => ipcRenderer?.invoke('db:export', filePath) || Promise.resolve(),\r\n  importDatabase: (filePath: string): Promise<boolean> => ipcRenderer?.invoke('db:import', filePath) || Promise.resolve(false),\r\n  \r\n  // Print operations\r\n  printInventory: (data: any): Promise<boolean> => ipcRenderer?.invoke('print:inventory', data) || Promise.resolve(false),\r\n  printAvailableBooks: (data: any): Promise<boolean> => ipcRenderer?.invoke('print:available-books', data) || Promise.resolve(false),\r\n  printBorrowedBooks: (data: any): Promise<boolean> => ipcRenderer?.invoke('print:borrowed-books', data) || Promise.resolve(false),\r\n  printBorrowHistory: (data: any): Promise<boolean> => ipcRenderer?.invoke('print:borrow-history', data) || Promise.resolve(false),\r\n  \r\n  // Export operations\r\n  exportCSV: (data: any): Promise<string | null> => ipcRenderer?.invoke('export:csv', data) || Promise.resolve(null),\r\n  \r\n  // File operations\r\n  selectFile: (options?: any): Promise<string | null> => ipcRenderer?.invoke('file:select', options) || Promise.resolve(null),\r\n  selectDirectory: (): Promise<string | null> => ipcRenderer?.invoke('file:selectDirectory') || Promise.resolve(null),\r\n  \r\n  // Notification operations\r\n  showNotification: (title: string, body: string): Promise<void> => \r\n    ipcRenderer?.invoke('notification:show', title, body) || Promise.resolve(),\r\n  \r\n  // System information\r\n  getSystemInfo: (): Promise<any> => ipcRenderer?.invoke('system:info') || Promise.resolve({}),\r\n  \r\n  // Application updates\r\n  checkForUpdates: (): Promise<any> => ipcRenderer?.invoke('system:checkUpdates') || Promise.resolve({}),\r\n  \r\n  // Theme operations\r\n  setTheme: (theme: string): Promise<void> => ipcRenderer?.invoke('theme:set', theme) || Promise.resolve(),\r\n  getTheme: (): Promise<string> => ipcRenderer?.invoke('theme:get') || Promise.resolve('light'),\r\n  \r\n  // Synchronization operations\r\n  getSyncStatus: (): Promise<SyncStatus> => ipcRenderer?.invoke('sync:getStatus') || Promise.resolve({\r\n    isOnline: false,\r\n    lastSync: null,\r\n    pendingOperations: 0,\r\n    syncInProgress: false,\r\n    errors: []\r\n  }),\r\n  triggerSync: (): Promise<boolean> => ipcRenderer?.invoke('sync:trigger') || Promise.resolve(false),\r\n  clearSyncErrors: (): Promise<boolean> => ipcRenderer?.invoke('sync:clearErrors') || Promise.resolve(false),\r\n  retrySyncOperation: (operationId: string): Promise<boolean> => ipcRenderer?.invoke('sync:retry', operationId) || Promise.resolve(false)\r\n};\r\n\r\n// Type guard pour vérifier si nous sommes dans un environnement qui a accès à la fenêtre\r\nfunction hasWindowAccess(): boolean {\r\n  try {\r\n    return typeof globalThis !== 'undefined' && \r\n           'window' in globalThis && \r\n           (globalThis as any).window !== undefined;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n// Exposer l'API seulement si contextBridge est disponible\r\nif (typeof contextBridge !== 'undefined' && typeof ipcRenderer !== 'undefined') {\r\n  try {\r\n    contextBridge.exposeInMainWorld('electronAPI', electronAPI);\r\n    console.log('✅ electronAPI exposed via contextBridge');\r\n  } catch (error) {\r\n    console.error('❌ Failed to expose electronAPI:', error);\r\n    // Fallback: exposer directement sur globalThis si disponible\r\n    if (hasWindowAccess()) {\r\n      (globalThis as any).window.electronAPI = electronAPI;\r\n      console.log('⚠️ electronAPI exposed directly on window (fallback)');\r\n    }\r\n  }\r\n} else {\r\n  console.warn('⚠️ contextBridge or ipcRenderer not available, using fallback');\r\n  // Fallback pour les environnements où contextBridge n'est pas disponible\r\n  if (hasWindowAccess()) {\r\n    (globalThis as any).window.electronAPI = electronAPI;\r\n    console.log('⚠️ electronAPI exposed directly on window (no contextBridge)');\r\n  } else {\r\n    console.error('❌ Window object not available');\r\n  }\r\n}","import * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport * as crypto from 'crypto';\r\nimport { app } from 'electron';\r\nimport { AuthCredentials, AuthResponse } from '../preload';\r\nimport { configService } from './ConfigService';\r\nimport { logger } from './LoggerService';\r\nimport { validationService } from './ValidationService';\r\n\r\nexport interface User {\r\n  id: number;\r\n  username: string;\r\n  passwordHash: string;\r\n  salt: string;\r\n  role: 'admin' | 'librarian' | 'user';\r\n  email?: string;\r\n  firstName?: string;\r\n  lastName?: string;\r\n  isActive: boolean;\r\n  createdAt: string;\r\n  lastLogin?: string;\r\n  loginAttempts: number;\r\n  lockedUntil?: string;\r\n}\r\n\r\nexport interface Session {\r\n  id: string;\r\n  userId: number;\r\n  username: string;\r\n  role: string;\r\n  createdAt: string;\r\n  expiresAt: string;\r\n  isActive: boolean;\r\n}\r\n\r\nexport class AuthService {\r\n  private usersFilePath: string;\r\n  private sessionsFilePath: string;\r\n  private users: User[] = [];\r\n  private sessions: Session[] = [];\r\n  private currentSession: Session | null = null;\r\n\r\n  constructor() {\r\n    const userDataPath = app.getPath('userData');\r\n    this.usersFilePath = path.join(userDataPath, 'users.json');\r\n    this.sessionsFilePath = path.join(userDataPath, 'sessions.json');\r\n    \r\n    this.loadUsers();\r\n    this.loadSessions();\r\n    this.createDefaultAdmin();\r\n  }\r\n\r\n  private loadUsers(): void {\r\n    try {\r\n      if (fs.existsSync(this.usersFilePath)) {\r\n        const data = fs.readFileSync(this.usersFilePath, 'utf8');\r\n        this.users = JSON.parse(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors du chargement des utilisateurs:', error);\r\n      this.users = [];\r\n    }\r\n  }\r\n\r\n  private saveUsers(): void {\r\n    try {\r\n      fs.writeFileSync(this.usersFilePath, JSON.stringify(this.users, null, 2));\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des utilisateurs:', error);\r\n    }\r\n  }\r\n\r\n  private loadSessions(): void {\r\n    try {\r\n      if (fs.existsSync(this.sessionsFilePath)) {\r\n        const data = fs.readFileSync(this.sessionsFilePath, 'utf8');\r\n        this.sessions = JSON.parse(data);\r\n        \r\n        // Nettoyer les sessions expirées\r\n        this.cleanExpiredSessions();\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors du chargement des sessions:', error);\r\n      this.sessions = [];\r\n    }\r\n  }\r\n\r\n  private saveSessions(): void {\r\n    try {\r\n      fs.writeFileSync(this.sessionsFilePath, JSON.stringify(this.sessions, null, 2));\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des sessions:', error);\r\n    }\r\n  }\r\n\r\n  private createDefaultAdmin(): void {\r\n    // Vérifier si un administrateur existe déjà\r\n    const adminExists = this.users.some(user => user.role === 'admin');\r\n    \r\n    if (!adminExists) {\r\n      // Créer l'utilisateur admin par défaut\r\n      const defaultAdmin: Omit<User, 'id'> = {\r\n        username: 'admin',\r\n        passwordHash: '',\r\n        salt: '',\r\n        role: 'admin',\r\n        email: 'admin@bibliotheque.local',\r\n        firstName: 'Administrateur',\r\n        lastName: 'Système',\r\n        isActive: true,\r\n        createdAt: new Date().toISOString(),\r\n        loginAttempts: 0\r\n      };\r\n\r\n      // Hasher le mot de passe par défaut\r\n      const { hash, salt } = this.hashPassword('admin');\r\n      defaultAdmin.passwordHash = hash;\r\n      defaultAdmin.salt = salt;\r\n\r\n      this.users.push({\r\n        ...defaultAdmin,\r\n        id: this.users.length + 1\r\n      });\r\n\r\n      // Logger la création du compte administrateur initial\r\n      logger.info('Compte administrateur initial créé', 'AuthService', {\r\n        username: defaultAdmin.username,\r\n        role: defaultAdmin.role\r\n      });\r\n\r\n      // Les comptes supplémentaires doivent être créés manuellement par l'administrateur\r\n      // pour garantir la sécurité et éviter les comptes par défaut\r\n\r\n      this.saveUsers();\r\n    }\r\n  }\r\n\r\n  private hashPassword(password: string, salt?: string): { hash: string; salt: string } {\r\n    const passwordSalt = salt || crypto.randomBytes(32).toString('hex');\r\n    const hash = crypto.pbkdf2Sync(password, passwordSalt, 10000, 64, 'sha512').toString('hex');\r\n    \r\n    return {\r\n      hash,\r\n      salt: passwordSalt\r\n    };\r\n  }\r\n\r\n  private verifyPassword(password: string, hash: string, salt: string): boolean {\r\n    const verifyHash = crypto.pbkdf2Sync(password, salt, 10000, 64, 'sha512').toString('hex');\r\n    return hash === verifyHash;\r\n  }\r\n\r\n  private generateSessionId(): string {\r\n    return crypto.randomBytes(32).toString('hex');\r\n  }\r\n\r\n  private cleanExpiredSessions(): void {\r\n    const now = new Date();\r\n    this.sessions = this.sessions.filter(session => {\r\n      const expiresAt = new Date(session.expiresAt);\r\n      return expiresAt > now && session.isActive;\r\n    });\r\n    this.saveSessions();\r\n  }\r\n\r\n  private isUserLocked(user: User): boolean {\r\n    if (user.lockedUntil) {\r\n      const lockExpires = new Date(user.lockedUntil);\r\n      if (new Date() < lockExpires) {\r\n        return true;\r\n      } else {\r\n        // Le verrouillage a expiré, réinitialiser\r\n        user.lockedUntil = undefined;\r\n        user.loginAttempts = 0;\r\n        this.saveUsers();\r\n        return false;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private lockUser(user: User): void {\r\n    user.loginAttempts += 1;\r\n    \r\n    if (user.loginAttempts >= 5) {\r\n      // Verrouiller pour 15 minutes\r\n      const lockDuration = 15 * 60 * 1000; // 15 minutes en millisecondes\r\n      user.lockedUntil = new Date(Date.now() + lockDuration).toISOString();\r\n    }\r\n    \r\n    this.saveUsers();\r\n  }\r\n\r\n  private resetLoginAttempts(user: User): void {\r\n    user.loginAttempts = 0;\r\n    user.lockedUntil = undefined;\r\n    this.saveUsers();\r\n  }\r\n\r\n  async login(credentials: AuthCredentials): Promise<AuthResponse> {\r\n    try {\r\n      // Nettoyer les sessions expirées\r\n      this.cleanExpiredSessions();\r\n\r\n      const user = this.users.find(u => \r\n        (u.username === credentials.username || u.email === credentials.username) && u.isActive\r\n      );\r\n\r\n      if (!user) {\r\n        return {\r\n          success: false,\r\n          error: 'Nom d\\'utilisateur ou mot de passe incorrect'\r\n        };\r\n      }\r\n\r\n      // Vérifier si l'utilisateur est verrouillé\r\n      if (this.isUserLocked(user)) {\r\n        const lockExpires = new Date(user.lockedUntil!);\r\n        const minutesLeft = Math.ceil((lockExpires.getTime() - Date.now()) / (60 * 1000));\r\n        return {\r\n          success: false,\r\n          error: `Compte verrouillé. Réessayez dans ${minutesLeft} minute(s)`\r\n        };\r\n      }\r\n\r\n      // Vérifier le mot de passe\r\n      const isValidPassword = this.verifyPassword(\r\n        credentials.password, \r\n        user.passwordHash, \r\n        user.salt\r\n      );\r\n\r\n      if (!isValidPassword) {\r\n        this.lockUser(user);\r\n        return {\r\n          success: false,\r\n          error: 'Nom d\\'utilisateur ou mot de passe incorrect'\r\n        };\r\n      }\r\n\r\n      // Réinitialiser les tentatives de connexion\r\n      this.resetLoginAttempts(user);\r\n\r\n      // Mettre à jour la dernière connexion\r\n      user.lastLogin = new Date().toISOString();\r\n      this.saveUsers();\r\n\r\n      // Créer une nouvelle session\r\n      const sessionId = this.generateSessionId();\r\n      const expiresAt = new Date(Date.now() + (60 * 60 * 1000)); // 1 heure\r\n      \r\n      const session: Session = {\r\n        id: sessionId,\r\n        userId: user.id,\r\n        username: user.username,\r\n        role: user.role,\r\n        createdAt: new Date().toISOString(),\r\n        expiresAt: expiresAt.toISOString(),\r\n        isActive: true\r\n      };\r\n\r\n      this.sessions.push(session);\r\n      this.currentSession = session;\r\n      this.saveSessions();\r\n\r\n      return {\r\n        success: true,\r\n        user: {\r\n          id: user.id,\r\n          username: user.username,\r\n          role: user.role,\r\n          lastLogin: user.lastLogin || user.createdAt\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Erreur lors de la connexion:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Erreur interne du serveur'\r\n      };\r\n    }\r\n  }\r\n\r\n  logout(): boolean {\r\n    try {\r\n      if (this.currentSession) {\r\n        // Marquer la session comme inactive\r\n        const session = this.sessions.find(s => s.id === this.currentSession!.id);\r\n        if (session) {\r\n          session.isActive = false;\r\n        }\r\n        \r\n        this.currentSession = null;\r\n        this.saveSessions();\r\n      }\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la déconnexion:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    if (!this.currentSession) {\r\n      return false;\r\n    }\r\n\r\n    // Vérifier si la session est encore valide\r\n    const expiresAt = new Date(this.currentSession.expiresAt);\r\n    const now = new Date();\r\n\r\n    if (now >= expiresAt || !this.currentSession.isActive) {\r\n      this.currentSession = null;\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getCurrentUser(): User | null {\r\n    if (!this.isAuthenticated() || !this.currentSession) {\r\n      return null;\r\n    }\r\n\r\n    return this.users.find(u => u.id === this.currentSession!.userId) || null;\r\n  }\r\n\r\n  getCurrentSession(): Session | null {\r\n    return this.isAuthenticated() ? this.currentSession : null;\r\n  }\r\n\r\n  // Méthodes d'administration des utilisateurs\r\n  createUser(userData: {\r\n    username: string;\r\n    password: string;\r\n    role: 'admin' | 'librarian' | 'user';\r\n    email?: string;\r\n    firstName?: string;\r\n    lastName?: string;\r\n  }): { success: boolean; user?: User; error?: string } {\r\n    try {\r\n      // Vérifier si l'utilisateur existe déjà\r\n      const existingUser = this.users.find(u => u.username === userData.username);\r\n      if (existingUser) {\r\n        return {\r\n          success: false,\r\n          error: 'Un utilisateur avec ce nom existe déjà'\r\n        };\r\n      }\r\n\r\n      // Hasher le mot de passe\r\n      const { hash, salt } = this.hashPassword(userData.password);\r\n\r\n      const newUser: User = {\r\n        id: Math.max(...this.users.map(u => u.id), 0) + 1,\r\n        username: userData.username,\r\n        passwordHash: hash,\r\n        salt: salt,\r\n        role: userData.role,\r\n        email: userData.email,\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n        isActive: true,\r\n        createdAt: new Date().toISOString(),\r\n        loginAttempts: 0\r\n      };\r\n\r\n      this.users.push(newUser);\r\n      this.saveUsers();\r\n\r\n      // Retourner l'utilisateur sans les données sensibles\r\n      const { passwordHash, salt: userSalt, ...safeUser } = newUser;\r\n      \r\n      return {\r\n        success: true,\r\n        user: safeUser as User\r\n      };\r\n    } catch (error) {\r\n      console.error('Erreur lors de la création de l\\'utilisateur:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Erreur lors de la création de l\\'utilisateur'\r\n      };\r\n    }\r\n  }\r\n\r\n  updateUser(userId: number, userData: Partial<{\r\n    username: string;\r\n    password: string;\r\n    role: 'admin' | 'librarian' | 'user';\r\n    email: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    isActive: boolean;\r\n  }>): { success: boolean; error?: string } {\r\n    try {\r\n      const user = this.users.find(u => u.id === userId);\r\n      if (!user) {\r\n        return {\r\n          success: false,\r\n          error: 'Utilisateur non trouvé'\r\n        };\r\n      }\r\n\r\n      // Vérifier l'unicité du nom d'utilisateur si modifié\r\n      if (userData.username && userData.username !== user.username) {\r\n        const existingUser = this.users.find(u => u.username === userData.username);\r\n        if (existingUser) {\r\n          return {\r\n            success: false,\r\n            error: 'Ce nom d\\'utilisateur est déjà utilisé'\r\n          };\r\n        }\r\n        user.username = userData.username;\r\n      }\r\n\r\n      // Mettre à jour le mot de passe si fourni\r\n      if (userData.password) {\r\n        const { hash, salt } = this.hashPassword(userData.password);\r\n        user.passwordHash = hash;\r\n        user.salt = salt;\r\n        user.loginAttempts = 0; // Réinitialiser les tentatives\r\n        user.lockedUntil = undefined;\r\n      }\r\n\r\n      // Mettre à jour les autres champs\r\n      if (userData.role !== undefined) user.role = userData.role;\r\n      if (userData.email !== undefined) user.email = userData.email;\r\n      if (userData.firstName !== undefined) user.firstName = userData.firstName;\r\n      if (userData.lastName !== undefined) user.lastName = userData.lastName;\r\n      if (userData.isActive !== undefined) user.isActive = userData.isActive;\r\n\r\n      this.saveUsers();\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erreur lors de la mise à jour de l\\'utilisateur:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Erreur lors de la mise à jour'\r\n      };\r\n    }\r\n  }\r\n\r\n  deleteUser(userId: number): { success: boolean; error?: string } {\r\n    try {\r\n      const userIndex = this.users.findIndex(u => u.id === userId);\r\n      if (userIndex === -1) {\r\n        return {\r\n          success: false,\r\n          error: 'Utilisateur non trouvé'\r\n        };\r\n      }\r\n\r\n      // Ne pas supprimer le dernier administrateur\r\n      const user = this.users[userIndex];\r\n      if (user.role === 'admin') {\r\n        const adminCount = this.users.filter(u => u.role === 'admin' && u.isActive).length;\r\n        if (adminCount <= 1) {\r\n          return {\r\n            success: false,\r\n            error: 'Impossible de supprimer le dernier administrateur'\r\n          };\r\n        }\r\n      }\r\n\r\n      this.users.splice(userIndex, 1);\r\n      this.saveUsers();\r\n\r\n      // Invalider les sessions de cet utilisateur\r\n      this.sessions = this.sessions.filter(s => s.userId !== userId);\r\n      this.saveSessions();\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erreur lors de la suppression de l\\'utilisateur:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Erreur lors de la suppression'\r\n      };\r\n    }\r\n  }\r\n\r\n  getAllUsers(): Omit<User, 'passwordHash' | 'salt'>[] {\r\n    return this.users.map(({ passwordHash, salt, ...user }) => user);\r\n  }\r\n\r\n  getActiveSessions(): Session[] {\r\n    this.cleanExpiredSessions();\r\n    return this.sessions.filter(s => s.isActive);\r\n  }\r\n\r\n  invalidateSession(sessionId: string): boolean {\r\n    const session = this.sessions.find(s => s.id === sessionId);\r\n    if (session) {\r\n      session.isActive = false;\r\n      this.saveSessions();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  invalidateAllUserSessions(userId: number): void {\r\n    this.sessions = this.sessions.map(session => {\r\n      if (session.userId === userId) {\r\n        session.isActive = false;\r\n      }\r\n      return session;\r\n    });\r\n    this.saveSessions();\r\n  }\r\n\r\n  // Méthodes utilitaires\r\n  validatePassword(password: string): { isValid: boolean; errors: string[] } {\r\n    try {\r\n      const result = validationService.validatePassword(password);\r\n      \r\n      // Logger les tentatives de mots de passe faibles\r\n      if (!result.isValid) {\r\n        logger.security('Tentative d\\'utilisation d\\'un mot de passe faible', {\r\n          errorCount: result.errors.length,\r\n          hasWarnings: result.warnings && result.warnings.length > 0\r\n        });\r\n      }\r\n      \r\n      return {\r\n        isValid: result.isValid,\r\n        errors: result.errors\r\n      };\r\n    } catch (error) {\r\n      logger.error('Erreur lors de la validation du mot de passe', 'AuthService', error as Error);\r\n      return {\r\n        isValid: false,\r\n        errors: ['Erreur lors de la validation du mot de passe']\r\n      };\r\n    }\r\n  }\r\n\r\n  changePassword(userId: number, currentPassword: string, newPassword: string): { success: boolean; error?: string } {\r\n    try {\r\n      const user = this.users.find(u => u.id === userId);\r\n      if (!user) {\r\n        return {\r\n          success: false,\r\n          error: 'Utilisateur non trouvé'\r\n        };\r\n      }\r\n\r\n      // Vérifier le mot de passe actuel\r\n      const isCurrentPasswordValid = this.verifyPassword(currentPassword, user.passwordHash, user.salt);\r\n      if (!isCurrentPasswordValid) {\r\n        return {\r\n          success: false,\r\n          error: 'Mot de passe actuel incorrect'\r\n        };\r\n      }\r\n\r\n      // Valider le nouveau mot de passe\r\n      const validation = this.validatePassword(newPassword);\r\n      if (!validation.isValid) {\r\n        return {\r\n          success: false,\r\n          error: validation.errors.join(', ')\r\n        };\r\n      }\r\n\r\n      // Mettre à jour le mot de passe\r\n      const { hash, salt } = this.hashPassword(newPassword);\r\n      user.passwordHash = hash;\r\n      user.salt = salt;\r\n      user.loginAttempts = 0;\r\n      user.lockedUntil = undefined;\r\n\r\n      this.saveUsers();\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erreur lors du changement de mot de passe:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Erreur lors du changement de mot de passe'\r\n      };\r\n    }\r\n  }\r\n\r\n  resetPassword(userId: number, newPassword: string): { success: boolean; error?: string } {\r\n    try {\r\n      const user = this.users.find(u => u.id === userId);\r\n      if (!user) {\r\n        return {\r\n          success: false,\r\n          error: 'Utilisateur non trouvé'\r\n        };\r\n      }\r\n\r\n      // Valider le nouveau mot de passe\r\n      const validation = this.validatePassword(newPassword);\r\n      if (!validation.isValid) {\r\n        return {\r\n          success: false,\r\n          error: validation.errors.join(', ')\r\n        };\r\n      }\r\n\r\n      // Mettre à jour le mot de passe\r\n      const { hash, salt } = this.hashPassword(newPassword);\r\n      user.passwordHash = hash;\r\n      user.salt = salt;\r\n      user.loginAttempts = 0;\r\n      user.lockedUntil = undefined;\r\n\r\n      this.saveUsers();\r\n\r\n      // Invalider toutes les sessions de cet utilisateur\r\n      this.invalidateAllUserSessions(userId);\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erreur lors de la réinitialisation du mot de passe:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Erreur lors de la réinitialisation du mot de passe'\r\n      };\r\n    }\r\n  }\r\n\r\n  getLoginAttempts(username: string): number {\r\n    const user = this.users.find(u => u.username === username);\r\n    return user ? user.loginAttempts : 0;\r\n  }\r\n\r\n  unlockUser(userId: number): { success: boolean; error?: string } {\r\n    try {\r\n      const user = this.users.find(u => u.id === userId);\r\n      if (!user) {\r\n        return {\r\n          success: false,\r\n          error: 'Utilisateur non trouvé'\r\n        };\r\n      }\r\n\r\n      user.loginAttempts = 0;\r\n      user.lockedUntil = undefined;\r\n      this.saveUsers();\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Erreur lors du déverrouillage de l\\'utilisateur:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Erreur lors du déverrouillage'\r\n      };\r\n    }\r\n  }\r\n\r\n  // Méthodes d'audit et de sécurité\r\n  getLoginHistory(limit: number = 50): Array<{\r\n    username: string;\r\n    loginTime: string;\r\n    success: boolean;\r\n    ip?: string;\r\n  }> {\r\n    // Pour l'instant, retourner les dernières connexions des sessions\r\n    return this.sessions\r\n      .slice(-limit)\r\n      .map(session => ({\r\n        username: session.username,\r\n        loginTime: session.createdAt,\r\n        success: true\r\n      }));\r\n  }\r\n\r\n  getSecurityStats(): {\r\n    totalUsers: number;\r\n    activeUsers: number;\r\n    lockedUsers: number;\r\n    activeSessions: number;\r\n    adminUsers: number;\r\n  } {\r\n    const now = new Date();\r\n    const lockedUsers = this.users.filter(user => {\r\n      if (user.lockedUntil) {\r\n        const lockExpires = new Date(user.lockedUntil);\r\n        return now < lockExpires;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {\r\n      totalUsers: this.users.length,\r\n      activeUsers: this.users.filter(u => u.isActive).length,\r\n      lockedUsers: lockedUsers.length,\r\n      activeSessions: this.getActiveSessions().length,\r\n      adminUsers: this.users.filter(u => u.role === 'admin' && u.isActive).length\r\n    };\r\n  }\r\n\r\n  // Méthodes de maintenance\r\n  cleanupInactiveSessions(): number {\r\n    const initialCount = this.sessions.length;\r\n    this.cleanExpiredSessions();\r\n    return initialCount - this.sessions.length;\r\n  }\r\n\r\n  exportUsers(): string {\r\n    const safeUsers = this.users.map(({ passwordHash, salt, ...user }) => user);\r\n    return JSON.stringify(safeUsers, null, 2);\r\n  }\r\n\r\n  // Méthode pour vérifier l'intégrité des données\r\n  validateDataIntegrity(): { isValid: boolean; errors: string[] } {\r\n    const errors: string[] = [];\r\n\r\n    // Vérifier qu'il y a au moins un administrateur actif\r\n    const activeAdmins = this.users.filter(u => u.role === 'admin' && u.isActive);\r\n    if (activeAdmins.length === 0) {\r\n      errors.push('Aucun administrateur actif trouvé');\r\n    }\r\n\r\n    // Vérifier l'unicité des noms d'utilisateur\r\n    const usernames = this.users.map(u => u.username);\r\n    const uniqueUsernames = new Set(usernames);\r\n    if (usernames.length !== uniqueUsernames.size) {\r\n      errors.push('Noms d\\'utilisateur en double détectés');\r\n    }\r\n\r\n    // Vérifier la validité des sessions\r\n    const validSessions = this.sessions.filter(session => {\r\n      const user = this.users.find(u => u.id === session.userId);\r\n      return user && user.isActive;\r\n    });\r\n\r\n    if (validSessions.length !== this.sessions.filter(s => s.isActive).length) {\r\n      errors.push('Sessions orphelines détectées');\r\n    }\r\n\r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }\r\n}","import * as fs from 'fs';\nimport * as path from 'path';\nimport archiver from 'archiver';\nimport extract, { Options } from 'extract-zip';\nimport { Entry, ZipFile } from 'yauzl';\nimport { app } from 'electron';\nimport { DatabaseService } from './DatabaseService';\n\nexport interface BackupMetadata {\n  version: string;\n  timestamp: string;\n  appVersion: string;\n  platform: string;\n  stats: {\n    totalDocuments: number;\n    totalBorrowers: number;\n    totalAuthors: number;\n    totalCategories: number;\n    totalBorrowHistory: number;\n  };\n  checksum: string;\n}\n\nexport interface BackupInfo {\n  filePath: string;\n  fileName: string;\n  size: number;\n  createdAt: string;\n  metadata: BackupMetadata;\n}\n\nexport class BackupService {\n  private readonly backupDir: string;\n  private readonly tempDir: string;\n  private databaseService: DatabaseService;\n\n  constructor(databaseService: DatabaseService) {\n    this.databaseService = databaseService;\n    const userDataPath = app.getPath('userData');\n    this.backupDir = path.join(userDataPath, 'backups');\n    this.tempDir = path.join(userDataPath, 'temp');\n    \n    // Créer les dossiers s'ils n'existent pas\n    this.ensureDirectories();\n  }\n\n  private ensureDirectories(): void {\n    try {\n      if (!fs.existsSync(this.backupDir)) {\n        fs.mkdirSync(this.backupDir, { recursive: true });\n      }\n      if (!fs.existsSync(this.tempDir)) {\n        fs.mkdirSync(this.tempDir, { recursive: true });\n      }\n    } catch (error) {\n      console.error('Erreur lors de la création des dossiers:', error);\n    }\n  }\n\n  private async calculateChecksum(filePath: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const crypto = require('crypto');\n      const hash = crypto.createHash('sha256');\n      const stream = fs.createReadStream(filePath);\n      \n      stream.on('data', (data: string | Buffer) => hash.update(Buffer.from(data)));\n      stream.on('end', () => resolve(hash.digest('hex')));\n      stream.on('error', reject);\n    });\n  }\n\n  private async getBackupStats(): Promise<BackupMetadata['stats']> {\n    try {\n      const stats = await this.databaseService.getStats();\n      const borrowHistory = await this.databaseService.getBorrowHistory();\n      \n      return {\n        totalDocuments: stats.totalDocuments,\n        totalBorrowers: stats.totalBorrowers,\n        totalAuthors: stats.totalAuthors,\n        totalCategories: stats.totalCategories,\n        totalBorrowHistory: borrowHistory.length\n      };\n    } catch (error) {\n      console.error('Erreur lors de la récupération des statistiques:', error);\n      return {\n        totalDocuments: 0,\n        totalBorrowers: 0,\n        totalAuthors: 0,\n        totalCategories: 0,\n        totalBorrowHistory: 0\n      };\n    }\n  }\n\n  async createBackup(): Promise<string> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n        const backupFileName = `bibliotheque_backup_${timestamp}.bak`;\n        const backupFilePath = path.join(this.backupDir, backupFileName);\n        \n        // Créer l'archive\n        const output = fs.createWriteStream(backupFilePath);\n        const archive = archiver('zip', {\n          zlib: { level: 9 } // Compression maximale\n        });\n\n        output.on('close', async () => {\n          try {\n            // Calculer le checksum\n            const checksum = await this.calculateChecksum(backupFilePath);\n            \n            // Créer les métadonnées\n            const stats = await this.getBackupStats();\n            const metadata: BackupMetadata = {\n              version: '1.0',\n              timestamp: new Date().toISOString(),\n              appVersion: app.getVersion(),\n              platform: process.platform,\n              stats,\n              checksum\n            };\n\n            // Sauvegarder les métadonnées dans un fichier séparé\n            const metadataPath = path.join(this.backupDir, `${backupFileName}.meta`);\n            fs.writeFileSync(metadataPath, JSON.stringify(metadata, null, 2));\n\n            console.log('Sauvegarde créée:', backupFilePath);\n            resolve(backupFilePath);\n          } catch (error) {\n            reject(error);\n          }\n        });\n\n        output.on('error', reject);\n        archive.on('error', reject);\n\n        archive.pipe(output);\n\n        // Ajouter la base de données\n        const dbPath = path.join(app.getPath('userData'), 'bibliotheque.db');\n        if (fs.existsSync(dbPath)) {\n          archive.file(dbPath, { name: 'bibliotheque.db' });\n        }\n\n        // Ajouter les fichiers de configuration\n        const usersPath = path.join(app.getPath('userData'), 'users.json');\n        if (fs.existsSync(usersPath)) {\n          archive.file(usersPath, { name: 'users.json' });\n        }\n\n        const sessionsPath = path.join(app.getPath('userData'), 'sessions.json');\n        if (fs.existsSync(sessionsPath)) {\n          archive.file(sessionsPath, { name: 'sessions.json' });\n        }\n\n        const settingsPath = path.join(app.getPath('userData'), 'settings.json');\n        if (fs.existsSync(settingsPath)) {\n          archive.file(settingsPath, { name: 'settings.json' });\n        }\n\n        // Ajouter un fichier d'informations sur la sauvegarde\n        const stats = await this.getBackupStats();\n        const backupInfo = {\n          version: '1.0',\n          timestamp: new Date().toISOString(),\n          appVersion: app.getVersion(),\n          platform: process.platform,\n          stats\n        };\n        \n        archive.append(JSON.stringify(backupInfo, null, 2), { name: 'backup_info.json' });\n\n        // Finaliser l'archive\n        await archive.finalize();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async restoreBackup(backupFilePath: string): Promise<boolean> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        // Vérifier que le fichier existe\n        if (!fs.existsSync(backupFilePath)) {\n          reject(new Error('Fichier de sauvegarde introuvable'));\n          return;\n        }\n\n        // Créer un dossier temporaire pour l'extraction\n        const extractPath = path.join(this.tempDir, `restore_${Date.now()}`);\n        fs.mkdirSync(extractPath, { recursive: true });\n\n        try {\n          // Extraire l'archive\n          await extract(backupFilePath, { dir: extractPath });\n\n          // Vérifier la structure de la sauvegarde\n          const backupInfoPath = path.join(extractPath, 'backup_info.json');\n          if (!fs.existsSync(backupInfoPath)) {\n            throw new Error('Structure de sauvegarde invalide');\n          }\n\n          // Lire les informations de sauvegarde\n          const backupInfo = JSON.parse(fs.readFileSync(backupInfoPath, 'utf8'));\n          console.log('Restauration de la sauvegarde:', backupInfo);\n\n          const userDataPath = app.getPath('userData');\n\n          // Sauvegarder les fichiers actuels\n          const backupCurrentPath = path.join(this.tempDir, `current_backup_${Date.now()}`);\n          fs.mkdirSync(backupCurrentPath, { recursive: true });\n\n          const filesToBackup = [\n            'bibliotheque.db',\n            'users.json',\n            'sessions.json',\n            'settings.json'\n          ];\n\n          filesToBackup.forEach(fileName => {\n            const currentFile = path.join(userDataPath, fileName);\n            if (fs.existsSync(currentFile)) {\n              fs.copyFileSync(currentFile, path.join(backupCurrentPath, fileName));\n            }\n          });\n\n          // Restaurer les fichiers\n          filesToBackup.forEach(fileName => {\n            const extractedFile = path.join(extractPath, fileName);\n            const targetFile = path.join(userDataPath, fileName);\n            \n            if (fs.existsSync(extractedFile)) {\n              fs.copyFileSync(extractedFile, targetFile);\n              console.log(`Fichier restauré: ${fileName}`);\n            }\n          });\n\n          // Nettoyer le dossier temporaire d'extraction\n          fs.rmSync(extractPath, { recursive: true, force: true });\n\n          console.log('Restauration terminée avec succès');\n          resolve(true);\n\n        } catch (extractError) {\n          // Nettoyer en cas d'erreur\n          if (fs.existsSync(extractPath)) {\n            fs.rmSync(extractPath, { recursive: true, force: true });\n          }\n          throw extractError;\n        }\n\n      } catch (error) {\n        console.error('Erreur lors de la restauration:', error);\n        reject(error);\n      }\n    });\n  }\n\n  async getBackupList(): Promise<BackupInfo[]> {\n    try {\n      const backups: BackupInfo[] = [];\n      const files = fs.readdirSync(this.backupDir);\n      \n      for (const file of files) {\n        if (file.endsWith('.bak')) {\n          const filePath = path.join(this.backupDir, file);\n          const metadataPath = path.join(this.backupDir, `${file}.meta`);\n          \n          try {\n            const stats = fs.statSync(filePath);\n            let metadata: BackupMetadata | null = null;\n            \n            // Essayer de lire les métadonnées\n            if (fs.existsSync(metadataPath)) {\n              metadata = JSON.parse(fs.readFileSync(metadataPath, 'utf8'));\n            } else {\n              // Essayer de lire les métadonnées depuis l'archive\n              metadata = await this.extractBackupMetadata(filePath);\n            }\n            \n            if (metadata) {\n              backups.push({\n                filePath,\n                fileName: file,\n                size: stats.size,\n                createdAt: stats.birthtime.toISOString(),\n                metadata\n              });\n            }\n          } catch (error) {\n            console.error(`Erreur lors de la lecture de la sauvegarde ${file}:`, error);\n          }\n        }\n      }\n      \n      // Trier par date de création (plus récent en premier)\n      return backups.sort((a, b) => \n        new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n      );\n    } catch (error) {\n      console.error('Erreur lors de la récupération de la liste des sauvegardes:', error);\n      return [];\n    }\n  }\n\n  private async extractBackupMetadata(backupFilePath: string): Promise<BackupMetadata | null> {\n    const tempExtractPath = path.join(this.tempDir, `meta_extract_${Date.now()}`);\n    \n    try {\n      await extract(backupFilePath, { \n        dir: tempExtractPath,\n        onEntry: (entry: Entry, zipFile: ZipFile) => {\n          // Ne extraire que le fichier backup_info.json\n          if (entry.fileName !== 'backup_info.json') {\n            zipFile.readEntry();\n          }\n        }\n      });\n      \n      const backupInfoPath = path.join(tempExtractPath, 'backup_info.json');\n      if (fs.existsSync(backupInfoPath)) {\n        const backupInfo = JSON.parse(fs.readFileSync(backupInfoPath, 'utf8'));\n        \n        // Calculer le checksum\n        const checksum = await this.calculateChecksum(backupFilePath);\n        \n        return {\n          version: backupInfo.version || '1.0',\n          timestamp: backupInfo.timestamp,\n          appVersion: backupInfo.appVersion,\n          platform: backupInfo.platform,\n          stats: backupInfo.stats,\n          checksum\n        };\n      }\n      \n      return null;\n    } catch (error) {\n      console.error('Erreur lors de l\\'extraction des métadonnées:', error);\n      return null;\n    } finally {\n      // Nettoyer\n      if (fs.existsSync(tempExtractPath)) {\n        fs.rmSync(tempExtractPath, { recursive: true, force: true });\n      }\n    }\n  }\n\n  async deleteBackup(backupFilePath: string): Promise<boolean> {\n    try {\n      if (fs.existsSync(backupFilePath)) {\n        fs.unlinkSync(backupFilePath);\n        \n        // Supprimer aussi le fichier de métadonnées s'il existe\n        const metadataPath = `${backupFilePath}.meta`;\n        if (fs.existsSync(metadataPath)) {\n          fs.unlinkSync(metadataPath);\n        }\n        \n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Erreur lors de la suppression de la sauvegarde:', error);\n      return false;\n    }\n  }\n\n  async validateBackup(backupFilePath: string): Promise<boolean> {\n    try {\n      const metadataPath = `${backupFilePath}.meta`;\n      \n      if (!fs.existsSync(backupFilePath)) {\n        return false;\n      }\n      \n      // Vérifier le checksum si les métadonnées existent\n      if (fs.existsSync(metadataPath)) {\n        const metadata: BackupMetadata = JSON.parse(fs.readFileSync(metadataPath, 'utf8'));\n        const currentChecksum = await this.calculateChecksum(backupFilePath);\n        \n        if (metadata.checksum !== currentChecksum) {\n          console.error('Checksum invalide pour la sauvegarde:', backupFilePath);\n          return false;\n        }\n      }\n      \n      // Vérifier que l'archive peut être ouverte et contient les fichiers essentiels\n      const tempExtractPath = path.join(this.tempDir, `validate_${Date.now()}`);\n      \n      try {\n        await extract(backupFilePath, { dir: tempExtractPath });\n        \n        const requiredFiles = ['backup_info.json'];\n        const hasRequiredFiles = requiredFiles.every(file => \n          fs.existsSync(path.join(tempExtractPath, file))\n        );\n        \n        return hasRequiredFiles;\n      } finally {\n        if (fs.existsSync(tempExtractPath)) {\n          fs.rmSync(tempExtractPath, { recursive: true, force: true });\n        }\n      }\n    } catch (error) {\n      console.error('Erreur lors de la validation de la sauvegarde:', error);\n      return false;\n    }\n  }\n\n  async exportDatabase(outputPath: string): Promise<void> {\n    try {\n      const dbPath = path.join(app.getPath('userData'), 'bibliotheque.db');\n      \n      if (!fs.existsSync(dbPath)) {\n        throw new Error('Base de données introuvable');\n      }\n      \n      fs.copyFileSync(dbPath, outputPath);\n    } catch (error) {\n      console.error('Erreur lors de l\\'export de la base de données:', error);\n      throw error;\n    }\n  }\n\n  async importDatabase(sourcePath: string): Promise<void> {\n    try {\n      if (!fs.existsSync(sourcePath)) {\n        throw new Error('Fichier source introuvable');\n      }\n      \n      const dbPath = path.join(app.getPath('userData'), 'bibliotheque.db');\n      \n      // Sauvegarder la base de données actuelle\n      const backupDbPath = path.join(app.getPath('userData'), `bibliotheque_backup_${Date.now()}.db`);\n      if (fs.existsSync(dbPath)) {\n        fs.copyFileSync(dbPath, backupDbPath);\n      }\n      \n      // Importer la nouvelle base de données\n      fs.copyFileSync(sourcePath, dbPath);\n      \n    } catch (error) {\n      console.error('Erreur lors de l\\'import de la base de données:', error);\n      throw error;\n    }\n  }\n\n  async scheduleAutoBackup(frequency: 'daily' | 'weekly' | 'monthly'): Promise<void> {\n    // Cette méthode peut être étendue pour implémenter des sauvegardes automatiques\n    // Pour l'instant, c'est un placeholder\n    console.log(`Sauvegarde automatique programmée: ${frequency}`);\n  }\n\n  async cleanOldBackups(keepCount: number = 10): Promise<number> {\n    try {\n      const backups = await this.getBackupList();\n      \n      if (backups.length <= keepCount) {\n        return 0; // Rien à nettoyer\n      }\n      \n      // Garder les plus récents, supprimer les anciens\n      const backupsToDelete = backups.slice(keepCount);\n      let deletedCount = 0;\n      \n      for (const backup of backupsToDelete) {\n        const success = await this.deleteBackup(backup.filePath);\n        if (success) {\n          deletedCount++;\n        }\n      }\n      \n      return deletedCount;\n    } catch (error) {\n      console.error('Erreur lors du nettoyage des sauvegardes:', error);\n      return 0;\n    }\n  }\n\n  getBackupDirectorySize(): number {\n    try {\n      const files = fs.readdirSync(this.backupDir);\n      let totalSize = 0;\n      \n      for (const file of files) {\n        const filePath = path.join(this.backupDir, file);\n        const stats = fs.statSync(filePath);\n        totalSize += stats.size;\n      }\n      \n      return totalSize;\n    } catch (error) {\n      console.error('Erreur lors du calcul de la taille du dossier de sauvegarde:', error);\n      return 0;\n    }\n  }\n\n  formatFileSize(bytes: number): string {\n    const units = ['B', 'KB', 'MB', 'GB'];\n    let size = bytes;\n    let unitIndex = 0;\n    \n    while (size >= 1024 && unitIndex < units.length - 1) {\n      size /= 1024;\n      unitIndex++;\n    }\n    \n    return `${size.toFixed(1)} ${units[unitIndex]}`;\n  }\n\n  \n}","// Service de configuration sécurisé pour l'application\r\nimport { app } from 'electron';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\n\r\nexport interface AppConfig {\r\n  supabase: {\r\n    url: string;\r\n    key: string;\r\n  };\r\n  database: {\r\n    path: string;\r\n    backupInterval: number;\r\n  };\r\n  security: {\r\n    sessionTimeout: number;\r\n    maxLoginAttempts: number;\r\n    passwordPolicy: {\r\n      minLength: number;\r\n      requireUppercase: boolean;\r\n      requireLowercase: boolean;\r\n      requireNumbers: boolean;\r\n      requireSpecialChars: boolean;\r\n    };\r\n  };\r\n  app: {\r\n    environment: 'development' | 'production' | 'test';\r\n    debug: boolean;\r\n    logLevel: 'error' | 'warn' | 'info' | 'debug';\r\n  };\r\n}\r\n\r\nclass ConfigService {\r\n  private config: AppConfig | null = null;\r\n  private configPath: string;\r\n\r\n  constructor() {\r\n    this.configPath = path.join(app.getPath('userData'), 'config.json');\r\n  }\r\n\r\n  /**\r\n   * Initialise la configuration\r\n   */\r\n  async initialize(): Promise<void> {\r\n    try {\r\n      await this.loadConfig();\r\n    } catch (error) {\r\n      console.error('Erreur lors du chargement de la configuration:', error);\r\n      await this.createDefaultConfig();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Charge la configuration depuis le fichier\r\n   */\r\n  private async loadConfig(): Promise<void> {\r\n    if (!fs.existsSync(this.configPath)) {\r\n      throw new Error('Fichier de configuration introuvable');\r\n    }\r\n\r\n    const configData = fs.readFileSync(this.configPath, 'utf8');\r\n    const parsedConfig = JSON.parse(configData);\r\n    \r\n    // Validation de la configuration\r\n    this.validateConfig(parsedConfig);\r\n    this.config = parsedConfig;\r\n  }\r\n\r\n  /**\r\n   * Crée une configuration par défaut\r\n   */\r\n  private async createDefaultConfig(): Promise<void> {\r\n    const defaultConfig: AppConfig = {\r\n      supabase: {\r\n        url: process.env.SUPABASE_URL || '',\r\n        key: process.env.SUPABASE_KEY || ''\r\n      },\r\n      database: {\r\n        path: path.join(app.getPath('userData'), 'database.db'),\r\n        backupInterval: 24 * 60 * 60 * 1000 // 24 heures\r\n      },\r\n      security: {\r\n        sessionTimeout: 30 * 60 * 1000, // 30 minutes\r\n        maxLoginAttempts: 5,\r\n        passwordPolicy: {\r\n          minLength: 8,\r\n          requireUppercase: true,\r\n          requireLowercase: true,\r\n          requireNumbers: true,\r\n          requireSpecialChars: true\r\n        }\r\n      },\r\n      app: {\r\n        environment: process.env.NODE_ENV as 'development' | 'production' | 'test' || 'development',\r\n        debug: process.env.NODE_ENV !== 'production',\r\n        logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'debug'\r\n      }\r\n    };\r\n\r\n    this.config = defaultConfig;\r\n    await this.saveConfig();\r\n  }\r\n\r\n  /**\r\n   * Valide la structure de la configuration\r\n   */\r\n  private validateConfig(config: any): void {\r\n    const requiredFields = [\r\n      'supabase.url',\r\n      'supabase.key',\r\n      'database.path',\r\n      'security.passwordPolicy.minLength'\r\n    ];\r\n\r\n    for (const field of requiredFields) {\r\n      const fieldValue = this.getNestedValue(config, field);\r\n      if (fieldValue === undefined || fieldValue === null) {\r\n        throw new Error(`Champ de configuration manquant: ${field}`);\r\n      }\r\n    }\r\n\r\n    // Validation des clés Supabase\r\n    if (config.supabase.url && !config.supabase.url.startsWith('https://')) {\r\n      throw new Error('URL Supabase invalide');\r\n    }\r\n\r\n    if (config.supabase.key && config.supabase.key.length < 100) {\r\n      console.warn('Clé Supabase suspicieusement courte');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Récupère une valeur imbriquée dans un objet\r\n   */\r\n  private getNestedValue(obj: any, path: string): any {\r\n    return path.split('.').reduce((current, key) => current?.[key], obj);\r\n  }\r\n\r\n  /**\r\n   * Sauvegarde la configuration\r\n   */\r\n  private async saveConfig(): Promise<void> {\r\n    if (!this.config) {\r\n      throw new Error('Aucune configuration à sauvegarder');\r\n    }\r\n\r\n    // Créer le répertoire s'il n'existe pas\r\n    const configDir = path.dirname(this.configPath);\r\n    if (!fs.existsSync(configDir)) {\r\n      fs.mkdirSync(configDir, { recursive: true });\r\n    }\r\n\r\n    fs.writeFileSync(this.configPath, JSON.stringify(this.config, null, 2));\r\n  }\r\n\r\n  /**\r\n   * Récupère la configuration complète\r\n   */\r\n  getConfig(): AppConfig {\r\n    if (!this.config) {\r\n      throw new Error('Configuration non initialisée');\r\n    }\r\n    return this.config;\r\n  }\r\n\r\n  /**\r\n   * Récupère une section spécifique de la configuration\r\n   */\r\n  get<K extends keyof AppConfig>(section: K): AppConfig[K] {\r\n    return this.getConfig()[section];\r\n  }\r\n\r\n  /**\r\n   * Met à jour une section de la configuration\r\n   */\r\n  async updateConfig<K extends keyof AppConfig>(\r\n    section: K, \r\n    updates: Partial<AppConfig[K]>\r\n  ): Promise<void> {\r\n    if (!this.config) {\r\n      throw new Error('Configuration non initialisée');\r\n    }\r\n\r\n    this.config[section] = { ...this.config[section], ...updates };\r\n    await this.saveConfig();\r\n  }\r\n\r\n  /**\r\n   * Vérifie si l'application est en mode debug\r\n   */\r\n  isDebugMode(): boolean {\r\n    return this.get('app').debug;\r\n  }\r\n\r\n  /**\r\n   * Vérifie si l'application est en production\r\n   */\r\n  isProduction(): boolean {\r\n    return this.get('app').environment === 'production';\r\n  }\r\n\r\n  /**\r\n   * Récupère le niveau de log configuré\r\n   */\r\n  getLogLevel(): string {\r\n    return this.get('app').logLevel;\r\n  }\r\n\r\n  /**\r\n   * Vérifie si les clés Supabase sont configurées\r\n   */\r\n  hasSupabaseConfig(): boolean {\r\n    const supabaseConfig = this.get('supabase');\r\n    return !!(supabaseConfig.url && supabaseConfig.key);\r\n  }\r\n\r\n  /**\r\n   * Récupère la configuration de sécurité pour les mots de passe\r\n   */\r\n  getPasswordPolicy() {\r\n    return this.get('security').passwordPolicy;\r\n  }\r\n}\r\n\r\n// Instance singleton\r\nexport const configService = new ConfigService();\r\nexport default configService;","import * as sqlite3 from 'sqlite3';\r\nimport * as path from 'path';\r\nimport { app } from 'electron';\r\nimport { Document, Book, Author, Category, Stats, Borrower, BorrowHistory, HistoryFilter, SyncOperation, createBookFromDocument } from '../preload';\r\n\r\ninterface SQLiteRunResult {\r\n  lastID: number;\r\n  changes: number;\r\n}\r\n\r\n\r\n// Interface pour les erreurs SQLite\r\ninterface SQLiteError extends Error {\r\n  code?: string;\r\n  errno?: number;\r\n}\r\n\r\nexport class DatabaseService {\r\n  private db: sqlite3.Database;\r\n\r\n  constructor() {\r\n    const dbPath = path.join(app.getPath('userData'), 'bibliotheque.db');\r\n    this.db = new sqlite3.Database(dbPath);\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.serialize(() => {\r\n        // Table des auteurs avec support sync\r\n        this.db.run(`\r\n          CREATE TABLE IF NOT EXISTS authors (\r\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n            name TEXT NOT NULL UNIQUE,\r\n            biography TEXT,\r\n            birthDate TEXT,\r\n            nationality TEXT,\r\n            -- Métadonnées de synchronisation\r\n            localId TEXT UNIQUE,\r\n            remoteId TEXT,\r\n            syncStatus TEXT DEFAULT 'pending' CHECK (syncStatus IN ('synced', 'pending', 'conflict', 'error')),\r\n            lastModified DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n            version INTEGER DEFAULT 1,\r\n            deletedAt DATETIME,\r\n            createdAt DATETIME DEFAULT CURRENT_TIMESTAMP\r\n          )\r\n        `);\r\n\r\n        // Table des catégories avec support sync\r\n        this.db.run(`\r\n          CREATE TABLE IF NOT EXISTS categories (\r\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n            name TEXT NOT NULL UNIQUE,\r\n            description TEXT,\r\n            color TEXT DEFAULT '#3E5C49',\r\n            -- Métadonnées de synchronisation\r\n            localId TEXT UNIQUE,\r\n            remoteId TEXT,\r\n            syncStatus TEXT DEFAULT 'pending' CHECK (syncStatus IN ('synced', 'pending', 'conflict', 'error')),\r\n            lastModified DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n            version INTEGER DEFAULT 1,\r\n            deletedAt DATETIME,\r\n            createdAt DATETIME DEFAULT CURRENT_TIMESTAMP\r\n          )\r\n        `);\r\n\r\n        // Table des emprunteurs avec support sync\r\n        this.db.run(`\r\n          CREATE TABLE IF NOT EXISTS borrowers (\r\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n            type TEXT NOT NULL CHECK (type IN ('student', 'staff')),\r\n            firstName TEXT NOT NULL,\r\n            lastName TEXT NOT NULL,\r\n            matricule TEXT NOT NULL UNIQUE,\r\n            classe TEXT,\r\n            cniNumber TEXT,\r\n            position TEXT,\r\n            email TEXT,\r\n            phone TEXT,\r\n            -- Métadonnées de synchronisation\r\n            localId TEXT UNIQUE,\r\n            remoteId TEXT,\r\n            syncStatus TEXT DEFAULT 'pending' CHECK (syncStatus IN ('synced', 'pending', 'conflict', 'error')),\r\n            lastModified DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n            version INTEGER DEFAULT 1,\r\n            deletedAt DATETIME,\r\n            createdAt DATETIME DEFAULT CURRENT_TIMESTAMP\r\n          )\r\n        `);\r\n\r\n        // Table des documents (nouvelle structure)\r\n        this.db.run(`\r\n          CREATE TABLE IF NOT EXISTS documents (\r\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n            \r\n            -- Champs principaux requis\r\n            auteur TEXT NOT NULL,\r\n            titre TEXT NOT NULL,\r\n            editeur TEXT NOT NULL,\r\n            lieuEdition TEXT NOT NULL,\r\n            annee TEXT NOT NULL,\r\n            descripteurs TEXT NOT NULL,\r\n            cote TEXT NOT NULL UNIQUE,\r\n            \r\n            -- Champs optionnels\r\n            isbn TEXT,\r\n            description TEXT,\r\n            couverture TEXT,\r\n            type TEXT DEFAULT 'book' CHECK (type IN ('book', 'mémoire', 'thèse', 'rapport', 'article', 'autre')),\r\n            \r\n            -- Statut d'emprunt\r\n            estEmprunte BOOLEAN DEFAULT 0,\r\n            emprunteurId INTEGER,\r\n            dateEmprunt TEXT,\r\n            dateRetourPrevu TEXT,\r\n            dateRetour TEXT,\r\n            \r\n            -- Métadonnées de synchronisation\r\n            localId TEXT UNIQUE,\r\n            remoteId TEXT,\r\n            syncStatus TEXT DEFAULT 'pending' CHECK (syncStatus IN ('synced', 'pending', 'conflict', 'error')),\r\n            lastModified DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n            version INTEGER DEFAULT 1,\r\n            deletedAt DATETIME,\r\n            createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n            \r\n            FOREIGN KEY (emprunteurId) REFERENCES borrowers(id)\r\n          )\r\n        `);\r\n\r\n        // Ajouter la colonne type si elle n'existe pas (migration)\r\n        this.db.run(`\r\n          ALTER TABLE documents ADD COLUMN type TEXT DEFAULT 'book' CHECK (type IN ('book', 'mémoire', 'thèse', 'rapport', 'article', 'autre'))\r\n        `, (err) => {\r\n          // Ignorer l'erreur si la colonne existe déjà\r\n          if (err && !err.message.includes('duplicate column name')) {\r\n            console.error('Erreur lors de l\\'ajout de la colonne type:', err);\r\n          }\r\n        });\r\n\r\n        // Vue pour compatibilité avec l'ancienne table books\r\n        this.db.run(`\r\n          CREATE VIEW IF NOT EXISTS books_view AS\r\n          SELECT \r\n            id,\r\n            titre AS title,\r\n            auteur AS author,\r\n            isbn,\r\n            descripteurs AS category,\r\n            annee AS publishedDate,\r\n            description,\r\n            couverture AS coverUrl,\r\n            estEmprunte AS isBorrowed,\r\n            emprunteurId AS borrowerId,\r\n            dateEmprunt AS borrowDate,\r\n            dateRetourPrevu AS expectedReturnDate,\r\n            dateRetour AS returnDate,\r\n            createdAt\r\n          FROM documents\r\n          WHERE deletedAt IS NULL\r\n        `);\r\n\r\n        // Table historique des emprunts avec support sync\r\n        this.db.run(`\r\n          CREATE TABLE IF NOT EXISTS borrow_history (\r\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n            documentId INTEGER NOT NULL,\r\n            borrowerId INTEGER NOT NULL,\r\n            borrowDate DATETIME NOT NULL,\r\n            expectedReturnDate DATETIME NOT NULL,\r\n            actualReturnDate DATETIME,\r\n            status TEXT NOT NULL DEFAULT 'active' CHECK (status IN ('active', 'returned', 'overdue')),\r\n            notes TEXT,\r\n            -- Métadonnées de synchronisation\r\n            localId TEXT UNIQUE,\r\n            remoteId TEXT,\r\n            syncStatus TEXT DEFAULT 'pending' CHECK (syncStatus IN ('synced', 'pending', 'conflict', 'error')),\r\n            lastModified DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n            version INTEGER DEFAULT 1,\r\n            deletedAt DATETIME,\r\n            createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n            FOREIGN KEY (documentId) REFERENCES documents(id),\r\n            FOREIGN KEY (borrowerId) REFERENCES borrowers(id)\r\n          )\r\n        `);\r\n\r\n        // Table de queue de synchronisation\r\n        this.db.run(`\r\n          CREATE TABLE IF NOT EXISTS sync_queue (\r\n            id TEXT PRIMARY KEY,\r\n            type TEXT NOT NULL CHECK (type IN ('document', 'author', 'category', 'borrower', 'history')),\r\n            operation TEXT NOT NULL CHECK (operation IN ('create', 'update', 'delete')),\r\n            data TEXT NOT NULL,\r\n            timestamp DATETIME NOT NULL,\r\n            retryCount INTEGER DEFAULT 0,\r\n            maxRetries INTEGER DEFAULT 3,\r\n            lastError TEXT,\r\n            createdAt DATETIME DEFAULT CURRENT_TIMESTAMP\r\n          )\r\n        `, (err) => {\r\n          if (err) {\r\n            reject(err);\r\n          } else {\r\n            this.seedInitialData().then(resolve).catch(reject);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private async seedInitialData(): Promise<void> {\r\n    try {\r\n      // Vérifier si des données existent déjà\r\n      const existingDocuments = await this.getDocuments();\r\n      if (existingDocuments.length > 0) {\r\n        console.log('Base de données déjà initialisée');\r\n        return;\r\n      }\r\n\r\n      const categories = [\r\n        { name: 'Fiction', description: 'Romans et nouvelles', color: '#3E5C49' },\r\n        { name: 'Science-Fiction', description: 'Littérature futuriste', color: '#C2571B' },\r\n        { name: 'Histoire', description: 'Livres historiques', color: '#6E6E6E' },\r\n        { name: 'Biographie', description: 'Vies de personnalités', color: '#3E5C49' },\r\n        { name: 'Sciences', description: 'Ouvrages scientifiques', color: '#C2571B' },\r\n        { name: 'Philosophie', description: 'Réflexions philosophiques', color: '#6E6E6E' },\r\n      ];\r\n\r\n      const authors = [\r\n        { name: 'Victor Hugo', biography: 'Écrivain français du XIXe siècle', nationality: 'Française' },\r\n        { name: 'Albert Camus', biography: 'Philosophe et écrivain français', nationality: 'Française' },\r\n        { name: 'Isaac Asimov', biography: 'Auteur de science-fiction', nationality: 'Américaine' },\r\n        { name: 'Marie Curie', biography: 'Physicienne et chimiste', nationality: 'Française' },\r\n        { name: 'Jules Verne', biography: 'Écrivain français de science-fiction', nationality: 'Française' },\r\n      ];\r\n\r\n      const borrowers = [\r\n        {\r\n          type: 'student' as const,\r\n          firstName: 'Jean',\r\n          lastName: 'Dupont',\r\n          matricule: 'ET001',\r\n          classe: 'Terminale C',\r\n          email: 'jean.dupont@ecole.cm'\r\n        },\r\n        {\r\n          type: 'student' as const,\r\n          firstName: 'Marie',\r\n          lastName: 'Martin',\r\n          matricule: 'ET002',\r\n          classe: 'Première D',\r\n          email: 'marie.martin@ecole.cm'\r\n        },\r\n        {\r\n          type: 'staff' as const,\r\n          firstName: 'Paul',\r\n          lastName: 'Nguyen',\r\n          matricule: 'ENS001',\r\n          position: 'Professeur de Mathématiques',\r\n          cniNumber: '123456789',\r\n          email: 'paul.nguyen@ecole.cm'\r\n        }\r\n      ];\r\n\r\n      const documents = [\r\n        {\r\n          auteur: 'Victor Hugo',\r\n          titre: 'Les Misérables',\r\n          editeur: 'Gallimard',\r\n          lieuEdition: 'Paris',\r\n          annee: '1862',\r\n          descripteurs: 'Fiction, Roman historique, XIXe siècle, France',\r\n          cote: 'FIC-HUG-001',\r\n          type: 'book' as const,\r\n          isbn: '978-2-253-00001-1',\r\n          description: 'Roman historique français décrivant la vie de divers personnages français dans la première moitié du XIXe siècle.',\r\n          estEmprunte: false,\r\n          syncStatus: 'synced' as const,\r\n          lastModified: new Date().toISOString(),\r\n          version: 1\r\n        },\r\n        {\r\n          auteur: 'Albert Camus',\r\n          titre: 'L\\'Étranger',\r\n          editeur: 'Gallimard',\r\n          lieuEdition: 'Paris',\r\n          annee: '1942',\r\n          descripteurs: 'Fiction, Philosophie, Absurde, Littérature française',\r\n          cote: 'FIC-CAM-001',\r\n          type: 'book' as const,\r\n          isbn: '978-2-253-00002-2',\r\n          description: 'Premier roman d\\'Albert Camus, publié en 1942. Il prend place dans la lignée des récits qui illustrent la philosophie de l\\'absurde.',\r\n          estEmprunte: false,\r\n          syncStatus: 'synced' as const,\r\n          lastModified: new Date().toISOString(),\r\n          version: 1\r\n        },\r\n        {\r\n          auteur: 'Isaac Asimov',\r\n          titre: 'Fondation',\r\n          editeur: 'Denoël',\r\n          lieuEdition: 'Paris',\r\n          annee: '1951',\r\n          descripteurs: 'Science-Fiction, Futur, Empire galactique, Psychohistoire',\r\n          cote: 'SF-ASI-001',\r\n          type: 'book' as const,\r\n          isbn: '978-2-253-00003-3',\r\n          description: 'Premier tome du cycle de Fondation, une saga de science-fiction se déroulant dans un futur lointain.',\r\n          estEmprunte: false,\r\n          syncStatus: 'synced' as const,\r\n          lastModified: new Date().toISOString(),\r\n          version: 1\r\n        },\r\n        {\r\n          auteur: 'Marie Curie',\r\n          titre: 'La Radioactivité',\r\n          editeur: 'Dunod',\r\n          lieuEdition: 'Paris',\r\n          annee: '1935',\r\n          descripteurs: 'Sciences, Physique, Radioactivité, Chimie',\r\n          cote: 'SCI-CUR-001',\r\n          type: 'rapport' as const,\r\n          description: 'Ouvrage fondamental sur la découverte et les applications de la radioactivité.',\r\n          estEmprunte: false,\r\n          syncStatus: 'synced' as const,\r\n          lastModified: new Date().toISOString(),\r\n          version: 1\r\n        },\r\n        {\r\n          auteur: 'Jules Verne',\r\n          titre: 'Vingt mille lieues sous les mers',\r\n          editeur: 'Hetzel',\r\n          lieuEdition: 'Paris',\r\n          annee: '1870',\r\n          descripteurs: 'Science-Fiction, Aventure, Sous-marins, Océan',\r\n          cote: 'SF-VER-001',\r\n          type: 'book' as const,\r\n          isbn: '978-2-253-00004-4',\r\n          description: 'Roman d\\'aventures de Jules Verne décrivant les exploits du capitaine Nemo à bord du Nautilus.',\r\n          estEmprunte: false,\r\n          syncStatus: 'synced' as const,\r\n          lastModified: new Date().toISOString(),\r\n          version: 1\r\n        }\r\n      ];\r\n\r\n      // Ajouter les catégories\r\n      for (const category of categories) {\r\n        await this.addCategory({\r\n          ...category,\r\n          syncStatus: 'pending',\r\n          lastModified: new Date().toISOString(),\r\n          version: 1,\r\n          createdAt: new Date().toISOString()\r\n        });\r\n      }\r\n\r\n      // Ajouter les auteurs\r\n      for (const author of authors) {\r\n        await this.addAuthor({\r\n          ...author,\r\n          syncStatus: 'pending',\r\n          lastModified: new Date().toISOString(),\r\n          version: 1,\r\n          createdAt: new Date().toISOString()\r\n        });\r\n      }\r\n\r\n      // Ajouter les emprunteurs\r\n      for (const borrower of borrowers) {\r\n        await this.addBorrower({\r\n          ...borrower,\r\n          syncStatus: 'pending',\r\n          lastModified: new Date().toISOString(),\r\n          version: 1,\r\n          createdAt: new Date().toISOString()\r\n        });\r\n      }\r\n\r\n      // Ajouter les documents\r\n      for (const document of documents) {\r\n        await this.addDocument(document);\r\n      }\r\n\r\n      console.log('Données d\\'exemple ajoutées avec succès');\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'initialisation des données:', error);\r\n    }\r\n  }\r\n\r\n  // CRUD Borrowers\r\n  async getBorrowers(): Promise<Borrower[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.all('SELECT * FROM borrowers ORDER BY lastName, firstName', (err, rows) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(rows as Borrower[]);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async addBorrower(borrower: Omit<Borrower, 'id'>): Promise<number> {\r\n    return new Promise((resolve, reject) => {\r\n      const stmt = this.db.prepare(`\r\n        INSERT INTO borrowers (type, firstName, lastName, matricule, classe, cniNumber, position, email, phone)\r\n        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n      `);\r\n      \r\n      stmt.run([\r\n        borrower.type,\r\n        borrower.firstName,\r\n        borrower.lastName,\r\n        borrower.matricule,\r\n        borrower.classe || null,\r\n        borrower.cniNumber || null,\r\n        borrower.position || null,\r\n        borrower.email || null,\r\n        borrower.phone || null\r\n      ], function(this: sqlite3.Statement & { lastID?: number }, err: SQLiteError | null) {\r\n        if (err) {\r\n          if (err.code === 'SQLITE_CONSTRAINT' && err.message && err.message.includes('UNIQUE constraint failed: borrowers.matricule')) {\r\n            reject(new Error('Un emprunteur avec ce matricule existe déjà'));\r\n          } else {\r\n            reject(err);\r\n          }\r\n        } else {\r\n          resolve(this.lastID || 0);\r\n        }\r\n      });\r\n      \r\n      stmt.finalize();\r\n    });\r\n  }\r\n\r\n  async updateBorrower(borrower: Borrower): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      const stmt = this.db.prepare(`\r\n        UPDATE borrowers SET \r\n          type = ?, firstName = ?, lastName = ?, matricule = ?, \r\n          classe = ?, cniNumber = ?, position = ?, email = ?, phone = ?\r\n        WHERE id = ?\r\n      `);\r\n      \r\n      stmt.run([\r\n        borrower.type,\r\n        borrower.firstName,\r\n        borrower.lastName,\r\n        borrower.matricule,\r\n        borrower.classe || null,\r\n        borrower.cniNumber || null,\r\n        borrower.position || null,\r\n        borrower.email || null,\r\n        borrower.phone || null,\r\n        borrower.id\r\n      ], function(err) {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(this.changes > 0);\r\n        }\r\n      });\r\n      \r\n      stmt.finalize();\r\n    });\r\n  }\r\n\r\n  async deleteBorrower(id: number): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      // Vérifier s'il n'y a pas d'emprunts actifs\r\n      this.db.get('SELECT COUNT(*) as count FROM borrow_history WHERE borrowerId = ? AND status = \"active\"', \r\n        [id], (err: any, row: any) => {\r\n        if (err) {\r\n          reject(err);\r\n          return;\r\n        }\r\n        \r\n        if (row.count > 0) {\r\n          reject(new Error('Impossible de supprimer : cet emprunteur a des documents non rendus'));\r\n          return;\r\n        }\r\n        \r\n        this.db.run('DELETE FROM borrowers WHERE id = ?', [id], function(err) {\r\n          if (err) {\r\n            reject(err);\r\n          } else {\r\n            resolve(this.changes > 0);\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  async searchBorrowers(query: string): Promise<Borrower[]> {\r\n    return new Promise((resolve, reject) => {\r\n      const searchQuery = `%${query}%`;\r\n      this.db.all(`\r\n        SELECT * FROM borrowers \r\n        WHERE firstName LIKE ? OR lastName LIKE ? OR matricule LIKE ? OR classe LIKE ? OR position LIKE ?\r\n        ORDER BY lastName, firstName\r\n      `, [searchQuery, searchQuery, searchQuery, searchQuery, searchQuery], (err, rows) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(rows as Borrower[]);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Documents CRUD mis à jour (méthodes Books pour compatibilité)\r\n  async getBooks(): Promise<Book[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.all(`\r\n        SELECT \r\n          d.*,\r\n          b.firstName as borrower_firstName,\r\n          b.lastName as borrower_lastName\r\n        FROM documents d\r\n        LEFT JOIN borrowers b ON d.emprunteurId = b.id\r\n        WHERE d.deletedAt IS NULL\r\n        ORDER BY d.createdAt DESC\r\n      `, (err, rows) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          const books = rows.map((row: any) => createBookFromDocument(row as Document));\r\n          resolve(books);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  // Gestion des emprunts\r\n async borrowDocument(documentId: number, borrowerId: number, expectedReturnDate: string): Promise<number> {\r\n  return new Promise((resolve, reject) => {\r\n    const borrowDate = new Date().toISOString();\r\n    const database = this.db; // Capturer this.db dans une variable locale\r\n    \r\n    database.serialize(() => {\r\n      database.run('BEGIN TRANSACTION');\r\n      \r\n      const stmt1 = database.prepare(`\r\n        INSERT INTO borrow_history (documentId, borrowerId, borrowDate, expectedReturnDate, status)\r\n        VALUES (?, ?, ?, ?, 'active')\r\n      `);\r\n      \r\n      stmt1.run([documentId, borrowerId, borrowDate, expectedReturnDate], function(this: sqlite3.RunResult, err: Error | null) {\r\n        if (err) {\r\n          database.run('ROLLBACK');\r\n          reject(err);\r\n          return;\r\n        }\r\n        \r\n        const historyId = this.lastID;\r\n        \r\n        const stmt2 = database.prepare(`\r\n          UPDATE documents SET \r\n            estEmprunte = 1, \r\n            emprunteurId = ?, \r\n            dateEmprunt = ?, \r\n            dateRetourPrevu = ?\r\n          WHERE id = ?\r\n        `);\r\n        \r\n        stmt2.run([borrowerId, borrowDate, expectedReturnDate, documentId], (err: Error | null) => {\r\n          if (err) {\r\n            database.run('ROLLBACK');\r\n            reject(err);\r\n          } else {\r\n            database.run('COMMIT');\r\n            resolve(historyId);\r\n          }\r\n        });\r\n        \r\n        stmt2.finalize();\r\n      });\r\n      \r\n      stmt1.finalize();\r\n    });\r\n  });\r\n}\r\n\r\n  // Legacy method for backward compatibility\r\n  async borrowBook(documentId: number, borrowerId: number, expectedReturnDate: string): Promise<number> {\r\n    return this.borrowDocument(documentId, borrowerId, expectedReturnDate);\r\n  }\r\n\r\n  async returnBook(borrowHistoryId: number, notes?: string): Promise<boolean> {\r\n  return new Promise((resolve, reject) => {\r\n    const returnDate = new Date().toISOString();\r\n    const database = this.db; // Capturer this.db dans une variable locale\r\n    \r\n    database.serialize(() => {\r\n      database.run('BEGIN TRANSACTION');\r\n      \r\n      database.get('SELECT documentId FROM borrow_history WHERE id = ?', [borrowHistoryId], (err: Error | null, row: any) => {\r\n        if (err) {\r\n          database.run('ROLLBACK');\r\n          reject(err);\r\n          return;\r\n        }\r\n        \r\n        if (!row) {\r\n          database.run('ROLLBACK');\r\n          reject(new Error('Emprunt non trouvé'));\r\n          return;\r\n        }\r\n        \r\n        const documentId = row.documentId;\r\n        \r\n        const stmt1 = database.prepare(`\r\n          UPDATE borrow_history SET \r\n            actualReturnDate = ?, \r\n            status = 'returned',\r\n            notes = ?\r\n          WHERE id = ?\r\n        `);\r\n        \r\n        stmt1.run([returnDate, notes || null, borrowHistoryId], function(this: sqlite3.RunResult, err: Error | null) {\r\n          if (err) {\r\n            database.run('ROLLBACK');\r\n            reject(err);\r\n            return;\r\n          }\r\n          \r\n          const stmt2 = database.prepare(`\r\n            UPDATE documents SET \r\n              estEmprunte = 0, \r\n              emprunteurId = NULL, \r\n              dateEmprunt = NULL,\r\n              dateRetourPrevu = NULL,\r\n              dateRetour = ?\r\n            WHERE id = ?\r\n          `);\r\n          \r\n          stmt2.run([returnDate, documentId], function(this: sqlite3.RunResult, err: Error | null) {\r\n            if (err) {\r\n              database.run('ROLLBACK');\r\n              reject(err);\r\n            } else {\r\n              database.run('COMMIT');\r\n              resolve((this.changes || 0) > 0);\r\n            }\r\n          });\r\n          \r\n          stmt2.finalize();\r\n        });\r\n        \r\n        stmt1.finalize();\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\n  async getBorrowedDocuments(): Promise<BorrowHistory[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.all(`\r\n        SELECT \r\n          bh.*,\r\n          d.titre as title, d.auteur as author, d.descripteurs as category, d.couverture as coverUrl, \r\n          d.isbn, d.annee as publishedDate, d.description, d.estEmprunte as isBorrowed,\r\n          d.emprunteurId as borrowerId, d.dateEmprunt as borrowDate, d.dateRetourPrevu as expectedReturnDate,\r\n          d.dateRetour as returnDate, d.syncStatus as bookSyncStatus, d.lastModified as bookLastModified,\r\n          d.version as bookVersion, d.createdAt as bookCreatedAt,\r\n          br.firstName, br.lastName, br.type, br.matricule, br.classe, br.position,\r\n          br.email, br.phone, br.cniNumber, br.syncStatus as borrowerSyncStatus,\r\n          br.lastModified as borrowerLastModified, br.version as borrowerVersion,\r\n          br.createdAt as borrowerCreatedAt\r\n        FROM borrow_history bh\r\n        JOIN documents d ON bh.documentId = d.id\r\n        JOIN borrowers br ON bh.borrowerId = br.id\r\n        WHERE bh.status = 'active' AND d.deletedAt IS NULL\r\n        ORDER BY bh.borrowDate DESC\r\n      `, (err, rows: any[]) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          const history = rows.map(row => ({\r\n            id: row.id,\r\n            documentId: row.documentId,\r\n            borrowerId: row.borrowerId,\r\n            borrowDate: row.borrowDate,\r\n            expectedReturnDate: row.expectedReturnDate,\r\n            actualReturnDate: row.actualReturnDate,\r\n            status: row.status,\r\n            notes: row.notes,\r\n            syncStatus: row.syncStatus || 'synced',\r\n            lastModified: row.lastModified || new Date().toISOString(),\r\n            version: row.version || 1,\r\n            createdAt: row.createdAt,\r\n            document: {\r\n              id: row.documentId,\r\n              // English properties (Book interface)\r\n              title: row.title,\r\n              author: row.author,\r\n              isbn: row.isbn,\r\n              category: row.category,\r\n              publishedDate: row.publishedDate,\r\n              description: row.description,\r\n              coverUrl: row.coverUrl,\r\n              isBorrowed: Boolean(row.isBorrowed),\r\n              borrowerId: row.borrowerId,\r\n              borrowDate: row.borrowDate,\r\n              expectedReturnDate: row.expectedReturnDate,\r\n              returnDate: row.returnDate,\r\n              borrowerName: `${row.firstName} ${row.lastName}`,\r\n              // French properties (Document interface)\r\n              auteur: row.author,\r\n              titre: row.title,\r\n              editeur: 'Non spécifié',\r\n              lieuEdition: 'Non spécifié',\r\n              annee: row.publishedDate,\r\n              descripteurs: row.category,\r\n              cote: `${row.category.substring(0,3)}-${row.author.substring(0,3)}-001`.toUpperCase(),\r\n              couverture: row.coverUrl,\r\n              estEmprunte: Boolean(row.isBorrowed),\r\n              emprunteurId: row.borrowerId,\r\n              dateEmprunt: row.borrowDate,\r\n              dateRetourPrevu: row.expectedReturnDate,\r\n              dateRetour: row.returnDate,\r\n              nomEmprunteur: `${row.firstName} ${row.lastName}`,\r\n              // Sync properties\r\n              syncStatus: row.bookSyncStatus || 'synced',\r\n              lastModified: row.bookLastModified || new Date().toISOString(),\r\n              version: row.bookVersion || 1,\r\n              createdAt: row.bookCreatedAt\r\n            },\r\n            borrower: {\r\n              id: row.borrowerId,\r\n              type: row.type,\r\n              firstName: row.firstName,\r\n              lastName: row.lastName,\r\n              matricule: row.matricule,\r\n              classe: row.classe,\r\n              cniNumber: row.cniNumber,\r\n              position: row.position,\r\n              email: row.email,\r\n              phone: row.phone,\r\n              syncStatus: row.borrowerSyncStatus || 'synced',\r\n              lastModified: row.borrowerLastModified || new Date().toISOString(),\r\n              version: row.borrowerVersion || 1,\r\n              createdAt: row.borrowerCreatedAt\r\n            }\r\n          }));\r\n          resolve(history);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async getBorrowHistory(filter?: HistoryFilter): Promise<BorrowHistory[]> {\r\n    return new Promise((resolve, reject) => {\r\n      let query = `\r\n        SELECT \r\n          bh.*,\r\n          d.titre as title, d.auteur as author, d.descripteurs as category, d.couverture as coverUrl, \r\n          d.isbn, d.annee as publishedDate, d.description, d.estEmprunte as isBorrowed,\r\n          d.emprunteurId as borrowerId, d.dateEmprunt as borrowDate, d.dateRetourPrevu as expectedReturnDate,\r\n          d.dateRetour as returnDate, d.syncStatus as bookSyncStatus, d.lastModified as bookLastModified,\r\n          d.version as bookVersion, d.createdAt as bookCreatedAt,\r\n          br.firstName, br.lastName, br.type, br.matricule, br.classe, br.position,\r\n          br.email, br.phone, br.cniNumber, br.syncStatus as borrowerSyncStatus,\r\n          br.lastModified as borrowerLastModified, br.version as borrowerVersion,\r\n          br.createdAt as borrowerCreatedAt\r\n        FROM borrow_history bh\r\n        JOIN documents d ON bh.documentId = d.id\r\n        JOIN borrowers br ON bh.borrowerId = br.id\r\n      `;\r\n      \r\n      const conditions: string[] = ['d.deletedAt IS NULL'];\r\n      const params: any[] = [];\r\n      \r\n      if (filter) {\r\n        if (filter.startDate) {\r\n          conditions.push('bh.borrowDate >= ?');\r\n          params.push(filter.startDate);\r\n        }\r\n        \r\n        if (filter.endDate) {\r\n          conditions.push('bh.borrowDate <= ?');\r\n          params.push(filter.endDate + ' 23:59:59');\r\n        }\r\n        \r\n        if (filter.borrowerType && filter.borrowerType !== 'all') {\r\n          conditions.push('br.type = ?');\r\n          params.push(filter.borrowerType);\r\n        }\r\n        \r\n        if (filter.status && filter.status !== 'all') {\r\n          conditions.push('bh.status = ?');\r\n          params.push(filter.status);\r\n        }\r\n        \r\n        if (filter.borrowerId) {\r\n          conditions.push('bh.borrowerId = ?');\r\n          params.push(filter.borrowerId);\r\n        }\r\n        \r\n        if (filter.documentId) {\r\n          conditions.push('bh.documentId = ?');\r\n          params.push(filter.documentId);\r\n        }\r\n      }\r\n      \r\n      if (conditions.length > 0) {\r\n        query += ' WHERE ' + conditions.join(' AND ');\r\n      }\r\n      \r\n      query += ' ORDER BY bh.borrowDate DESC';\r\n      \r\n      this.db.all(query, params, (err, rows: any[]) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          const history = rows.map(row => ({\r\n            id: row.id,\r\n            documentId: row.documentId,\r\n            borrowerId: row.borrowerId,\r\n            borrowDate: row.borrowDate,\r\n            expectedReturnDate: row.expectedReturnDate,\r\n            actualReturnDate: row.actualReturnDate,\r\n            status: row.status,\r\n            notes: row.notes,\r\n            syncStatus: row.syncStatus || 'synced',\r\n            lastModified: row.lastModified || new Date().toISOString(),\r\n            version: row.version || 1,\r\n            createdAt: row.createdAt,\r\n            document: {\r\n              id: row.documentId,\r\n              // English properties (Book interface)\r\n              title: row.title,\r\n              author: row.author,\r\n              isbn: row.isbn,\r\n              category: row.category,\r\n              publishedDate: row.publishedDate,\r\n              description: row.description,\r\n              coverUrl: row.coverUrl,\r\n              isBorrowed: Boolean(row.isBorrowed),\r\n              borrowerId: row.borrowerId,\r\n              borrowDate: row.borrowDate,\r\n              expectedReturnDate: row.expectedReturnDate,\r\n              returnDate: row.returnDate,\r\n              borrowerName: `${row.firstName} ${row.lastName}`,\r\n              // French properties (Document interface)\r\n              auteur: row.author,\r\n              titre: row.title,\r\n              editeur: 'Non spécifié',\r\n              lieuEdition: 'Non spécifié',\r\n              annee: row.publishedDate,\r\n              descripteurs: row.category,\r\n              cote: `${row.category.substring(0,3)}-${row.author.substring(0,3)}-001`.toUpperCase(),\r\n              couverture: row.coverUrl,\r\n              estEmprunte: Boolean(row.isBorrowed),\r\n              emprunteurId: row.borrowerId,\r\n              dateEmprunt: row.borrowDate,\r\n              dateRetourPrevu: row.expectedReturnDate,\r\n              dateRetour: row.returnDate,\r\n              nomEmprunteur: `${row.firstName} ${row.lastName}`,\r\n              // Sync properties\r\n              syncStatus: row.bookSyncStatus || 'synced',\r\n              lastModified: row.bookLastModified || new Date().toISOString(),\r\n              version: row.bookVersion || 1,\r\n              createdAt: row.bookCreatedAt\r\n            },\r\n            borrower: {\r\n              id: row.borrowerId,\r\n              type: row.type,\r\n              firstName: row.firstName,\r\n              lastName: row.lastName,\r\n              matricule: row.matricule,\r\n              classe: row.classe,\r\n              cniNumber: row.cniNumber,\r\n              position: row.position,\r\n              email: row.email,\r\n              phone: row.phone,\r\n              syncStatus: row.borrowerSyncStatus || 'synced',\r\n              lastModified: row.borrowerLastModified || new Date().toISOString(),\r\n              version: row.borrowerVersion || 1,\r\n              createdAt: row.borrowerCreatedAt\r\n            }\r\n          }));\r\n          resolve(history);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Autres méthodes existantes\r\n  async getAuthors(): Promise<Author[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.all('SELECT * FROM authors ORDER BY name', (err, rows) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(rows as Author[]);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async addAuthor(author: Omit<Author, 'id'>): Promise<number> {\r\n    return new Promise((resolve, reject) => {\r\n      const stmt = this.db.prepare(`\r\n        INSERT OR IGNORE INTO authors (name, biography, birthDate, nationality)\r\n        VALUES (?, ?, ?, ?)\r\n      `);\r\n      \r\n      stmt.run([\r\n        author.name,\r\n        author.biography,\r\n        author.birthDate,\r\n        author.nationality\r\n      ], function(err) {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(this.lastID || 0);\r\n        }\r\n      });\r\n      \r\n      stmt.finalize();\r\n    });\r\n  }\r\n\r\n  async getCategories(): Promise<Category[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.all('SELECT * FROM categories ORDER BY name', (err, rows) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(rows as Category[]);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async addCategory(category: Omit<Category, 'id'>): Promise<number> {\r\n    return new Promise((resolve, reject) => {\r\n      const stmt = this.db.prepare(`\r\n        INSERT OR IGNORE INTO categories (name, description, color)\r\n        VALUES (?, ?, ?)\r\n      `);\r\n      \r\n      stmt.run([\r\n        category.name,\r\n        category.description,\r\n        category.color\r\n      ], function(err) {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve(this.lastID || 0);\r\n        }\r\n      });\r\n      \r\n      stmt.finalize();\r\n    });\r\n  }\r\n\r\n  async searchBooks(query: string): Promise<Book[]> {\r\n    // Méthode de compatibilité - utilise searchDocuments() et convertit le résultat\r\n    try {\r\n      const documents = await this.searchDocuments(query);\r\n      return documents.map(doc => createBookFromDocument(doc));\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getStats(): Promise<Stats> {\r\n  return new Promise((resolve, reject) => {\r\n    this.db.serialize(() => {\r\n      const stats: any = {};\r\n      \r\n      // Utiliser documents au lieu de books\r\n      this.db.get('SELECT COUNT(*) as count FROM documents WHERE deletedAt IS NULL', (err: Error | null, row: any) => {\r\n        if (err) {\r\n          reject(err);\r\n          return;\r\n        }\r\n        stats.totalDocuments = row.count || 0;\r\n        \r\n        this.db.get('SELECT COUNT(*) as count FROM documents WHERE estEmprunte = 1 AND deletedAt IS NULL', (err: Error | null, row: any) => {\r\n          if (err) {\r\n            reject(err);\r\n            return;\r\n          }\r\n          stats.borrowedDocuments = row.count || 0;\r\n          stats.availableDocuments = (stats.totalDocuments || 0) - (stats.borrowedDocuments || 0);\r\n          \r\n          this.db.get('SELECT COUNT(*) as count FROM authors WHERE deletedAt IS NULL', (err: Error | null, row: any) => {\r\n            if (err) {\r\n              reject(err);\r\n              return;\r\n            }\r\n            stats.totalAuthors = row.count || 0;\r\n            \r\n            this.db.get('SELECT COUNT(*) as count FROM categories WHERE deletedAt IS NULL', (err: Error | null, row: any) => {\r\n              if (err) {\r\n                reject(err);\r\n                return;\r\n              }\r\n              stats.totalCategories = row.count || 0;\r\n              \r\n              this.db.get('SELECT COUNT(*) as count FROM borrowers WHERE deletedAt IS NULL', (err: Error | null, row: any) => {\r\n                if (err) {\r\n                  reject(err);\r\n                  return;\r\n                }\r\n                stats.totalBorrowers = row.count || 0;\r\n                \r\n                this.db.get('SELECT COUNT(*) as count FROM borrowers WHERE type = \"student\" AND deletedAt IS NULL', (err: Error | null, row: any) => {\r\n                  if (err) {\r\n                    reject(err);\r\n                    return;\r\n                  }\r\n                  stats.totalStudents = row.count || 0;\r\n                  \r\n                  this.db.get('SELECT COUNT(*) as count FROM borrowers WHERE type = \"staff\" AND deletedAt IS NULL', (err: Error | null, row: any) => {\r\n                    if (err) {\r\n                      reject(err);\r\n                      return;\r\n                    }\r\n                    stats.totalStaff = row.count || 0;\r\n                    \r\n                    // Compter les documents en retard\r\n                    const now = new Date().toISOString();\r\n                    this.db.get(`\r\n                      SELECT COUNT(*) as count FROM borrow_history \r\n                      WHERE status = 'active' AND expectedReturnDate < ? AND deletedAt IS NULL\r\n                    `, [now], (err: Error | null, row: any) => {\r\n                      if (err) {\r\n                        reject(err);\r\n                        return;\r\n                      }\r\n                      stats.overdueDocuments = row.count || 0;\r\n                      resolve(stats as Stats);\r\n                    });\r\n                  });\r\n                });\r\n              });\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\n  // Méthode pour nettoyer la base de données (utile pour les tests)\r\n  async clearDatabase(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.serialize(() => {\r\n        this.db.run('DELETE FROM borrow_history', (err) => {\r\n          if (err) {\r\n            reject(err);\r\n            return;\r\n          }\r\n          this.db.run('DELETE FROM documents', (err) => {\r\n            if (err) {\r\n              reject(err);\r\n              return;\r\n            }\r\n            this.db.run('DELETE FROM borrowers', (err) => {\r\n              if (err) {\r\n                reject(err);\r\n                return;\r\n              }\r\n              this.db.run('DELETE FROM authors', (err) => {\r\n                if (err) {\r\n                  reject(err);\r\n                  return;\r\n                }\r\n                this.db.run('DELETE FROM categories', (err) => {\r\n                  if (err) {\r\n                    reject(err);\r\n                    return;\r\n                  }\r\n                  resolve();\r\n                });\r\n              });\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  // ===============================\r\n  // NOUVELLES MÉTHODES POUR DOCUMENTS\r\n  // ===============================\r\n\r\n  async getDocuments(): Promise<Document[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.all(`\r\n        SELECT \r\n          d.*,\r\n          b.firstName as borrower_firstName,\r\n          b.lastName as borrower_lastName\r\n        FROM documents d\r\n        LEFT JOIN borrowers b ON d.emprunteurId = b.id\r\n        WHERE d.deletedAt IS NULL\r\n        ORDER BY d.lastModified DESC\r\n      `, (err, rows) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          const documents = rows.map((row: any) => ({\r\n            id: row.id,\r\n            auteur: row.auteur,\r\n            titre: row.titre,\r\n            editeur: row.editeur,\r\n            lieuEdition: row.lieuEdition,\r\n            annee: row.annee,\r\n            descripteurs: row.descripteurs,\r\n            cote: row.cote,\r\n            type: row.type || 'book',\r\n            isbn: row.isbn,\r\n            description: row.description,\r\n            couverture: row.couverture,\r\n            estEmprunte: Boolean(row.estEmprunte),\r\n            emprunteurId: row.emprunteurId,\r\n            dateEmprunt: row.dateEmprunt,\r\n            dateRetourPrevu: row.dateRetourPrevu,\r\n            dateRetour: row.dateRetour,\r\n            nomEmprunteur: row.borrower_firstName && row.borrower_lastName \r\n              ? `${row.borrower_firstName} ${row.borrower_lastName}` \r\n              : undefined,\r\n            localId: row.localId,\r\n            remoteId: row.remoteId,\r\n            syncStatus: row.syncStatus,\r\n            lastModified: row.lastModified,\r\n            version: row.version,\r\n            deletedAt: row.deletedAt,\r\n            createdAt: row.createdAt\r\n          }));\r\n          resolve(documents);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async addDocument(document: Omit<Document, 'id'>): Promise<number> {\r\n    return new Promise((resolve, reject) => {\r\n      const localId = `doc_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n      const now = new Date().toISOString();\r\n      \r\n      const stmt = this.db.prepare(`\r\n        INSERT INTO documents (\r\n          auteur, titre, editeur, lieuEdition, annee, descripteurs, cote, type,\r\n          isbn, description, couverture, estEmprunte,\r\n          localId, syncStatus, lastModified, version, createdAt\r\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n      `);\r\n      \r\n      stmt.run([\r\n        document.auteur,\r\n        document.titre,\r\n        document.editeur,\r\n        document.lieuEdition,\r\n        document.annee,\r\n        document.descripteurs,\r\n        document.cote,\r\n        document.type || 'book',\r\n        document.isbn || null,\r\n        document.description || null,\r\n        document.couverture || null,\r\n        document.estEmprunte ? 1 : 0,\r\n        localId,\r\n        'pending',\r\n        now,\r\n        1,\r\n        now\r\n      ], function(this: sqlite3.Statement & { lastID?: number }, err: SQLiteError | null) {\r\n        if (err) {\r\n          if (err.code === 'SQLITE_CONSTRAINT' && err.message && err.message.includes('UNIQUE constraint failed: documents.cote')) {\r\n            reject(new Error('Un document avec cette cote existe déjà'));\r\n          } else {\r\n            reject(err);\r\n          }\r\n        } else {\r\n          resolve(this.lastID || 0);\r\n        }\r\n      });\r\n      \r\n      stmt.finalize();\r\n    });\r\n  }\r\n\r\n  async updateDocument(document: Document): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      const now = new Date().toISOString();\r\n      \r\n      const stmt = this.db.prepare(`\r\n        UPDATE documents SET \r\n          auteur = ?, titre = ?, editeur = ?, lieuEdition = ?, annee = ?, \r\n          descripteurs = ?, cote = ?, type = ?, isbn = ?, description = ?, couverture = ?,\r\n          lastModified = ?, version = version + 1, syncStatus = 'pending'\r\n        WHERE id = ? AND deletedAt IS NULL\r\n      `);\r\n      \r\n      stmt.run([\r\n        document.auteur,\r\n        document.titre,\r\n        document.editeur,\r\n        document.lieuEdition,\r\n        document.annee,\r\n        document.descripteurs,\r\n        document.cote,\r\n        document.type || 'book',\r\n        document.isbn || null,\r\n        document.description || null,\r\n        document.couverture || null,\r\n        now,\r\n        document.id\r\n      ], function(this: sqlite3.Statement & { changes?: number }, err: SQLiteError | null) {\r\n        if (err) {\r\n          if (err.code === 'SQLITE_CONSTRAINT' && err.message && err.message.includes('UNIQUE constraint failed: documents.cote')) {\r\n            reject(new Error('Un autre document avec cette cote existe déjà'));\r\n          } else {\r\n            reject(err);\r\n          }\r\n        } else {\r\n          resolve((this.changes || 0) > 0);\r\n        }\r\n      });\r\n      \r\n      stmt.finalize();\r\n    });\r\n  }\r\n\r\n  async deleteDocument(id: number): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      const now = new Date().toISOString();\r\n      \r\n      // Soft delete\r\n      const stmt = this.db.prepare(`\r\n        UPDATE documents \r\n        SET deletedAt = ?, lastModified = ?, syncStatus = 'pending', version = version + 1\r\n        WHERE id = ? AND deletedAt IS NULL\r\n      `);\r\n      \r\n      stmt.run([now, now, id], function(this: sqlite3.Statement & { changes?: number }, err: SQLiteError | null) {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve((this.changes || 0) > 0);\r\n        }\r\n      });\r\n      \r\n      stmt.finalize();\r\n    });\r\n  }\r\n\r\n  async searchDocuments(query: string): Promise<Document[]> {\r\n    return new Promise((resolve, reject) => {\r\n      const searchTerm = `%${query.toLowerCase()}%`;\r\n      \r\n      this.db.all(`\r\n        SELECT \r\n          d.*,\r\n          b.firstName as borrower_firstName,\r\n          b.lastName as borrower_lastName\r\n        FROM documents d\r\n        LEFT JOIN borrowers b ON d.emprunteurId = b.id\r\n        WHERE d.deletedAt IS NULL\r\n        AND (\r\n          LOWER(d.titre) LIKE ? OR \r\n          LOWER(d.auteur) LIKE ? OR \r\n          LOWER(d.editeur) LIKE ? OR\r\n          LOWER(d.descripteurs) LIKE ? OR\r\n          LOWER(d.cote) LIKE ? OR\r\n          LOWER(d.isbn) LIKE ?\r\n        )\r\n        ORDER BY d.lastModified DESC\r\n      `, [searchTerm, searchTerm, searchTerm, searchTerm, searchTerm, searchTerm], (err, rows) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          const documents = rows.map((row: any) => ({\r\n            id: row.id,\r\n            auteur: row.auteur,\r\n            titre: row.titre,\r\n            editeur: row.editeur,\r\n            lieuEdition: row.lieuEdition,\r\n            annee: row.annee,\r\n            descripteurs: row.descripteurs,\r\n            cote: row.cote,\r\n            type: row.type || 'book',\r\n            isbn: row.isbn,\r\n            description: row.description,\r\n            couverture: row.couverture,\r\n            estEmprunte: Boolean(row.estEmprunte),\r\n            emprunteurId: row.emprunteurId,\r\n            dateEmprunt: row.dateEmprunt,\r\n            dateRetourPrevu: row.dateRetourPrevu,\r\n            dateRetour: row.dateRetour,\r\n            nomEmprunteur: row.borrower_firstName && row.borrower_lastName \r\n              ? `${row.borrower_firstName} ${row.borrower_lastName}` \r\n              : undefined,\r\n            localId: row.localId,\r\n            remoteId: row.remoteId,\r\n            syncStatus: row.syncStatus,\r\n            lastModified: row.lastModified,\r\n            version: row.version,\r\n            deletedAt: row.deletedAt,\r\n            createdAt: row.createdAt\r\n          }));\r\n          resolve(documents);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // ===============================\r\n  // MÉTHODES DE SYNCHRONISATION\r\n  // ===============================\r\n\r\n  async getSyncQueue(): Promise<SyncOperation[]> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.all('SELECT * FROM sync_queue ORDER BY timestamp ASC', (err, rows) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          const operations = rows.map((row: any) => ({\r\n            id: row.id,\r\n            type: row.type,\r\n            operation: row.operation,\r\n            data: JSON.parse(row.data),\r\n            timestamp: row.timestamp,\r\n            retryCount: row.retryCount,\r\n            maxRetries: row.maxRetries\r\n          }));\r\n          resolve(operations);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  async addSyncOperation(operation: SyncOperation): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      const stmt = this.db.prepare(`\r\n        INSERT INTO sync_queue (id, type, operation, data, timestamp, retryCount, maxRetries)\r\n        VALUES (?, ?, ?, ?, ?, ?, ?)\r\n      `);\r\n      \r\n      stmt.run([\r\n        operation.id,\r\n        operation.type,\r\n        operation.operation,\r\n        JSON.stringify(operation.data),\r\n        operation.timestamp,\r\n        operation.retryCount,\r\n        operation.maxRetries\r\n      ], (err) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n      \r\n      stmt.finalize();\r\n    });\r\n  }\r\n\r\n  async updateSyncOperation(operation: SyncOperation): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      const stmt = this.db.prepare(`\r\n        UPDATE sync_queue \r\n        SET retryCount = ?, data = ?, lastError = ?\r\n        WHERE id = ?\r\n      `);\r\n      \r\n      stmt.run([\r\n        operation.retryCount,\r\n        JSON.stringify(operation.data),\r\n        '', // lastError sera ajouté plus tard si nécessaire\r\n        operation.id\r\n      ], (err) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n      \r\n      stmt.finalize();\r\n    });\r\n  }\r\n\r\n  async removeSyncOperation(operationId: string): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.run('DELETE FROM sync_queue WHERE id = ?', [operationId], (err) => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Méthodes pour mettre à jour les IDs distants\r\n  async updateDocumentRemoteId(localId: string, remoteId: string): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.run(\r\n        'UPDATE documents SET remoteId = ?, syncStatus = \"synced\" WHERE localId = ?',\r\n        [remoteId, localId],\r\n        (err) => {\r\n          if (err) reject(err);\r\n          else resolve();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async updateAuthorRemoteId(localId: string, remoteId: string): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.run(\r\n        'UPDATE authors SET remoteId = ?, syncStatus = \"synced\" WHERE localId = ?',\r\n        [remoteId, localId],\r\n        (err) => {\r\n          if (err) reject(err);\r\n          else resolve();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async updateCategoryRemoteId(localId: string, remoteId: string): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.run(\r\n        'UPDATE categories SET remoteId = ?, syncStatus = \"synced\" WHERE localId = ?',\r\n        [remoteId, localId],\r\n        (err) => {\r\n          if (err) reject(err);\r\n          else resolve();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async updateBorrowerRemoteId(localId: string, remoteId: string): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.run(\r\n        'UPDATE borrowers SET remoteId = ?, syncStatus = \"synced\" WHERE localId = ?',\r\n        [remoteId, localId],\r\n        (err) => {\r\n          if (err) reject(err);\r\n          else resolve();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async updateBorrowHistoryRemoteId(localId: string, remoteId: string): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.db.run(\r\n        'UPDATE borrow_history SET remoteId = ?, syncStatus = \"synced\" WHERE localId = ?',\r\n        [remoteId, localId],\r\n        (err) => {\r\n          if (err) reject(err);\r\n          else resolve();\r\n        }\r\n      );\r\n    });\r\n  }\r\n}","// Service de logging sécurisé et centralisé\r\nimport * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport { app } from 'electron';\r\nimport { configService } from './ConfigService';\r\n\r\nexport type LogLevel = 'error' | 'warn' | 'info' | 'debug';\r\n\r\ninterface LogEntry {\r\n  timestamp: string;\r\n  level: LogLevel;\r\n  message: string;\r\n  context?: string;\r\n  data?: any;\r\n  stack?: string;\r\n}\r\n\r\nclass LoggerService {\r\n  private logDirectory: string;\r\n  private maxLogFiles = 10;\r\n  private maxLogSizeBytes = 10 * 1024 * 1024; // 10MB\r\n\r\n  constructor() {\r\n    this.logDirectory = path.join(app.getPath('userData'), 'logs');\r\n    this.ensureLogDirectory();\r\n  }\r\n\r\n  /**\r\n   * Assure que le répertoire de logs existe\r\n   */\r\n  private ensureLogDirectory(): void {\r\n    if (!fs.existsSync(this.logDirectory)) {\r\n      fs.mkdirSync(this.logDirectory, { recursive: true });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Vérifie si le niveau de log doit être enregistré\r\n   */\r\n  private shouldLog(level: LogLevel): boolean {\r\n    const configuredLevel = configService.getLogLevel();\r\n    const levels: LogLevel[] = ['error', 'warn', 'info', 'debug'];\r\n    \r\n    const configuredIndex = levels.indexOf(configuredLevel as LogLevel);\r\n    const messageIndex = levels.indexOf(level);\r\n    \r\n    return messageIndex <= configuredIndex;\r\n  }\r\n\r\n  /**\r\n   * Sanitise les données sensibles avant logging\r\n   */\r\n  private sanitizeData(data: any): any {\r\n    if (!data) return data;\r\n\r\n    const sensitiveKeys = [\r\n      'password', 'token', 'key', 'secret', 'auth', 'credential',\r\n      'supabaseKey', 'apiKey', 'accessToken', 'refreshToken'\r\n    ];\r\n\r\n    if (typeof data === 'string') {\r\n      // Masquer les patterns d'URLs avec tokens\r\n      return data.replace(/([?&])(token|key|secret)=([^&]*)/gi, '$1$2=***');\r\n    }\r\n\r\n    if (typeof data === 'object' && data !== null) {\r\n      const sanitized = { ...data };\r\n      \r\n      for (const key in sanitized) {\r\n        if (sensitiveKeys.some(sensitive => \r\n          key.toLowerCase().includes(sensitive.toLowerCase())\r\n        )) {\r\n          sanitized[key] = '***';\r\n        } else if (typeof sanitized[key] === 'object') {\r\n          sanitized[key] = this.sanitizeData(sanitized[key]);\r\n        }\r\n      }\r\n      \r\n      return sanitized;\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Formate une entrée de log\r\n   */\r\n  private formatLogEntry(entry: LogEntry): string {\r\n    const { timestamp, level, message, context, data, stack } = entry;\r\n    \r\n    let formatted = `[${timestamp}] ${level.toUpperCase()}`;\r\n    \r\n    if (context) {\r\n      formatted += ` [${context}]`;\r\n    }\r\n    \r\n    formatted += `: ${message}`;\r\n    \r\n    if (data) {\r\n      formatted += `\\nData: ${JSON.stringify(this.sanitizeData(data), null, 2)}`;\r\n    }\r\n    \r\n    if (stack && level === 'error') {\r\n      formatted += `\\nStack: ${stack}`;\r\n    }\r\n    \r\n    return formatted + '\\n';\r\n  }\r\n\r\n  /**\r\n   * Écrit dans le fichier de log\r\n   */\r\n  private writeToFile(level: LogLevel, formattedMessage: string): void {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    const logFile = path.join(this.logDirectory, `${today}.log`);\r\n    \r\n    try {\r\n      // Rotation des logs si nécessaire\r\n      this.rotateLogsIfNeeded(logFile);\r\n      \r\n      fs.appendFileSync(logFile, formattedMessage, 'utf8');\r\n    } catch (error) {\r\n      // En cas d'erreur de fichier, utiliser console comme fallback\r\n      console.error('Erreur d\\'écriture dans le log:', error);\r\n      console.log(formattedMessage);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gère la rotation des fichiers de log\r\n   */\r\n  private rotateLogsIfNeeded(logFile: string): void {\r\n    if (!fs.existsSync(logFile)) return;\r\n    \r\n    const stats = fs.statSync(logFile);\r\n    if (stats.size > this.maxLogSizeBytes) {\r\n      const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\r\n      const rotatedFile = logFile.replace('.log', `-${timestamp}.log`);\r\n      fs.renameSync(logFile, rotatedFile);\r\n      \r\n      // Nettoyer les anciens logs\r\n      this.cleanupOldLogs();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Nettoie les anciens fichiers de log\r\n   */\r\n  private cleanupOldLogs(): void {\r\n    try {\r\n      const files = fs.readdirSync(this.logDirectory)\r\n        .filter(file => file.endsWith('.log'))\r\n        .map(file => ({\r\n          name: file,\r\n          path: path.join(this.logDirectory, file),\r\n          mtime: fs.statSync(path.join(this.logDirectory, file)).mtime\r\n        }))\r\n        .sort((a, b) => b.mtime.getTime() - a.mtime.getTime());\r\n\r\n      if (files.length > this.maxLogFiles) {\r\n        const filesToDelete = files.slice(this.maxLogFiles);\r\n        filesToDelete.forEach(file => {\r\n          fs.unlinkSync(file.path);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors du nettoyage des logs:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log générique\r\n   */\r\n  private log(level: LogLevel, message: string, context?: string, data?: any, error?: Error): void {\r\n    if (!this.shouldLog(level)) return;\r\n\r\n    const entry: LogEntry = {\r\n      timestamp: new Date().toISOString(),\r\n      level,\r\n      message,\r\n      context,\r\n      data,\r\n      stack: error?.stack\r\n    };\r\n\r\n    const formatted = this.formatLogEntry(entry);\r\n\r\n    // En mode debug, aussi logger dans la console\r\n    if (configService.isDebugMode()) {\r\n      const consoleMethod = level === 'error' ? console.error : \r\n                           level === 'warn' ? console.warn : \r\n                           console.log;\r\n      consoleMethod(formatted);\r\n    }\r\n\r\n    // Écrire dans le fichier sauf en mode test\r\n    if (configService.get('app').environment !== 'test') {\r\n      this.writeToFile(level, formatted);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log d'erreur\r\n   */\r\n  error(message: string, context?: string, error?: Error, data?: any): void {\r\n    this.log('error', message, context, data, error);\r\n  }\r\n\r\n  /**\r\n   * Log d'avertissement\r\n   */\r\n  warn(message: string, context?: string, data?: any): void {\r\n    this.log('warn', message, context, data);\r\n  }\r\n\r\n  /**\r\n   * Log d'information\r\n   */\r\n  info(message: string, context?: string, data?: any): void {\r\n    this.log('info', message, context, data);\r\n  }\r\n\r\n  /**\r\n   * Log de debug\r\n   */\r\n  debug(message: string, context?: string, data?: any): void {\r\n    this.log('debug', message, context, data);\r\n  }\r\n\r\n  /**\r\n   * Log de performance\r\n   */\r\n  performance(operation: string, duration: number, context?: string): void {\r\n    this.info(`Performance: ${operation} completed in ${duration}ms`, context);\r\n  }\r\n\r\n  /**\r\n   * Log de sécurité\r\n   */\r\n  security(message: string, data?: any): void {\r\n    this.warn(`SECURITY: ${message}`, 'Security', data);\r\n  }\r\n\r\n  /**\r\n   * Récupère les logs récents\r\n   */\r\n  getRecentLogs(hours: number = 24): LogEntry[] {\r\n    const logs: LogEntry[] = [];\r\n    const cutoffTime = new Date(Date.now() - hours * 60 * 60 * 1000);\r\n\r\n    try {\r\n      const files = fs.readdirSync(this.logDirectory)\r\n        .filter(file => file.endsWith('.log'))\r\n        .sort()\r\n        .reverse(); // Plus récents en premier\r\n\r\n      for (const file of files.slice(0, 3)) { // Lire max 3 fichiers\r\n        const filePath = path.join(this.logDirectory, file);\r\n        const content = fs.readFileSync(filePath, 'utf8');\r\n        \r\n        // Parser basique pour extraire les logs structurés\r\n        const lines = content.split('\\n').filter(line => line.trim());\r\n        \r\n        for (const line of lines) {\r\n          try {\r\n            const match = line.match(/^\\[(.+?)\\] (\\w+)(?: \\[(.+?)\\])?: (.+)$/);\r\n            if (match) {\r\n              const [, timestamp, level, context, message] = match;\r\n              const logTime = new Date(timestamp);\r\n              \r\n              if (logTime >= cutoffTime) {\r\n                logs.push({\r\n                  timestamp,\r\n                  level: level.toLowerCase() as LogLevel,\r\n                  message,\r\n                  context\r\n                });\r\n              }\r\n            }\r\n          } catch (parseError) {\r\n            // Ignorer les lignes non parsables\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.error('Erreur lors de la récupération des logs', 'LoggerService', error as Error);\r\n    }\r\n\r\n    return logs.sort((a, b) => \r\n      new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\r\n    );\r\n  }\r\n}\r\n\r\n// Instance singleton\r\nexport const logger = new LoggerService();\r\nexport default logger;","import * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport { app } from 'electron';\r\n\r\nexport interface InstitutionSettings {\r\n  name: string;\r\n  address: string;\r\n  city: string;\r\n  country: string;\r\n  phone: string;\r\n  email: string;\r\n  website: string;\r\n  logo: string;\r\n  description: string;\r\n  establishedYear?: string;\r\n  type: 'school' | 'university' | 'library' | 'other';\r\n  director?: string;\r\n  capacity?: number;\r\n}\r\n\r\nexport interface BackupSettings {\r\n  autoBackup: boolean;\r\n  backupFrequency: 'daily' | 'weekly' | 'monthly';\r\n  lastBackup: string;\r\n  backupLocation: string;\r\n  keepBackups: number;\r\n  cloudSync: boolean;\r\n  cloudProvider: 'google' | 'dropbox' | 'onedrive' | 'none';\r\n  cloudPath?: string;\r\n}\r\n\r\nexport interface SecuritySettings {\r\n  requireAuth: boolean;\r\n  sessionTimeout: number; // en minutes\r\n  maxLoginAttempts: number;\r\n  lockoutDuration: number; // en minutes\r\n  passwordPolicy: {\r\n    minLength: number;\r\n    requireNumbers: boolean;\r\n    requireSymbols: boolean;\r\n    requireUppercase: boolean;\r\n    requireLowercase: boolean;\r\n    maxAge?: number; // en jours\r\n  };\r\n  twoFactorAuth: boolean;\r\n  auditLog: boolean;\r\n}\r\n\r\nexport interface AppearanceSettings {\r\n  theme: 'light' | 'dark' | 'auto';\r\n  language: 'fr' | 'en' | 'es';\r\n  fontSize: 'small' | 'medium' | 'large';\r\n  compactMode: boolean;\r\n  animations: boolean;\r\n  colorScheme: 'default' | 'green' | 'blue' | 'purple';\r\n}\r\n\r\nexport interface LibrarySettings {\r\n  defaultLoanPeriod: number; // en jours\r\n  maxRenewals: number;\r\n  maxBooksPerUser: number;\r\n  lateFeesEnabled: boolean;\r\n  lateFeeAmount: number;\r\n  gracePeriod: number; // en jours\r\n  reservationEnabled: boolean;\r\n  reservationPeriod: number; // en jours\r\n  categoriesRequired: boolean;\r\n  isbnRequired: boolean;\r\n}\r\n\r\nexport interface NotificationSettings {\r\n  emailNotifications: boolean;\r\n  overdueReminders: boolean;\r\n  reminderDaysBefore: number;\r\n  returnConfirmation: boolean;\r\n  newBookNotifications: boolean;\r\n  systemNotifications: boolean;\r\n  smtpServer?: string;\r\n  smtpPort?: number;\r\n  smtpUser?: string;\r\n  smtpPassword?: string;\r\n  smtpSecure?: boolean;\r\n}\r\n\r\nexport interface ApplicationSettings {\r\n  institution: InstitutionSettings;\r\n  backup: BackupSettings;\r\n  security: SecuritySettings;\r\n  appearance: AppearanceSettings;\r\n  library: LibrarySettings;\r\n  notifications: NotificationSettings;\r\n  version: string;\r\n  lastUpdated: string;\r\n}\r\n\r\nexport class SettingsService {\r\n  private settingsFilePath: string;\r\n  private settings: ApplicationSettings;\r\n  private defaultSettings: ApplicationSettings;\r\n\r\n  constructor() {\r\n    const userDataPath = app.getPath('userData');\r\n    this.settingsFilePath = path.join(userDataPath, 'settings.json');\r\n    \r\n    this.defaultSettings = this.createDefaultSettings();\r\n    this.settings = { ...this.defaultSettings };\r\n    \r\n    this.loadSettings();\r\n  }\r\n\r\n  private createDefaultSettings(): ApplicationSettings {\r\n    const userDataPath = app.getPath('userData');\r\n    \r\n    return {\r\n      institution: {\r\n        name: 'Ma Bibliothèque',\r\n        address: '',\r\n        city: 'Douala',\r\n        country: 'Cameroun',\r\n        phone: '',\r\n        email: '',\r\n        website: '',\r\n        logo: '',\r\n        description: 'Système de gestion de bibliothèque moderne',\r\n        type: 'library'\r\n      },\r\n      backup: {\r\n        autoBackup: true,\r\n        backupFrequency: 'weekly',\r\n        lastBackup: '',\r\n        backupLocation: path.join(userDataPath, 'backups'),\r\n        keepBackups: 10,\r\n        cloudSync: false,\r\n        cloudProvider: 'none'\r\n      },\r\n      security: {\r\n        requireAuth: true,\r\n        sessionTimeout: 60, // 1 heure\r\n        maxLoginAttempts: 5,\r\n        lockoutDuration: 15, // 15 minutes\r\n        passwordPolicy: {\r\n          minLength: 6,\r\n          requireNumbers: true,\r\n          requireSymbols: false,\r\n          requireUppercase: false,\r\n          requireLowercase: true\r\n        },\r\n        twoFactorAuth: false,\r\n        auditLog: true\r\n      },\r\n      appearance: {\r\n        theme: 'light',\r\n        language: 'fr',\r\n        fontSize: 'medium',\r\n        compactMode: false,\r\n        animations: true,\r\n        colorScheme: 'default'\r\n      },\r\n      library: {\r\n        defaultLoanPeriod: 14, // 2 semaines\r\n        maxRenewals: 2,\r\n        maxBooksPerUser: 5,\r\n        lateFeesEnabled: false,\r\n        lateFeeAmount: 0,\r\n        gracePeriod: 3,\r\n        reservationEnabled: true,\r\n        reservationPeriod: 7,\r\n        categoriesRequired: true,\r\n        isbnRequired: false\r\n      },\r\n      notifications: {\r\n        emailNotifications: false,\r\n        overdueReminders: true,\r\n        reminderDaysBefore: 3,\r\n        returnConfirmation: true,\r\n        newBookNotifications: false,\r\n        systemNotifications: true\r\n      },\r\n      version: '1.0.0',\r\n      lastUpdated: new Date().toISOString()\r\n    };\r\n  }\r\n\r\n  private loadSettings(): void {\r\n    try {\r\n      if (fs.existsSync(this.settingsFilePath)) {\r\n        const data = fs.readFileSync(this.settingsFilePath, 'utf8');\r\n        const loadedSettings = JSON.parse(data);\r\n        \r\n        // Fusionner avec les paramètres par défaut pour s'assurer que toutes les propriétés existent\r\n        this.settings = this.mergeSettings(this.defaultSettings, loadedSettings);\r\n        \r\n        // Validation et migration si nécessaire\r\n        this.validateAndMigrateSettings();\r\n      } else {\r\n        // Créer le fichier de paramètres avec les valeurs par défaut\r\n        this.saveSettings();\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors du chargement des paramètres:', error);\r\n      this.settings = { ...this.defaultSettings };\r\n      this.saveSettings();\r\n    }\r\n  }\r\n\r\n  private mergeSettings(defaultSettings: any, loadedSettings: any): any {\r\n    const merged = { ...defaultSettings };\r\n    \r\n    for (const key in loadedSettings) {\r\n      if (loadedSettings.hasOwnProperty(key)) {\r\n        if (typeof loadedSettings[key] === 'object' && loadedSettings[key] !== null && !Array.isArray(loadedSettings[key])) {\r\n          merged[key] = this.mergeSettings(defaultSettings[key] || {}, loadedSettings[key]);\r\n        } else {\r\n          merged[key] = loadedSettings[key];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return merged;\r\n  }\r\n\r\n  private validateAndMigrateSettings(): void {\r\n    let needsSave = false;\r\n    \r\n    // Validation des valeurs numériques\r\n    if (this.settings.security.sessionTimeout < 5) {\r\n      this.settings.security.sessionTimeout = 5;\r\n      needsSave = true;\r\n    }\r\n    \r\n    if (this.settings.security.passwordPolicy.minLength < 4) {\r\n      this.settings.security.passwordPolicy.minLength = 4;\r\n      needsSave = true;\r\n    }\r\n    \r\n    if (this.settings.library.defaultLoanPeriod < 1) {\r\n      this.settings.library.defaultLoanPeriod = 7;\r\n      needsSave = true;\r\n    }\r\n    \r\n    if (this.settings.backup.keepBackups < 1) {\r\n      this.settings.backup.keepBackups = 5;\r\n      needsSave = true;\r\n    }\r\n    \r\n    // Validation des énumérations\r\n    const validThemes = ['light', 'dark', 'auto'];\r\n    if (!validThemes.includes(this.settings.appearance.theme)) {\r\n      this.settings.appearance.theme = 'light';\r\n      needsSave = true;\r\n    }\r\n    \r\n    const validLanguages = ['fr', 'en', 'es'];\r\n    if (!validLanguages.includes(this.settings.appearance.language)) {\r\n      this.settings.appearance.language = 'fr';\r\n      needsSave = true;\r\n    }\r\n    \r\n    // Mettre à jour la version et la date si nécessaire\r\n    if (this.settings.version !== this.defaultSettings.version) {\r\n      this.settings.version = this.defaultSettings.version;\r\n      this.settings.lastUpdated = new Date().toISOString();\r\n      needsSave = true;\r\n    }\r\n    \r\n    if (needsSave) {\r\n      this.saveSettings();\r\n    }\r\n  }\r\n\r\n  private saveSettings(): void {\r\n    try {\r\n      this.settings.lastUpdated = new Date().toISOString();\r\n      const data = JSON.stringify(this.settings, null, 2);\r\n      fs.writeFileSync(this.settingsFilePath, data, 'utf8');\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres:', error);\r\n    }\r\n  }\r\n\r\n  // Méthodes publiques\r\n  getSettings(): ApplicationSettings {\r\n    return { ...this.settings };\r\n  }\r\n\r\n  saveUserSettings(newSettings: ApplicationSettings): boolean {\r\n    try {\r\n      if (typeof newSettings !== 'object' || newSettings === null) {\r\n        throw new Error('Invalid settings object');\r\n      }\r\n      this.settings = { ...newSettings };\r\n      this.validateAndMigrateSettings();\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres utilisateur:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Méthodes spécifiques par section\r\n  getInstitutionSettings(): InstitutionSettings {\r\n    return { ...this.settings.institution };\r\n  }\r\n\r\n  saveInstitutionSettings(institutionSettings: InstitutionSettings): boolean {\r\n    try {\r\n      this.settings.institution = { ...institutionSettings };\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres d\\'établissement:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getBackupSettings(): BackupSettings {\r\n    return { ...this.settings.backup };\r\n  }\r\n\r\n  saveBackupSettings(backupSettings: BackupSettings): boolean {\r\n    try {\r\n      this.settings.backup = { ...backupSettings };\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres de sauvegarde:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getSecuritySettings(): SecuritySettings {\r\n    return { ...this.settings.security };\r\n  }\r\n\r\n  saveSecuritySettings(securitySettings: SecuritySettings): boolean {\r\n    try {\r\n      this.settings.security = { ...securitySettings };\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres de sécurité:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getAppearanceSettings(): AppearanceSettings {\r\n    return { ...this.settings.appearance };\r\n  }\r\n\r\n  saveAppearanceSettings(appearanceSettings: AppearanceSettings): boolean {\r\n    try {\r\n      this.settings.appearance = { ...appearanceSettings };\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres d\\'apparence:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getLibrarySettings(): LibrarySettings {\r\n    return { ...this.settings.library };\r\n  }\r\n\r\n  saveLibrarySettings(librarySettings: LibrarySettings): boolean {\r\n    try {\r\n      this.settings.library = { ...librarySettings };\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres de bibliothèque:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getNotificationSettings(): NotificationSettings {\r\n    return { ...this.settings.notifications };\r\n  }\r\n\r\n  saveNotificationSettings(notificationSettings: NotificationSettings): boolean {\r\n    try {\r\n      this.settings.notifications = { ...notificationSettings };\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la sauvegarde des paramètres de notification:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Méthodes utilitaires\r\n  resetToDefaults(): boolean {\r\n    try {\r\n      this.settings = { ...this.defaultSettings };\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la réinitialisation des paramètres:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  resetSectionToDefault(section: keyof ApplicationSettings): boolean {\r\n    try {\r\n      if (section in this.defaultSettings) {\r\n        (this.settings as any)[section] = { ...(this.defaultSettings[section] as any) };\r\n        this.saveSettings();\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la réinitialisation de la section ${section}:`, error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  exportSettings(): string {\r\n    try {\r\n      return JSON.stringify(this.settings, null, 2);\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'export des paramètres:', error);\r\n      return '';\r\n    }\r\n  }\r\n\r\n  importSettings(settingsJson: string): boolean {\r\n    try {\r\n      const importedSettings = JSON.parse(settingsJson);\r\n      this.settings = this.mergeSettings(this.defaultSettings, importedSettings);\r\n      this.validateAndMigrateSettings();\r\n      this.saveSettings();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'import des paramètres:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  validateSettings(): { isValid: boolean; errors: string[] } {\r\n    const errors: string[] = [];\r\n\r\n    // Validation de l'établissement\r\n    if (!this.settings.institution.name.trim()) {\r\n      errors.push('Le nom de l\\'établissement est requis');\r\n    }\r\n\r\n    // Validation de la sécurité\r\n    if (this.settings.security.sessionTimeout < 5 || this.settings.security.sessionTimeout > 1440) {\r\n      errors.push('Le délai d\\'expiration de session doit être entre 5 et 1440 minutes');\r\n    }\r\n\r\n    if (this.settings.security.passwordPolicy.minLength < 4 || this.settings.security.passwordPolicy.minLength > 50) {\r\n      errors.push('La longueur minimale du mot de passe doit être entre 4 et 50 caractères');\r\n    }\r\n\r\n    // Validation de la bibliothèque\r\n    if (this.settings.library.defaultLoanPeriod < 1 || this.settings.library.defaultLoanPeriod > 365) {\r\n      errors.push('La période d\\'emprunt par défaut doit être entre 1 et 365 jours');\r\n    }\r\n\r\n    if (this.settings.library.maxBooksPerUser < 1 || this.settings.library.maxBooksPerUser > 100) {\r\n      errors.push('Le nombre maximum de livres par utilisateur doit être entre 1 et 100');\r\n    }\r\n\r\n    // Validation des sauvegardes\r\n    if (this.settings.backup.keepBackups < 1 || this.settings.backup.keepBackups > 100) {\r\n      errors.push('Le nombre de sauvegardes à conserver doit être entre 1 et 100');\r\n    }\r\n\r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }\r\n\r\n  getSettingsInfo(): {\r\n    filePath: string;\r\n    fileSize: number;\r\n    lastModified: string;\r\n    version: string;\r\n  } {\r\n    try {\r\n      const stats = fs.existsSync(this.settingsFilePath) \r\n        ? fs.statSync(this.settingsFilePath) \r\n        : null;\r\n\r\n      return {\r\n        filePath: this.settingsFilePath,\r\n        fileSize: stats ? stats.size : 0,\r\n        lastModified: stats ? stats.mtime.toISOString() : '',\r\n        version: this.settings.version\r\n      };\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des informations de paramètres:', error);\r\n      return {\r\n        filePath: this.settingsFilePath,\r\n        fileSize: 0,\r\n        lastModified: '',\r\n        version: this.settings.version\r\n      };\r\n    }\r\n  }\r\n\r\n  // Méthodes de compatibilité pour l'ancien système\r\n  async setTheme(theme: 'light' | 'dark' | 'auto'): Promise<void> {\r\n    this.settings.appearance.theme = theme;\r\n    this.saveSettings();\r\n  }\r\n\r\n  async getTheme(): Promise<string> {\r\n    return this.settings.appearance.theme;\r\n  }\r\n}","// src/services/SupabaseService.ts\r\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\r\nimport { Book, Author, Category, Stats, Borrower, BorrowHistory, HistoryFilter, Document } from '../preload';\r\nimport { configService } from './ConfigService';\r\nimport { logger } from './LoggerService';\r\n\r\nexport interface Institution {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  address: string;\r\n  city: string;\r\n  country: string;\r\n  phone: string;\r\n  email: string;\r\n  website: string;\r\n  logo: string;\r\n  description: string;\r\n  type: 'school' | 'university' | 'library' | 'other';\r\n  director?: string;\r\n  capacity?: number;\r\n  established_year?: string;\r\n  status: 'active' | 'inactive' | 'suspended';\r\n  subscription_plan: 'basic' | 'premium' | 'enterprise';\r\n  max_books: number;\r\n  max_users: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface User {\r\n  id: string;\r\n  email: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  role: 'super_admin' | 'admin' | 'librarian' | 'user';\r\n  institution_id?: string;\r\n  avatar_url?: string;\r\n  phone?: string;\r\n  is_active: boolean;\r\n  last_login?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface DatabaseBook extends Omit<Book, 'id'> {\r\n  id: string;\r\n  institution_id: string;\r\n  created_by: string;\r\n  updated_by?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface DatabaseBorrower extends Omit<Borrower, 'id'> {\r\n  id: string;\r\n  institution_id: string;\r\n  created_by: string;\r\n  updated_by?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface DatabaseBorrowHistory extends Omit<BorrowHistory, 'id' | 'book' | 'borrower'> {\r\n  id: string;\r\n  institution_id: string;\r\n  book_id: string;\r\n  borrower_id: string;\r\n  created_by: string;\r\n  updated_by?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\n// Service Supabase pour la gestion de la bibliothèque\r\nexport class SupabaseService {\r\n  private supabase!: SupabaseClient; // Sera initialisé dans initializeSupabase\r\n  private currentUser: User | null = null;\r\n  private currentInstitution: Institution | null = null;\r\n\r\n  constructor() {\r\n    this.initializeSupabase();\r\n  }\r\n\r\n  private async initializeSupabase() {\r\n    try {\r\n      // Vérifier que la configuration est initialisée\r\n      if (!configService.hasSupabaseConfig()) {\r\n        logger.error('Configuration Supabase manquante', 'SupabaseService');\r\n        throw new Error('Configuration Supabase non disponible');\r\n      }\r\n\r\n      const supabaseConfig = configService.get('supabase');\r\n      \r\n      // Validation des clés\r\n      if (!supabaseConfig.url.startsWith('https://')) {\r\n        throw new Error('URL Supabase invalide');\r\n      }\r\n\r\n      if (supabaseConfig.key.length < 100) {\r\n        logger.warn('Clé Supabase suspicieusement courte', 'SupabaseService');\r\n      }\r\n\r\n      this.supabase = createClient(supabaseConfig.url, supabaseConfig.key, {\r\n        auth: {\r\n          persistSession: true,\r\n          detectSessionInUrl: false\r\n        }\r\n      });\r\n\r\n      logger.info('Supabase initialisé avec succès', 'SupabaseService');\r\n      await this.initializeAuth();\r\n      \r\n    } catch (error) {\r\n      logger.error('Erreur lors de l\\'initialisation de Supabase', 'SupabaseService', error as Error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private async initializeAuth() {\r\n    try {\r\n      const { data: { session }, error } = await this.supabase.auth.getSession();\r\n      \r\n      if (error) {\r\n        logger.error('Erreur lors de la récupération de la session', 'SupabaseService', error as Error);\r\n        return;\r\n      }\r\n\r\n      if (session?.user) {\r\n        logger.info(`Session utilisateur trouvée: ${session.user.email}`, 'SupabaseService');\r\n        await this.loadUserProfile(session.user.id);\r\n      } else {\r\n        logger.debug('Aucune session utilisateur active', 'SupabaseService');\r\n      }\r\n    } catch (error) {\r\n      logger.error('Erreur lors de l\\'initialisation de l\\'authentification', 'SupabaseService', error as Error);\r\n    }\r\n  }\r\n\r\n  // Authentication\r\n  async signUp(email: string, password: string, userData: {\r\n    firstName: string;\r\n    lastName: string;\r\n    institutionCode?: string;\r\n    role?: 'admin' | 'librarian' | 'user';\r\n  }): Promise<{ success: boolean; user?: User; error?: string }> {\r\n    try {\r\n      const { data, error } = await this.supabase.auth.signUp({\r\n        email,\r\n        password,\r\n        options: {\r\n          data: {\r\n            first_name: userData.firstName,\r\n            last_name: userData.lastName,\r\n            role: userData.role || 'user'\r\n          }\r\n        }\r\n      });\r\n\r\n      if (error) throw error;\r\n\r\n      if (data.user) {\r\n        // Si un code d'établissement est fourni, associer l'utilisateur\r\n        if (userData.institutionCode) {\r\n          const institution = await this.getInstitutionByCode(userData.institutionCode);\r\n          if (!institution) {\r\n            throw new Error('Code d\\'établissement invalide');\r\n          }\r\n        }\r\n\r\n        // Créer le profil utilisateur\r\n        const userProfile = await this.createUserProfile(data.user.id, {\r\n          email: data.user.email!,\r\n          first_name: userData.firstName,\r\n          last_name: userData.lastName,\r\n          role: userData.role || 'user',\r\n          institution_id: userData.institutionCode ? (await this.getInstitutionByCode(userData.institutionCode))?.id : undefined,\r\n          is_active: true\r\n        });\r\n\r\n        return { success: true, user: userProfile };\r\n      }\r\n\r\n      return { success: false, error: 'Erreur lors de la création du compte' };\r\n    } catch (error: any) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  }\r\n\r\n  async signIn(email: string, password: string): Promise<{ success: boolean; user?: User; institution?: Institution; error?: string }> {\r\n    try {\r\n      const { data, error } = await this.supabase.auth.signInWithPassword({\r\n        email,\r\n        password\r\n      });\r\n\r\n      if (error) throw error;\r\n\r\n      if (data.user) {\r\n        const userProfile = await this.loadUserProfile(data.user.id);\r\n        if (userProfile && userProfile.institution_id) {\r\n          this.currentInstitution = await this.getInstitution(userProfile.institution_id);\r\n        }\r\n\r\n        return { \r\n          success: true, \r\n          user: userProfile!, \r\n          institution: this.currentInstitution || undefined \r\n        };\r\n      }\r\n\r\n      return { success: false, error: 'Erreur de connexion' };\r\n    } catch (error: any) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  }\r\n\r\n  async signOut(): Promise<boolean> {\r\n    try {\r\n      const { error } = await this.supabase.auth.signOut();\r\n      if (error) throw error;\r\n      \r\n      this.currentUser = null;\r\n      this.currentInstitution = null;\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la déconnexion:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Institution Management\r\n  async createInstitution(institutionData: Omit<Institution, 'id' | 'code' | 'created_at' | 'updated_at'>): Promise<{ institution: Institution; code: string }> {\r\n    const code = this.generateInstitutionCode();\r\n    \r\n    const { data, error } = await this.supabase\r\n      .from('institutions')\r\n      .insert({\r\n        ...institutionData,\r\n        code,\r\n        status: 'active',\r\n        subscription_plan: 'basic',\r\n        max_books: 1000,\r\n        max_users: 10\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (error) throw error;\r\n\r\n    // Associer l'utilisateur actuel comme admin de cette institution\r\n    if (this.currentUser) {\r\n      await this.supabase\r\n        .from('users')\r\n        .update({\r\n          institution_id: data.id,\r\n          role: 'admin'\r\n        })\r\n        .eq('id', this.currentUser.id);\r\n    }\r\n\r\n    return { institution: data, code };\r\n  }\r\n\r\n  private generateInstitutionCode(): string {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n    let result = '';\r\n    for (let i = 0; i < 8; i++) {\r\n      result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async getInstitutionByCode(code: string): Promise<Institution | null> {\r\n    const { data, error } = await this.supabase\r\n      .from('institutions')\r\n      .select('*')\r\n      .eq('code', code.toUpperCase())\r\n      .eq('status', 'active')\r\n      .single();\r\n\r\n    if (error) return null;\r\n    return data;\r\n  }\r\n\r\n  async getInstitution(id: string): Promise<Institution | null> {\r\n    const { data, error } = await this.supabase\r\n      .from('institutions')\r\n      .select('*')\r\n      .eq('id', id)\r\n      .single();\r\n\r\n    if (error) return null;\r\n    return data;\r\n  }\r\n\r\n  // User Profile Management\r\n  private async createUserProfile(userId: string, profileData: Omit<User, 'id' | 'created_at' | 'updated_at'>): Promise<User> {\r\n    const { data, error } = await this.supabase\r\n      .from('users')\r\n      .insert({\r\n        id: userId,\r\n        ...profileData,\r\n        is_active: true\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  }\r\n\r\n  private async loadUserProfile(userId: string): Promise<User | null> {\r\n    const { data, error } = await this.supabase\r\n      .from('users')\r\n      .select('*')\r\n      .eq('id', userId)\r\n      .single();\r\n\r\n    if (error) return null;\r\n    \r\n    this.currentUser = data;\r\n    return data;\r\n  }\r\n\r\n  // Books Management - Méthodes simplifiées pour le test\r\n  async getBooks(): Promise<Book[]> {\r\n    // Pour l'instant, retourner un tableau vide pour éviter les erreurs de table manquante\r\n    console.log('getBooks appelé - retour de données de test');\r\n    return [];\r\n  }\r\n\r\n  async addBook(book: Omit<Book, 'id'>): Promise<number> {\r\n    console.log('addBook appelé avec:', book);\r\n    return 1; // ID fictif pour le test\r\n  }\r\n\r\n  async updateBook(book: Book): Promise<boolean> {\r\n    console.log('updateBook appelé avec:', book);\r\n    return true;\r\n  }\r\n\r\n  async deleteBook(id: number): Promise<boolean> {\r\n    console.log('deleteBook appelé avec ID:', id);\r\n    return true;\r\n  }\r\n\r\n  async searchBooks(query: string): Promise<Book[]> {\r\n    console.log('searchBooks appelé avec query:', query);\r\n    return [];\r\n  }\r\n\r\n  // Documents Management - Nouvelles méthodes pour le modèle Document\r\n  async getDocuments(): Promise<Document[]> {\r\n    console.log('getDocuments appelé - retour de données de test');\r\n    return [];\r\n  }\r\n\r\n  async addDocument(document: Omit<Document, 'id'>): Promise<number> {\r\n    console.log('addDocument appelé avec:', document);\r\n    return 1; // ID fictif pour le test\r\n  }\r\n\r\n  async updateDocument(document: Document): Promise<boolean> {\r\n    console.log('updateDocument appelé avec:', document);\r\n    return true;\r\n  }\r\n\r\n  async deleteDocument(id: number): Promise<boolean> {\r\n    console.log('deleteDocument appelé avec ID:', id);\r\n    return true;\r\n  }\r\n\r\n  async searchDocuments(query: string): Promise<Document[]> {\r\n    console.log('searchDocuments appelé avec query:', query);\r\n    return [];\r\n  }\r\n\r\n\r\n  // Borrowers Management - Méthodes simplifiées\r\n  async getBorrowers(): Promise<Borrower[]> {\r\n    console.log('getBorrowers appelé');\r\n    return [];\r\n  }\r\n\r\n  async addBorrower(borrower: Omit<Borrower, 'id'>): Promise<number> {\r\n    console.log('addBorrower appelé avec:', borrower);\r\n    return 1;\r\n  }\r\n\r\n  async updateBorrower(borrower: Borrower): Promise<boolean> {\r\n    console.log('updateBorrower appelé avec:', borrower);\r\n    return true;\r\n  }\r\n\r\n  async deleteBorrower(id: number): Promise<boolean> {\r\n    console.log('deleteBorrower appelé avec ID:', id);\r\n    return true;\r\n  }\r\n\r\n  async searchBorrowers(query: string): Promise<Borrower[]> {\r\n    console.log('searchBorrowers appelé avec query:', query);\r\n    return [];\r\n  }\r\n\r\n  // Borrow Management - Méthodes simplifiées\r\n  async borrowDocument(documentId: number, borrowerId: number, expectedReturnDate: string): Promise<number> {\r\n    console.log('borrowDocument appelé avec:', { documentId, borrowerId, expectedReturnDate });\r\n    return 1;\r\n  }\r\n\r\n  // Compatibility method\r\n  async borrowBook(documentId: number, borrowerId: number, expectedReturnDate: string): Promise<number> {\r\n    return this.borrowDocument(documentId, borrowerId, expectedReturnDate);\r\n  }\r\n\r\n  async returnDocument(borrowHistoryId: number, notes?: string): Promise<boolean> {\r\n    console.log('returnDocument appelé avec:', { borrowHistoryId, notes });\r\n    return true;\r\n  }\r\n\r\n  // Compatibility method\r\n  async returnBook(borrowHistoryId: number, notes?: string): Promise<boolean> {\r\n    return this.returnDocument(borrowHistoryId, notes);\r\n  }\r\n\r\n  async getBorrowedDocuments(): Promise<BorrowHistory[]> {\r\n    console.log('getBorrowedDocuments appelé');\r\n    return [];\r\n  }\r\n\r\n  // Compatibility method\r\n  async getBorrowedBooks(): Promise<BorrowHistory[]> {\r\n    return this.getBorrowedDocuments();\r\n  }\r\n\r\n  async getBorrowHistory(filter?: HistoryFilter): Promise<BorrowHistory[]> {\r\n    console.log('getBorrowHistory appelé avec filter:', filter);\r\n    return [];\r\n  }\r\n\r\n  // Authors and Categories - Méthodes simplifiées\r\n  async getAuthors(): Promise<Author[]> {\r\n    console.log('getAuthors appelé');\r\n    return [];\r\n  }\r\n\r\n  async addAuthor(author: Omit<Author, 'id'>): Promise<number> {\r\n    console.log('addAuthor appelé avec:', author);\r\n    return 1;\r\n  }\r\n\r\n  async getCategories(): Promise<Category[]> {\r\n    console.log('getCategories appelé');\r\n    return [];\r\n  }\r\n\r\n  async addCategory(category: Omit<Category, 'id'>): Promise<number> {\r\n    console.log('addCategory appelé avec:', category);\r\n    return 1;\r\n  }\r\n\r\n  // Statistics - Méthodes simplifiées\r\n  async getStats(): Promise<Stats> {\r\n    console.log('getStats appelé');\r\n    return {\r\n      totalDocuments: 0,\r\n      borrowedDocuments: 0,\r\n      availableDocuments: 0,\r\n      totalAuthors: 0,\r\n      totalCategories: 0,\r\n      totalBorrowers: 0,\r\n      totalStudents: 0,\r\n      totalStaff: 0,\r\n      overdueDocuments: 0\r\n    };\r\n  }\r\n\r\n  // Getters\r\n  getCurrentUser(): User | null {\r\n    return this.currentUser;\r\n  }\r\n\r\n  getCurrentInstitution(): Institution | null {\r\n    return this.currentInstitution;\r\n  }\r\n\r\n  // Utility methods\r\n  isAuthenticated(): boolean {\r\n    return this.currentUser !== null;\r\n  }\r\n\r\n  async switchInstitution(institutionCode: string): Promise<boolean> {\r\n    try {\r\n      const institution = await this.getInstitutionByCode(institutionCode);\r\n      if (!institution) return false;\r\n\r\n      // Vérifier que l'utilisateur a accès à cette institution\r\n      if (this.currentUser && this.currentUser.institution_id !== institution.id) {\r\n        // Seuls les super_admin peuvent changer d'institution\r\n        if (this.currentUser.role !== 'super_admin') {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      this.currentInstitution = institution;\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Erreur lors du changement d\\'institution:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async clearAllData(): Promise<boolean> {\r\n    console.log('clearAllData appelé');\r\n    return true;\r\n  }\r\n\r\n  // Méthodes CRUD supplémentaires pour la compatibilité\r\n  async createDocument(document: Omit<Document, 'id'>): Promise<Document | null> {\r\n    console.log('createDocument appelé avec:', document);\r\n    return null;\r\n  }\r\n\r\n\r\n  async createAuthor(author: Omit<Author, 'id'>): Promise<Author | null> {\r\n    console.log('createAuthor appelé avec:', author);\r\n    return null;\r\n  }\r\n\r\n  async updateAuthor(author: Author): Promise<boolean> {\r\n    console.log('updateAuthor appelé avec:', author);\r\n    return true;\r\n  }\r\n\r\n  async deleteAuthor(id: string): Promise<boolean> {\r\n    console.log('deleteAuthor appelé avec ID:', id);\r\n    return true;\r\n  }\r\n\r\n  async createCategory(category: Omit<Category, 'id'>): Promise<Category | null> {\r\n    console.log('createCategory appelé avec:', category);\r\n    return null;\r\n  }\r\n\r\n  async updateCategory(category: Category): Promise<boolean> {\r\n    console.log('updateCategory appelé avec:', category);\r\n    return true;\r\n  }\r\n\r\n  async deleteCategory(id: string): Promise<boolean> {\r\n    console.log('deleteCategory appelé avec ID:', id);\r\n    return true;\r\n  }\r\n\r\n  async createBorrower(borrower: Omit<Borrower, 'id'>): Promise<Borrower | null> {\r\n    console.log('createBorrower appelé avec:', borrower);\r\n    return null;\r\n  }\r\n\r\n  async createBorrowHistory(borrowHistory: Omit<BorrowHistory, 'id'>): Promise<BorrowHistory | null> {\r\n    console.log('createBorrowHistory appelé avec:', borrowHistory);\r\n    return null;\r\n  }\r\n\r\n  async updateBorrowHistory(borrowHistory: BorrowHistory): Promise<boolean> {\r\n    console.log('updateBorrowHistory appelé avec:', borrowHistory);\r\n    return true;\r\n  }\r\n\r\n  async deleteBorrowHistory(id: string): Promise<boolean> {\r\n    console.log('deleteBorrowHistory appelé avec ID:', id);\r\n    return true;\r\n  }\r\n\r\n\r\n}\r\n","import { app } from 'electron';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport { SupabaseService } from './SupabaseService';\r\nimport { DatabaseService } from './DatabaseService';\r\nimport { \r\n  SyncStatus, \r\n  SyncError, \r\n  SyncOperation, \r\n  NetworkStatus, \r\n  ConflictResolution,\r\n  Document,\r\n  Author,\r\n  Category,\r\n  Borrower,\r\n  BorrowHistory\r\n} from '../preload';\r\n\r\nexport class SyncService {\r\n  private supabaseService: SupabaseService;\r\n  private databaseService: DatabaseService;\r\n  private syncStatus: SyncStatus;\r\n  private networkStatus: NetworkStatus;\r\n  private syncQueue: SyncOperation[] = [];\r\n  private isInitialized = false;\r\n  private syncInterval: NodeJS.Timeout | null = null;\r\n  private networkCheckInterval: NodeJS.Timeout | null = null;\r\n  private retryTimeout: NodeJS.Timeout | null = null;\r\n\r\n  constructor(databaseService: DatabaseService) {\r\n    this.databaseService = databaseService;\r\n    this.supabaseService = new SupabaseService();\r\n    \r\n    this.syncStatus = {\r\n      isOnline: false,\r\n      lastSync: null,\r\n      pendingOperations: 0,\r\n      syncInProgress: false,\r\n      errors: []\r\n    };\r\n\r\n    this.networkStatus = {\r\n      isOnline: false,\r\n      connectionType: 'none',\r\n      lastChecked: new Date().toISOString()\r\n    };\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    if (this.isInitialized) return;\r\n\r\n    // Charger les opérations en attente depuis la base de données\r\n    await this.loadPendingOperations();\r\n    \r\n    // Démarrer la surveillance réseau\r\n    this.startNetworkMonitoring();\r\n    \r\n    // Démarrer la synchronisation automatique\r\n    this.startAutoSync();\r\n    \r\n    this.isInitialized = true;\r\n    console.log('SyncService initialisé');\r\n  }\r\n\r\n  private async loadPendingOperations(): Promise<void> {\r\n    try {\r\n      // Charger les opérations depuis une table sync_queue dans la base\r\n      const operations = await this.databaseService.getSyncQueue();\r\n      this.syncQueue = operations;\r\n      this.syncStatus.pendingOperations = operations.length;\r\n    } catch (error) {\r\n      console.error('Erreur lors du chargement des opérations en attente:', error);\r\n    }\r\n  }\r\n\r\n  private startNetworkMonitoring(): void {\r\n    // Vérifier la connectivité toutes les 30 secondes\r\n    this.networkCheckInterval = setInterval(async () => {\r\n      await this.checkNetworkStatus();\r\n    }, 30000);\r\n\r\n    // Vérification initiale\r\n    this.checkNetworkStatus();\r\n  }\r\n\r\n  private async checkNetworkStatus(): Promise<void> {\r\n    try {\r\n      // Test de connectivité vers Supabase\r\n      const isOnline = await this.testConnectivity();\r\n      const wasOnline = this.networkStatus.isOnline;\r\n      \r\n      this.networkStatus = {\r\n        isOnline,\r\n        connectionType: isOnline ? 'wifi' : 'none', // Simplification\r\n        lastChecked: new Date().toISOString()\r\n      };\r\n\r\n      this.syncStatus.isOnline = isOnline;\r\n\r\n      // Si on vient de se reconnecter, démarrer la sync\r\n      if (isOnline && !wasOnline && !this.syncStatus.syncInProgress) {\r\n        console.log('Connexion rétablie - démarrage de la synchronisation');\r\n        this.startSync();\r\n      }\r\n      if (isOnline && !wasOnline && this.syncQueue.length > 0) {\r\n        console.log('Connexion rétablie, démarrage de la synchronisation...');\r\n        await this.processSyncQueue();\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de la vérification réseau:', error);\r\n      this.networkStatus.isOnline = false;\r\n      this.syncStatus.isOnline = false;\r\n    }\r\n  }\r\n\r\n  private async testConnectivity(): Promise<boolean> {\r\n    try {\r\n      // Test simple de ping vers Supabase\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 5000);\r\n      \r\n      const response = await fetch('https://google.com', {\r\n        method: 'HEAD',\r\n        signal: controller.signal\r\n      });\r\n      \r\n      clearTimeout(timeoutId);\r\n      return response.ok;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private startAutoSync(): void {\r\n    // Synchronisation automatique toutes les 5 minutes si en ligne\r\n    this.syncInterval = setInterval(async () => {\r\n      if (this.networkStatus.isOnline && !this.syncStatus.syncInProgress) {\r\n        await this.processSyncQueue();\r\n      }\r\n    }, 5 * 60 * 1000); // 5 minutes\r\n  }\r\n\r\n  async addOperation(operation: Omit<SyncOperation, 'id' | 'timestamp' | 'retryCount'>): Promise<void> {\r\n    const syncOp: SyncOperation = {\r\n      ...operation,\r\n      id: this.generateOperationId(),\r\n      timestamp: new Date().toISOString(),\r\n      retryCount: 0\r\n    };\r\n\r\n    this.syncQueue.push(syncOp);\r\n    this.syncStatus.pendingOperations = this.syncQueue.length;\r\n\r\n    // Sauvegarder dans la base\r\n    await this.databaseService.addSyncOperation(syncOp);\r\n\r\n    // Si en ligne, essayer de synchroniser immédiatement\r\n    if (this.networkStatus.isOnline && !this.syncStatus.syncInProgress) {\r\n      await this.processSyncQueue();\r\n    }\r\n  }\r\n\r\n  private async processSyncQueue(): Promise<void> {\r\n    if (this.syncStatus.syncInProgress || !this.networkStatus.isOnline) {\r\n      return;\r\n    }\r\n\r\n    this.syncStatus.syncInProgress = true;\r\n    console.log(`Démarrage de la synchronisation: ${this.syncQueue.length} opérations en attente`);\r\n\r\n    const processedOperations: string[] = [];\r\n    const failedOperations: SyncOperation[] = [];\r\n\r\n    for (const operation of this.syncQueue) {\r\n      try {\r\n        const success = await this.processOperation(operation);\r\n        if (success) {\r\n          processedOperations.push(operation.id);\r\n          // Supprimer de la base\r\n          await this.databaseService.removeSyncOperation(operation.id);\r\n        } else {\r\n          operation.retryCount++;\r\n          if (operation.retryCount >= operation.maxRetries) {\r\n            // Ajouter à la liste des erreurs\r\n            this.addSyncError(operation, 'Nombre maximum de tentatives atteint');\r\n            processedOperations.push(operation.id);\r\n            await this.databaseService.removeSyncOperation(operation.id);\r\n          } else {\r\n            failedOperations.push(operation);\r\n            await this.databaseService.updateSyncOperation(operation);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(`Erreur lors du traitement de l'opération ${operation.id}:`, error);\r\n        operation.retryCount++;\r\n        failedOperations.push(operation);\r\n        this.addSyncError(operation, error instanceof Error ? error.message : String(error));\r\n        await this.databaseService.updateSyncOperation(operation);\r\n      }\r\n    }\r\n\r\n    // Mettre à jour la queue\r\n    this.syncQueue = this.syncQueue.filter(op => !processedOperations.includes(op.id));\r\n    this.syncStatus.pendingOperations = this.syncQueue.length;\r\n    this.syncStatus.lastSync = new Date().toISOString();\r\n    this.syncStatus.syncInProgress = false;\r\n\r\n    console.log(`Synchronisation terminée. Réussies: ${processedOperations.length}, Échouées: ${failedOperations.length}`);\r\n  }\r\n\r\n  private async processOperation(operation: SyncOperation): Promise<boolean> {\r\n    try {\r\n      switch (operation.type) {\r\n        case 'document':\r\n          return await this.syncDocument(operation);\r\n        case 'author':\r\n          return await this.syncAuthor(operation);\r\n        case 'category':\r\n          return await this.syncCategory(operation);\r\n        case 'borrower':\r\n          return await this.syncBorrower(operation);\r\n        case 'history':\r\n          return await this.syncBorrowHistory(operation);\r\n        default:\r\n          console.error(`Type d'opération inconnu: ${operation.type}`);\r\n          return false;\r\n      }\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la synchronisation de ${operation.type}:`, error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private async syncDocument(operation: SyncOperation): Promise<boolean> {\r\n    const { operation: op, data } = operation;\r\n    \r\n    switch (op) {\r\n      case 'create':\r\n        const createdDoc = await this.supabaseService.createDocument(data);\r\n        if (createdDoc) {\r\n          // Mettre à jour l'ID distant local\r\n          await this.databaseService.updateDocumentRemoteId(data.localId, createdDoc.id?.toString() || '');\r\n          return true;\r\n        }\r\n        return false;\r\n        \r\n      case 'update':\r\n        return await this.supabaseService.updateDocument(data);\r\n        \r\n      case 'delete':\r\n        return await this.supabaseService.deleteDocument(data.remoteId);\r\n        \r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  private async syncAuthor(operation: SyncOperation): Promise<boolean> {\r\n    // Implémentation similaire pour les auteurs\r\n    const { operation: op, data } = operation;\r\n    \r\n    switch (op) {\r\n      case 'create':\r\n        const createdAuthor = await this.supabaseService.createAuthor(data);\r\n        if (createdAuthor) {\r\n          await this.databaseService.updateAuthorRemoteId(data.localId, createdAuthor.id?.toString() || '');\r\n          return true;\r\n        }\r\n        return false;\r\n        \r\n      case 'update':\r\n        return await this.supabaseService.updateAuthor(data);\r\n        \r\n      case 'delete':\r\n        return await this.supabaseService.deleteAuthor(data.remoteId);\r\n        \r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  private async syncCategory(operation: SyncOperation): Promise<boolean> {\r\n    // Implémentation similaire pour les catégories\r\n    const { operation: op, data } = operation;\r\n    \r\n    switch (op) {\r\n      case 'create':\r\n        const createdCategory = await this.supabaseService.createCategory(data);\r\n        if (createdCategory) {\r\n          await this.databaseService.updateCategoryRemoteId(data.localId, createdCategory.id?.toString() || '');\r\n          return true;\r\n        }\r\n        return false;\r\n        \r\n      case 'update':\r\n        return await this.supabaseService.updateCategory(data);\r\n        \r\n      case 'delete':\r\n        return await this.supabaseService.deleteCategory(data.remoteId);\r\n        \r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  private async syncBorrower(operation: SyncOperation): Promise<boolean> {\r\n    // Implémentation similaire pour les emprunteurs\r\n    const { operation: op, data } = operation;\r\n    \r\n    switch (op) {\r\n      case 'create':\r\n        const createdBorrower = await this.supabaseService.createBorrower(data);\r\n        if (createdBorrower) {\r\n          await this.databaseService.updateBorrowerRemoteId(data.localId, createdBorrower.id?.toString() || '');\r\n          return true;\r\n        }\r\n        return false;\r\n        \r\n      case 'update':\r\n        return await this.supabaseService.updateBorrower(data);\r\n        \r\n      case 'delete':\r\n        return await this.supabaseService.deleteBorrower(data.remoteId);\r\n        \r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  private async syncBorrowHistory(operation: SyncOperation): Promise<boolean> {\r\n    // Implémentation similaire pour l'historique\r\n    const { operation: op, data } = operation;\r\n    \r\n    switch (op) {\r\n      case 'create':\r\n        const createdHistory = await this.supabaseService.createBorrowHistory(data);\r\n        if (createdHistory) {\r\n          await this.databaseService.updateBorrowHistoryRemoteId(data.localId, createdHistory.id?.toString() || '');\r\n          return true;\r\n        }\r\n        return false;\r\n        \r\n      case 'update':\r\n        return await this.supabaseService.updateBorrowHistory(data);\r\n        \r\n      case 'delete':\r\n        return await this.supabaseService.deleteBorrowHistory(data.remoteId);\r\n        \r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  private addSyncError(operation: SyncOperation, errorMessage: string): void {\r\n    const error: SyncError = {\r\n      id: this.generateOperationId(),\r\n      type: operation.type,\r\n      operation: operation.operation,\r\n      entityId: operation.data.localId || operation.data.id,\r\n      error: errorMessage,\r\n      timestamp: new Date().toISOString(),\r\n      retryCount: operation.retryCount\r\n    };\r\n\r\n    this.syncStatus.errors.push(error);\r\n    \r\n    // Limiter le nombre d'erreurs stockées\r\n    if (this.syncStatus.errors.length > 100) {\r\n      this.syncStatus.errors = this.syncStatus.errors.slice(-100);\r\n    }\r\n  }\r\n\r\n  async getStatus(): Promise<SyncStatus> {\r\n    await this.loadPendingOperations();\r\n    return {\r\n      ...this.syncStatus,\r\n      pendingOperations: this.syncQueue.length\r\n    };\r\n  }\r\n\r\n  async startSync(): Promise<void> {\r\n    if (this.networkStatus.isOnline && !this.syncStatus.syncInProgress) {\r\n      await this.processSyncQueue();\r\n    }\r\n  }\r\n\r\n  async clearErrors(): Promise<void> {\r\n    this.syncStatus.errors = [];\r\n    // Optionnel: supprimer aussi de la base de données si nécessaire\r\n  }\r\n\r\n  async retryOperation(operationId: string): Promise<void> {\r\n    const operation = this.syncQueue.find(op => op.id === operationId);\r\n    if (operation) {\r\n      operation.retryCount = 0; // Reset les tentatives\r\n      if (this.networkStatus.isOnline && !this.syncStatus.syncInProgress) {\r\n        await this.processSyncQueue();\r\n      }\r\n    }\r\n  }\r\n\r\n  private generateOperationId(): string {\r\n    return `sync_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  // Méthodes publiques pour l'API\r\n  getSyncStatus(): SyncStatus {\r\n    return { ...this.syncStatus };\r\n  }\r\n\r\n  getNetworkStatus(): NetworkStatus {\r\n    return { ...this.networkStatus };\r\n  }\r\n\r\n  async startManualSync(): Promise<void> {\r\n    if (this.networkStatus.isOnline) {\r\n      await this.processSyncQueue();\r\n    } else {\r\n      throw new Error('Aucune connexion réseau disponible');\r\n    }\r\n  }\r\n\r\n  pauseSync(): void {\r\n    if (this.syncInterval) {\r\n      clearInterval(this.syncInterval);\r\n      this.syncInterval = null;\r\n    }\r\n  }\r\n\r\n  resumeSync(): void {\r\n    if (!this.syncInterval) {\r\n      this.startAutoSync();\r\n    }\r\n  }\r\n\r\n  async retrySyncOperation(operationId: string): Promise<boolean> {\r\n    const operation = this.syncQueue.find(op => op.id === operationId);\r\n    if (!operation) return false;\r\n\r\n    operation.retryCount = 0; // Reset retry count\r\n    if (this.networkStatus.isOnline) {\r\n      const success = await this.processOperation(operation);\r\n      if (success) {\r\n        this.syncQueue = this.syncQueue.filter(op => op.id !== operationId);\r\n        this.syncStatus.pendingOperations = this.syncQueue.length;\r\n        await this.databaseService.removeSyncOperation(operationId);\r\n      }\r\n      return success;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getSyncErrors(): SyncError[] {\r\n    return [...this.syncStatus.errors];\r\n  }\r\n\r\n  clearSyncErrors(): void {\r\n    this.syncStatus.errors = [];\r\n  }\r\n\r\n  async resolveConflict(resolution: ConflictResolution): Promise<boolean> {\r\n    try {\r\n      // Implémentation de la résolution de conflits\r\n      // Cette méthode sera appelée quand l'utilisateur choisit comment résoudre un conflit\r\n      \r\n      switch (resolution.resolution) {\r\n        case 'use_local':\r\n          // Utiliser la version locale et forcer la sync\r\n          return await this.forceUpdateRemote(resolution);\r\n          \r\n        case 'use_remote':\r\n          // Utiliser la version distante et mettre à jour local\r\n          return await this.forceUpdateLocal(resolution);\r\n          \r\n        case 'merge':\r\n          // Fusionner les données (logique spécifique selon le type)\r\n          return await this.mergeVersions(resolution);\r\n          \r\n        case 'manual':\r\n          // L'utilisateur a fourni une version résolue manuellement\r\n          return await this.applyManualResolution(resolution);\r\n          \r\n        default:\r\n          return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de la résolution de conflit:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private async forceUpdateRemote(resolution: ConflictResolution): Promise<boolean> {\r\n    // Implémenter la mise à jour forcée du distant\r\n    return true;\r\n  }\r\n\r\n  private async forceUpdateLocal(resolution: ConflictResolution): Promise<boolean> {\r\n    // Implémenter la mise à jour forcée du local\r\n    return true;\r\n  }\r\n\r\n  private async mergeVersions(resolution: ConflictResolution): Promise<boolean> {\r\n    // Implémenter la fusion automatique\r\n    return true;\r\n  }\r\n\r\n  private async applyManualResolution(resolution: ConflictResolution): Promise<boolean> {\r\n    // Appliquer la résolution manuelle fournie par l'utilisateur\r\n    return true;\r\n  }\r\n\r\n  async shutdown(): Promise<void> {\r\n    if (this.syncInterval) {\r\n      clearInterval(this.syncInterval);\r\n    }\r\n    if (this.networkCheckInterval) {\r\n      clearInterval(this.networkCheckInterval);\r\n    }\r\n    if (this.retryTimeout) {\r\n      clearTimeout(this.retryTimeout);\r\n    }\r\n    \r\n    console.log('SyncService arrêté');\r\n  }\r\n}","// Service de validation sécurisé\r\nimport { configService } from './ConfigService';\r\nimport { logger } from './LoggerService';\r\n\r\nexport interface ValidationResult {\r\n  isValid: boolean;\r\n  errors: string[];\r\n  warnings?: string[];\r\n}\r\n\r\nexport interface PasswordValidationOptions {\r\n  allowCommonPatterns?: boolean;\r\n  checkDictionary?: boolean;\r\n}\r\n\r\nclass ValidationService {\r\n  \r\n  /**\r\n   * Valide un mot de passe selon la politique de sécurité\r\n   */\r\n  validatePassword(password: string, options: PasswordValidationOptions = {}): ValidationResult {\r\n    const errors: string[] = [];\r\n    const warnings: string[] = [];\r\n    const policy = configService.getPasswordPolicy();\r\n\r\n    // Longueur minimale\r\n    if (password.length < policy.minLength) {\r\n      errors.push(`Le mot de passe doit contenir au moins ${policy.minLength} caractères`);\r\n    }\r\n\r\n    // Vérification des caractères majuscules\r\n    if (policy.requireUppercase && !/[A-Z]/.test(password)) {\r\n      errors.push('Le mot de passe doit contenir au moins une lettre majuscule');\r\n    }\r\n\r\n    // Vérification des caractères minuscules\r\n    if (policy.requireLowercase && !/[a-z]/.test(password)) {\r\n      errors.push('Le mot de passe doit contenir au moins une lettre minuscule');\r\n    }\r\n\r\n    // Vérification des chiffres\r\n    if (policy.requireNumbers && !/\\d/.test(password)) {\r\n      errors.push('Le mot de passe doit contenir au moins un chiffre');\r\n    }\r\n\r\n    // Vérification des caractères spéciaux\r\n    if (policy.requireSpecialChars && !/[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(password)) {\r\n      errors.push('Le mot de passe doit contenir au moins un caractère spécial');\r\n    }\r\n\r\n    // Vérifications de sécurité avancées\r\n    if (!options.allowCommonPatterns) {\r\n      // Vérifier les patterns communs\r\n      if (this.containsCommonPatterns(password)) {\r\n        errors.push('Le mot de passe contient des patterns trop prévisibles');\r\n      }\r\n\r\n      // Vérifier les mots de passe couramment utilisés\r\n      if (this.isCommonPassword(password)) {\r\n        errors.push('Ce mot de passe est trop commun et facilement devinable');\r\n      }\r\n    }\r\n\r\n    // Vérifier la répétition de caractères\r\n    if (this.hasExcessiveRepetition(password)) {\r\n      warnings.push('Évitez les répétitions excessives de caractères');\r\n    }\r\n\r\n    // Vérifier les séquences\r\n    if (this.hasSequentialChars(password)) {\r\n      warnings.push('Évitez les séquences de caractères (123, abc, etc.)');\r\n    }\r\n\r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors,\r\n      warnings\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Valide une adresse email\r\n   */\r\n  validateEmail(email: string): ValidationResult {\r\n    const errors: string[] = [];\r\n\r\n    // Pattern RFC 5322 simplifié mais robuste\r\n    const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\r\n\r\n    if (!email) {\r\n      errors.push('L\\'adresse email est requise');\r\n    } else if (!emailRegex.test(email)) {\r\n      errors.push('Format d\\'adresse email invalide');\r\n    } else {\r\n      // Vérifications supplémentaires\r\n      if (email.length > 254) {\r\n        errors.push('L\\'adresse email est trop longue');\r\n      }\r\n\r\n      // Vérifier les caractères suspects\r\n      if (email.includes('..') || email.startsWith('.') || email.endsWith('.')) {\r\n        errors.push('Format d\\'adresse email invalide');\r\n      }\r\n    }\r\n\r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Valide un nom d'utilisateur\r\n   */\r\n  validateUsername(username: string): ValidationResult {\r\n    const errors: string[] = [];\r\n\r\n    if (!username) {\r\n      errors.push('Le nom d\\'utilisateur est requis');\r\n    } else {\r\n      if (username.length < 3) {\r\n        errors.push('Le nom d\\'utilisateur doit contenir au moins 3 caractères');\r\n      }\r\n\r\n      if (username.length > 50) {\r\n        errors.push('Le nom d\\'utilisateur ne peut pas dépasser 50 caractères');\r\n      }\r\n\r\n      // Caractères autorisés : lettres, chiffres, tirets, underscores\r\n      if (!/^[a-zA-Z0-9_-]+$/.test(username)) {\r\n        errors.push('Le nom d\\'utilisateur ne peut contenir que des lettres, chiffres, tirets et underscores');\r\n      }\r\n\r\n      // Ne peut pas commencer ou finir par un tiret ou underscore\r\n      if (/^[-_]|[-_]$/.test(username)) {\r\n        errors.push('Le nom d\\'utilisateur ne peut pas commencer ou finir par un tiret ou underscore');\r\n      }\r\n    }\r\n\r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Valide les données d'un document\r\n   */\r\n  validateDocument(document: any): ValidationResult {\r\n    const errors: string[] = [];\r\n    const warnings: string[] = [];\r\n\r\n    // Champs requis\r\n    const requiredFields = ['titre', 'auteur', 'editeur', 'annee', 'cote'];\r\n    \r\n    for (const field of requiredFields) {\r\n      if (!document[field] || String(document[field]).trim() === '') {\r\n        errors.push(`Le champ \"${field}\" est requis`);\r\n      }\r\n    }\r\n\r\n    // Validation spécifique des champs\r\n    if (document.titre && document.titre.length > 500) {\r\n      errors.push('Le titre ne peut pas dépasser 500 caractères');\r\n    }\r\n\r\n    if (document.auteur && document.auteur.length > 200) {\r\n      errors.push('Le nom de l\\'auteur ne peut pas dépasser 200 caractères');\r\n    }\r\n\r\n    if (document.annee) {\r\n      const year = parseInt(document.annee);\r\n      const currentYear = new Date().getFullYear();\r\n      \r\n      if (isNaN(year) || year < 1000 || year > currentYear + 1) {\r\n        errors.push('L\\'année doit être une année valide');\r\n      }\r\n    }\r\n\r\n    // Validation de l'ISBN si présent\r\n    if (document.isbn && !this.validateISBN(document.isbn)) {\r\n      warnings.push('Le format ISBN semble incorrect');\r\n    }\r\n\r\n    // Validation de la cote (doit être unique)\r\n    if (document.cote && document.cote.length > 50) {\r\n      errors.push('La cote ne peut pas dépasser 50 caractères');\r\n    }\r\n\r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors,\r\n      warnings\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Valide un ISBN\r\n   */\r\n  private validateISBN(isbn: string): boolean {\r\n    // Nettoyer l'ISBN\r\n    const cleanISBN = isbn.replace(/[-\\s]/g, '');\r\n\r\n    // ISBN-10\r\n    if (cleanISBN.length === 10) {\r\n      return this.validateISBN10(cleanISBN);\r\n    }\r\n\r\n    // ISBN-13\r\n    if (cleanISBN.length === 13) {\r\n      return this.validateISBN13(cleanISBN);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valide un ISBN-10\r\n   */\r\n  private validateISBN10(isbn: string): boolean {\r\n    let sum = 0;\r\n    for (let i = 0; i < 9; i++) {\r\n      const digit = parseInt(isbn[i]);\r\n      if (isNaN(digit)) return false;\r\n      sum += digit * (10 - i);\r\n    }\r\n\r\n    const checkDigit = isbn[9];\r\n    const calculatedCheck = (11 - (sum % 11)) % 11;\r\n    \r\n    return (calculatedCheck === 10 ? 'X' : calculatedCheck.toString()) === checkDigit;\r\n  }\r\n\r\n  /**\r\n   * Valide un ISBN-13\r\n   */\r\n  private validateISBN13(isbn: string): boolean {\r\n    let sum = 0;\r\n    for (let i = 0; i < 12; i++) {\r\n      const digit = parseInt(isbn[i]);\r\n      if (isNaN(digit)) return false;\r\n      sum += digit * (i % 2 === 0 ? 1 : 3);\r\n    }\r\n\r\n    const checkDigit = parseInt(isbn[12]);\r\n    const calculatedCheck = (10 - (sum % 10)) % 10;\r\n    \r\n    return calculatedCheck === checkDigit;\r\n  }\r\n\r\n  /**\r\n   * Vérifie si le mot de passe contient des patterns communs\r\n   */\r\n  private containsCommonPatterns(password: string): boolean {\r\n    const commonPatterns = [\r\n      /password/i,\r\n      /123456/,\r\n      /qwerty/i,\r\n      /admin/i,\r\n      /letmein/i,\r\n      /welcome/i,\r\n      /monkey/i,\r\n      /dragon/i\r\n    ];\r\n\r\n    return commonPatterns.some(pattern => pattern.test(password));\r\n  }\r\n\r\n  /**\r\n   * Vérifie si c'est un mot de passe couramment utilisé\r\n   */\r\n  private isCommonPassword(password: string): boolean {\r\n    const commonPasswords = [\r\n      '123456', 'password', '123456789', '12345678', '12345',\r\n      '1234567', '1234567890', 'qwerty', 'abc123', 'password1',\r\n      'admin', 'letmein', 'welcome', '123123', 'Password',\r\n      'password123', '000000', '111111', '666666', '121212'\r\n    ];\r\n\r\n    return commonPasswords.includes(password.toLowerCase());\r\n  }\r\n\r\n  /**\r\n   * Vérifie la répétition excessive de caractères\r\n   */\r\n  private hasExcessiveRepetition(password: string): boolean {\r\n    // Plus de 2 caractères identiques consécutifs\r\n    return /(.)\\1{2,}/.test(password);\r\n  }\r\n\r\n  /**\r\n   * Vérifie les séquences de caractères\r\n   */\r\n  private hasSequentialChars(password: string): boolean {\r\n    const sequences = [\r\n      'abcdefghijklmnopqrstuvwxyz',\r\n      '0123456789',\r\n      'qwertyuiopasdfghjklzxcvbnm'\r\n    ];\r\n\r\n    const lowerPassword = password.toLowerCase();\r\n    \r\n    for (const sequence of sequences) {\r\n      for (let i = 0; i <= sequence.length - 3; i++) {\r\n        const seq = sequence.substring(i, i + 3);\r\n        const reverseSeq = seq.split('').reverse().join('');\r\n        \r\n        if (lowerPassword.includes(seq) || lowerPassword.includes(reverseSeq)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Sanitise une chaîne pour éviter les injections\r\n   */\r\n  sanitizeString(input: string): string {\r\n    if (typeof input !== 'string') {\r\n      return '';\r\n    }\r\n\r\n    return input\r\n      .trim()\r\n      .replace(/[<>]/g, '') // Supprime les balises HTML basiques\r\n      .replace(/['\"]/g, '') // Supprime les guillemets pour éviter les injections SQL\r\n      .substring(0, 1000); // Limite la longueur\r\n  }\r\n\r\n  /**\r\n   * Valide et sanitise une entrée utilisateur\r\n   */\r\n  validateAndSanitizeInput(input: string, maxLength: number = 255): { value: string; isValid: boolean; errors: string[] } {\r\n    const errors: string[] = [];\r\n\r\n    if (!input) {\r\n      errors.push('La valeur est requise');\r\n      return { value: '', isValid: false, errors };\r\n    }\r\n\r\n    const sanitized = this.sanitizeString(input);\r\n\r\n    if (sanitized.length === 0) {\r\n      errors.push('La valeur contient des caractères non autorisés');\r\n    }\r\n\r\n    if (sanitized.length > maxLength) {\r\n      errors.push(`La valeur ne peut pas dépasser ${maxLength} caractères`);\r\n    }\r\n\r\n    return {\r\n      value: sanitized,\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Valide un numéro de téléphone\r\n   */\r\n  validatePhoneNumber(phone: string): ValidationResult {\r\n    const errors: string[] = [];\r\n\r\n    if (!phone) {\r\n      return { isValid: true, errors }; // Optionnel\r\n    }\r\n\r\n    // Pattern pour numéros internationaux\r\n    const phoneRegex = /^\\+?[1-9]\\d{1,14}$/;\r\n    const cleanPhone = phone.replace(/[\\s\\-\\(\\)\\.]/g, '');\r\n\r\n    if (!phoneRegex.test(cleanPhone)) {\r\n      errors.push('Format de numéro de téléphone invalide');\r\n    }\r\n\r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }\r\n}\r\n\r\n// Instance singleton\r\nexport const validationService = new ValidationService();\r\nexport default validationService;","module.exports = require(\"@supabase/supabase-js\");","module.exports = require(\"archiver\");","module.exports = require(\"crypto\");","module.exports = require(\"electron\");","module.exports = require(\"extract-zip\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"sqlite3\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main.ts\");\n",""],"names":[],"sourceRoot":""}